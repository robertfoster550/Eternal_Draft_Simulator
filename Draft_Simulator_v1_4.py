
# coding: utf-8

# In[1]:


import numpy as np
import PIL
import requests
import matplotlib
from IPython.display import clear_output

import csv
import random
from PIL import Image as im
from tkinter import *
import tkinter.ttk as ttk
from PIL import ImageTk
import json
import sys
import copy
import shutil
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
from functools import partial
import collections
from tkinter import filedialog
import math
import tkinter.messagebox as messagebox


# ###Original data file, which will be manipulated in the next couple cells.###
# 
# with open('eternal-cards.json') as json_file:
#     data = json.load(json_file)

# ###Used to take the relavent data from the JSON file.###
# 
# keys = []
# names = []
# rarity = []
# cost = []
# fire = []
# time = []
# justice = []
# primal = []
# shadow = []
# image = []
# rating = []
# type = []
# influence_amount = []
# 
# for x in range(len(data)):
#     if 'EternalID' in data[x]:
#         keys.append(str(data[x].get('SetNumber'))+'-'+str(data[x].get('EternalID')))
#     else:
#         keys.append(str(data[x].get('SetNumber'))+'-'+str(data[x].get('Name')))
#     names.append(data[x].get('Name'))
#     rarity.append(data[x].get('Rarity'))
#     cost.append(data[x].get('Cost'))
#     fire.append('F' in data[x].get('Influence'))
#     time.append('T' in data[x].get('Influence'))
#     justice.append('J' in data[x].get('Influence'))
#     primal.append('P' in data[x].get('Influence'))
#     shadow.append('S' in data[x].get('Influence'))
#     influence_amount.append(data[x].get('Influence'))
#     image.append('images/set'+str(data[x].get('SetNumber'))+'/'+str(data[x].get('ImageUrl').split("/")[5]))
#     type.append(data[x].get('Type'))
#     rating.append(1)

# ###Turns the relavent data into a single list that can be read by csv reader.###
# 
# card_data = []
# 
# for x in range(len(keys)):
#     card_data.append([keys[x],names[x],rarity[x],type[x],cost[x],influence_amount[x],fire[x],time[x],justice[x],primal[x],shadow[x],image[x],rating[x]])

# ###Used to create the file that is turned into a dictionary.###
# 
# csv.register_dialect('myDialect',
# delimiter = '|',
# quoting=csv.QUOTE_NONE,
# skipinitialspace=True)
# 
# with open('card_data.csv', 'w', newline='') as csvFile:
#     writer = csv.writer(csvFile, dialect='myDialect')
#     writer.writerows(card_data)
# csvFile.close()

# ###Make data dictionary.###
# 
# data_dict = {'format_name': ['1: The Empty Throne','2: Omens of the Past','3: The Dusk Road','4: The Fall of Argenport','5: Defiance','5b: Homecoming','6: Dark Frontier','6b: Trials of Grodov','6c: DF + FoX','7: The Flame of Xulta','7b: The Flame of Xulta v2'],'format_code': ['format1','format2','format3','format4','format5','format5b','format6','format6b','format6c','format7','format7b'],'format_sets': [['set1','set1','set1','set1'],['set2','set1','set2','set1'],['set3','set2','set1','set3'],['set4','cur4','cur4','set4'],['set5','cur5','cur5','set5'],['cur5b','set5','set5','cur5b'],['set6','cur6','cur6','set6'],['set6','cur6b','cur6b','set6'],['set6','cur6c','cur6c','set6'],['set7','cur7','cur7','set7'],['cur7b','set7','set7','cur7b']],'format_directions': [['L','R','L','R'],['L','R','L','R'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L']],'set_name': ['Set 0: The Empty Throne (Introductary Cards)', 'Set 1: The Empty Throne', 'Set 2: Omens ofthe Past', 'Set 3: The Dusk Road', 'Set 4: The Fall of Argenport', 'Set 5: Defiance', 'Set 6: Dark Frontier', 'Set 7: The Flame of Xulta', "Campaign 1: Jekk's Bounty", 'Campaign 2: The Tale of Horus Traver', 'Campaign 3: Dead Reckoning', 'Campaign 4: Into Shadow', 'Campaign 5: Homecoming', 'Campaign 6: Trials of Grodov', 'Eternal Draft Pack - Format 4', 'Eternal Draft Pack - Format 5', 'Eternal Draft Pack - Format 5b', 'Eternal Draft Pack - Format 6', 'Eternal Draft Pack - Format 6b', 'Eternal Draft Pack - Format 6c', 'Eternal Draft Pack - Format 7', 'Eternal Draft Pack - Format 7b'],'set_code': ['set0','set1','set2','set3','set4','set5','set6','set7','set1001','set1002','set1003','set1004','set1005','set1006','cur4','cur5','cur5b','cur6','cur6b','cur6c','cur7','cur7b'],'set_cards':[[['0-18', '0-4', '0-35', '0-15', '0-33', '0-24', '0-3', '0-11'], ['0-27', '0-62', '0-53', '0-54', '0-60', '0-58', '0-9', '0-55', '0-30', '0-51', '0-36', '0-14', '0-61', '0-56', '0-6', '0-63', '0-21'], [], [], [], []],[['1-278', '1-55', '1-501', '1-301', '1-407', '1-354', '1-190', '1-266', '1-74', '1-263', '1-197', '1-120', '1-419', '1-8', '1-41', '1-220', '1-95', '1-505', '1-75', '1-377', '1-414', '1-261', '1-194', '1-413', '1-200', '1-93', '1-331', '1-10', '1-392', '1-238', '1-421', '1-281', '1-410', '1-256', '1-33', '1-276', '1-158', '1-88', '1-4', '1-68', '1-504', '1-203', '1-226', '1-417', '1-424', '1-136', '1-134', '1-180', '1-357', '1-412', '1-218', '1-219', '1-129', '1-259', '1-102', '1-127', '1-270', '1-35', '1-77', '1-12', '1-30', '1-23', '1-427', '1-13', '1-159', '1-398', '1-91', '1-137', '1-409', '1-250', '1-260', '1-196', '1-17', '1-215', '1-150', '1-415', '1-321', '1-213', '1-101', '1-141', '1-191', '1-85', '1-201', '1-207', '1-288', '1-72', '1-411', '1-208', '1-80', '1-15', '1-69', '1-83', '1-330', '1-205', '1-265', '1-142', '1-264', '1-503', '1-130', '1-36', '1-302', '1-31', '1-212', '1-147', '1-254', '1-252', '1-73', '1-49', '1-209', '1-21', '1-37', '1-235', '1-162', '1-277', '1-135', '1-369', '1-408', '1-171', '1-114', '1-133', '1-153', '1-316', '1-284', '1-5', '1-44'], ['1-125', '1-319', '1-96', '1-291', '1-204', '1-356', '1-255', '1-43', '1-406', '1-156', '1-76', '1-360', '1-510', '1-71', '1-375', '1-132', '1-189', '1-46', '1-115', '1-426', '1-341', '1-290', '1-297', '1-379', '1-324', '1-257', '1-304', '1-396', '1-353', '1-283', '1-422', '1-98', '1-513', '1-217', '1-193', '1-206', '1-178', '1-108', '1-279', '1-517', '1-20', '1-214', '1-228', '1-167', '1-52', '1-160', '1-332', '1-395', '1-128', '1-404', '1-58', '1-230', '1-267', '1-282', '1-224', '1-315', '1-512', '1-374', '1-227', '1-42', '1-111', '1-274', '1-169', '1-89', '1-92', '1-416', '1-229', '1-27', '1-420', '1-146', '1-2', '1-289', '1-346', '1-82', '1-64', '1-275', '1-100', '1-195', '1-425', '1-211', '1-216', '1-192', '1-90', '1-269', '1-258', '1-40', '1-418', '1-29', '1-79', '1-273', '1-139', '1-25', '1-117', '1-502', '1-22', '1-113', '1-514', '1-240', '1-152', '1-318', '1-105', '1-131', '1-81', '1-381', '1-394', '1-28', '1-14', '1-148', '1-50', '1-143', '1-516', '1-176', '1-247', '1-222', '1-122', '1-236', '1-145', '1-184', '1-165', '1-53', '1-11', '1-333', '1-39', '1-423', '1-67', '1-225', '1-163', '1-32', '1-251', '1-70', '1-157', '1-262'], ['1-26', '1-292', '1-242', '1-386', '1-334', '1-78', '1-272', '1-340', '1-295', '1-168', '1-155', '1-287', '1-45', '1-322', '1-299', '1-371', '1-312', '1-286', '1-402', '1-253', '1-84', '1-382', '1-202', '1-16', '1-138', '1-358', '1-399', '1-368', '1-480', '1-241', '1-181', '1-183', '1-118', '1-48', '1-306', '1-188', '1-234', '1-237', '1-280', '1-243', '1-97', '1-19', '1-149', '1-170', '1-60', '1-364', '1-154', '1-223', '1-221', '1-372', '1-103', '1-3', '1-361', '1-294', '1-172', '1-9', '1-140', '1-337', '1-109', '1-339', '1-244', '1-18', '1-311', '1-320', '1-166', '1-86', '1-94', '1-66', '1-232', '1-327', '1-388', '1-175', '1-373', '1-359', '1-271', '1-336', '1-231', '1-151', '1-34', '1-144', '1-293', '1-506', '1-390', '1-121', '1-110', '1-210', '1-199', '1-268', '1-314', '1-38', '1-345', '1-112', '1-54', '1-488', '1-351', '1-300', '1-285', '1-104', '1-56', '1-363', '1-397'], ['1-107', '1-335', '1-248', '1-367', '1-51', '1-182', '1-347', '1-366', '1-338', '1-186', '1-62', '1-362', '1-99', '1-303', '1-317', '1-400', '1-174', '1-389', '1-326', '1-61', '1-177', '1-246', '1-383', '1-6', '1-355', '1-164', '1-365', '1-47', '1-380', '1-343', '1-403', '1-59', '1-329', '1-378', '1-348', '1-124', '1-350', '1-245', '1-309', '1-328', '1-384', '1-123', '1-323', '1-310', '1-307', '1-185', '1-385', '1-116', '1-239', '1-305', '1-391', '1-233', '1-387', '1-308', '1-119'], ['1-521', '1-511', '1-520', '1-518', '1-522', '1-519'], ['1-Direwood Beast', '1-Pig', '1-Sky Serpent', '1-Mithril Armor', "1-Dragon's Eye", '1-Sangu, Pale Rider', '1-Carnosaur', '1-Frog', '1-Muertis, Pale Rider', '1-Volan, Pale Rider', '1-1', '1-Rhinarc', '1-Gemblade', '1-Firebomb', '1-Puma', '1-Golem', '1-Iron Sword', '1-126', '1-Sentinel', '1-187', '1-Spiteling', '1-Titan', '1-Stormdancer', '1-Illusionary Dragon', '1-63', '1-249', '1-Obsidian Armor', '1-Occi, Pale Rider', '1-Owl', '1-Magmahound', '1-Snowball', '1-Grenadin', '1-Stone Cudgel', '1-Vengeful Gargoyle', '1-Serpent Hatchling', '1-The Tormentor', '1-Wisp']],[['2-238', '2-6', '2-3', '2-89', '2-47', '2-128', '2-147', '2-42', '2-151', '2-72', '2-194', '2-203', '2-74', '2-15', '2-232', '2-157', '2-169', '2-201', '2-217', '2-87', '2-117', '2-25', '2-111', '2-8', '2-246', '2-250', '2-61', '2-190', '2-122', '2-138', '2-156', '2-113', '2-121', '2-132', '2-106', '2-140', '2-103', '2-75', '2-77', '2-33', '2-145', '2-108', '2-247', '2-221', '2-251', '2-118', '2-123', '2-210', '2-37', '2-56', '2-171', '2-248', '2-88', '2-149', '2-27', '2-13', '2-150', '2-133', '2-66', '2-36', '2-26', '2-116', '2-31', '2-73', '2-55', '2-7', '2-165', '2-79', '2-141', '2-175', '2-176', '2-71', '2-82', '2-50', '2-198', '2-142', '2-68', '2-95', '2-186', '2-224', '2-155', '2-216', '2-70', '2-209', '2-184', '2-46', '2-99', '2-2', '2-54', '2-17', '2-231', '2-19', '2-57', '2-39', '2-244'], ['2-94', '2-163', '2-144', '2-162', '2-189', '2-131', '2-62', '2-124', '2-64', '2-96', '2-102', '2-137', '2-107', '2-76', '2-134', '2-60', '2-129', '2-104', '2-188', '2-139', '2-120', '2-20', '2-143', '2-236', '2-211', '2-10', '2-81', '2-16', '2-146', '2-69', '2-78', '2-172', '2-11', '2-24', '2-97', '2-52', '2-135', '2-177', '2-240', '2-161', '2-112', '2-43', '2-136', '2-202', '2-206', '2-51', '2-166', '2-205', '2-152', '2-29', '2-105', '2-45', '2-1', '2-18', '2-35', '2-44', '2-9', '2-168', '2-174', '2-219', '2-193', '2-227', '2-80', '2-220', '2-41', '2-153', '2-93', '2-23', '2-91', '2-243', '2-239', '2-4', '2-195', '2-58', '2-226', '2-180', '2-12', '2-115', '2-84', '2-53'], ['2-235', '2-182', '2-90', '2-21', '2-173', '2-237', '2-167', '2-14', '2-192', '2-170', '2-59', '2-85', '2-5', '2-233', '2-148', '2-126', '2-222', '2-114', '2-49', '2-223', '2-110', '2-181', '2-225', '2-200', '2-159', '2-158', '2-207', '2-63', '2-125', '2-109', '2-22', '2-241', '2-92', '2-213', '2-83', '2-228', '2-48', '2-40', '2-208', '2-160', '2-196', '2-28', '2-178', '2-86', '2-187', '2-249', '2-214'], ['2-212', '2-30', '2-164', '2-245', '2-253', '2-229', '2-230', '2-98', '2-197', '2-191', '2-185', '2-32', '2-199', '2-204', '2-67', '2-130', '2-154', '2-234', '2-101', '2-242', '2-218', '2-38', '2-215', '2-183', '2-179', '2-34', '2-127', '2-65', '2-100', '2-119'], ['2-256', '2-252', '2-255', '2-254'], ['2-Explorer', '2-Minotaur', '2-Urska, the Bear', '2-Animated Sentinel', '2-Dragon', '2-Hellhound', '2-Restless Radiant']],[['3-121', '3-232', '3-115', '3-153', '3-174', '3-106', '3-238', '3-9', '3-101', '3-169', '3-77', '3-222', '3-12', '3-83', '3-177', '3-201', '3-17', '3-25', '3-167', '3-145', '3-116', '3-195', '3-57', '3-180', '3-64', '3-142', '3-13', '3-6', '3-134', '3-102', '3-190', '3-204', '3-157', '3-223', '3-40', '3-151', '3-105', '3-98', '3-3', '3-168', '3-50', '3-199', '3-154', '3-176', '3-137', '3-54', '3-228', '3-79', '3-206', '3-224', '3-237', '3-213', '3-240', '3-29', '3-132', '3-139', '3-1', '3-202', '3-66', '3-108', '3-73', '3-231', '3-18', '3-219', '3-62', '3-68', '3-51', '3-229', '3-15', '3-171', '3-129', '3-38', '3-65', '3-2', '3-183', '3-63', '3-90', '3-74', '3-33', '3-114'], ['3-99', '3-203', '3-211', '3-111', '3-84', '3-109', '3-103', '3-166', '3-253', '3-185', '3-8', '3-104', '3-207', '3-216', '3-262', '3-22', '3-95', '3-32', '3-4', '3-156', '3-254', '3-128', '3-188', '3-42', '3-82', '3-269', '3-280', '3-274', '3-152', '3-164', '3-71', '3-72', '3-78', '3-165', '3-47', '3-58', '3-159', '3-39', '3-162', '3-214', '3-144', '3-55', '3-161', '3-208', '3-246', '3-234', '3-30', '3-258', '3-276', '3-24', '3-28', '3-241', '3-118', '3-182', '3-123', '3-117', '3-271', '3-70', '3-119', '3-198', '3-257', '3-11', '3-53', '3-233', '3-239', '3-150', '3-135', '3-45', '3-85', '3-218', '3-27', '3-127', '3-89', '3-112', '3-279', '3-260', '3-181', '3-209'], ['3-212', '3-264', '3-268', '3-189', '3-7', '3-230', '3-272', '3-270', '3-215', '3-69', '3-173', '3-26', '3-86', '3-23', '3-131', '3-126', '3-158', '3-81', '3-59', '3-14', '3-179', '3-56', '3-67', '3-35', '3-225', '3-210', '3-197', '3-261', '3-140', '3-107', '3-125', '3-94', '3-141', '3-205', '3-75', '3-110', '3-155', '3-61', '3-37', '3-160', '3-256', '3-10', '3-91', '3-133', '3-220', '3-259', '3-16', '3-163', '3-242', '3-226', '3-124', '3-122', '3-130', '3-193', '3-76', '3-251', '3-252', '3-267', '3-146', '3-217', '3-21', '3-19', '3-44', '3-266', '3-170', '3-191', '3-184', '3-20', '3-92', '3-178', '3-60', '3-34', '3-236', '3-273', '3-245', '3-227'], ['3-148', '3-275', '3-100', '3-249', '3-138', '3-88', '3-187', '3-247', '3-46', '3-277', '3-250', '3-192', '3-87', '3-31', '3-243', '3-80', '3-255', '3-194', '3-172', '3-48', '3-5', '3-96', '3-175', '3-143', '3-49', '3-93', '3-149', '3-221', '3-36', '3-113', '3-248', '3-196', '3-52', '3-278', '3-41', '3-235', '3-43', '3-97', '3-244', '3-136', '3-120', '3-186', '3-200', '3-263', '3-265', '3-147'], ['3-305', '3-302', '3-303', '3-304', '3-301'], ['3-Gilded Hammer', '3-Flying Squirrel', '3-Shattered Sentinel', '3-Cabal Extortion Scheme', '3-Valkyrie', '3-Fixit', '3-Jotun', '3-Sidearm', '3-Nyctophobia', '3-Hound', '3-Snowman', '3-Soldier', '3-Dinosaur', '3-Twilight Prowler', '3-Sandbind']],[['4-134', '4-38', '4-159', '4-61', '4-216', '4-16', '4-197', '4-36', '4-52', '4-22', '4-208', '4-95', '4-213', '4-233', '4-72', '4-161', '4-29', '4-214', '4-86', '4-170', '4-103', '4-167', '4-113', '4-146', '4-215', '4-148', '4-84', '4-54', '4-154', '4-12', '4-121', '4-163', '4-152', '4-133', '4-141', '4-66', '4-102', '4-4', '4-206', '4-175', '4-82', '4-149', '4-236', '4-74', '4-226', '4-186', '4-104', '4-109', '4-225', '4-182', '4-7', '4-34', '4-200', '4-207', '4-71', '4-35', '4-117', '4-23', '4-27', '4-46', '4-88', '4-124', '4-2', '4-45', '4-122', '4-212', '4-194', '4-135', '4-63', '4-190', '4-165', '4-189', '4-279', '4-53', '4-129', '4-219', '4-101', '4-64', '4-178', '4-238', '4-75', '4-18', '4-14', '4-116', '4-100', '4-59'], ['4-261', '4-267', '4-188', '4-257', '4-196', '4-78', '4-92', '4-176', '4-28', '4-90', '4-130', '4-151', '4-99', '4-220', '4-41', '4-32', '4-62', '4-259', '4-107', '4-252', '4-205', '4-139', '4-1', '4-51', '4-198', '4-241', '4-97', '4-276', '4-81', '4-160', '4-9', '4-65', '4-274', '4-234', '4-153', '4-132', '4-230', '4-119', '4-136', '4-232', '4-85', '4-254', '4-125', '4-39', '4-273', '4-47', '4-250', '4-11', '4-24', '4-172', '4-185', '4-111', '4-114', '4-157', '4-49', '4-221', '4-98', '4-195', '4-147', '4-272', '4-8', '4-6', '4-19', '4-118', '4-57', '4-40', '4-145', '4-193', '4-150', '4-77', '4-83', '4-209', '4-73', '4-171', '4-202', '4-142', '4-264', '4-26', '4-199', '4-210', '4-235', '4-245', '4-156', '4-177', '4-94', '4-89', '4-3', '4-162', '4-120'], ['4-275', '4-180', '4-106', '4-43', '4-211', '4-68', '4-217', '4-13', '4-70', '4-244', '4-248', '4-268', '4-131', '4-20', '4-56', '4-173', '4-10', '4-204', '4-183', '4-127', '4-60', '4-50', '4-231', '4-105', '4-112', '4-169', '4-80', '4-126', '4-243', '4-179', '4-253', '4-262', '4-224', '4-166', '4-123', '4-110', '4-251', '4-242', '4-278', '4-192', '4-227', '4-277', '4-263', '4-155', '4-255', '4-256', '4-21', '4-203', '4-5', '4-164', '4-76', '4-258', '4-69', '4-266', '4-25', '4-140', '4-247', '4-17', '4-218', '4-237', '4-271', '4-55', '4-30'], ['4-239', '4-128', '4-229', '4-181', '4-144', '4-48', '4-138', '4-158', '4-44', '4-174', '4-187', '4-249', '4-67', '4-115', '4-96', '4-58', '4-87', '4-270', '4-15', '4-42', '4-228', '4-33', '4-137', '4-222', '4-269', '4-93', '4-184', '4-201', '4-191', '4-168', '4-31', '4-91', '4-108', '4-79', '4-143', '4-223', '4-265', '4-240', '4-246', '4-260', '4-37'], ['4-309', '4-307', '4-310', '4-306', '4-308'], ['4-Little Brother', '4-Shugo Tactic', '4-Disciplinary Weights', '4-Scorpion Trap', '4-Guard Tower', '4-Crownwatch Tactic', '4-Temple Tactic', "4-Fear's Sum", '4-Marionette', '4-Inferiority Complex', '4-Sheep', '4-Flamefang', '4-Sand Wurm', '4-Monk', '4-Brand, Without Fear', '4-Cabal Tactic', '4-Clan Tactic']],[['5-255', '5-234', '5-27', '5-184', '5-10', '5-174', '5-246', '5-70', '5-150', '5-229', '5-41', '5-73', '5-108', '5-142', '5-42', '5-121', '5-122', '5-14', '5-236', '5-82', '5-177', '5-7', '5-113', '5-84', '5-251', '5-38', '5-253', '5-16', '5-214', '5-91', '5-54', '5-134', '5-172', '5-248', '5-137', '5-252', '5-80', '5-39', '5-238', '5-103', '5-115', '5-166', '5-4', '5-52', '5-163', '5-120', '5-160', '5-159', '5-226', '5-243', '5-119', '5-196', '5-61', '5-37', '5-220', '5-241', '5-202', '5-78', '5-92', '5-157', '5-256', '5-5', '5-15', '5-75', '5-127', '5-231', '5-149', '5-1', '5-87', '5-96', '5-208', '5-67', '5-28', '5-112', '5-46'], ['5-107', '5-62', '5-81', '5-6', '5-116', '5-192', '5-254', '5-99', '5-222', '5-239', '5-126', '5-151', '5-35', '5-165', '5-53', '5-104', '5-132', '5-154', '5-138', '5-64', '5-97', '5-30', '5-83', '5-60', '5-207', '5-162', '5-94', '5-102', '5-31', '5-153', '5-45', '5-66', '5-141', '5-194', '5-201', '5-211', '5-114', '5-47', '5-233', '5-167', '5-158', '5-244', '5-125', '5-152', '5-191', '5-228', '5-22', '5-49', '5-34', '5-147', '5-187', '5-156', '5-131', '5-59', '5-100', '5-13', '5-88', '5-48', '5-8', '5-128', '5-176', '5-173', '5-216', '5-135', '5-44', '5-170', '5-140', '5-2', '5-58', '5-249', '5-23', '5-77', '5-123', '5-181', '5-79', '5-93', '5-3', '5-188', '5-11', '5-65', '5-24'], ['5-98', '5-69', '5-95', '5-232', '5-19', '5-185', '5-225', '5-217', '5-223', '5-175', '5-76', '5-130', '5-218', '5-50', '5-199', '5-139', '5-117', '5-161', '5-221', '5-197', '5-215', '5-168', '5-55', '5-26', '5-206', '5-105', '5-90', '5-209', '5-143', '5-51', '5-12', '5-86', '5-32', '5-9', '5-145', '5-129', '5-43', '5-25', '5-237', '5-68', '5-29', '5-118', '5-212', '5-247', '5-106', '5-85', '5-180', '5-227', '5-136', '5-204', '5-155', '5-205', '5-71', '5-242', '5-178', '5-179', '5-33', '5-40', '5-210', '5-198'], ['5-224', '5-110', '5-36', '5-189', '5-186', '5-230', '5-182', '5-133', '5-250', '5-72', '5-190', '5-63', '5-195', '5-148', '5-144', '5-124', '5-57', '5-89', '5-183', '5-101', '5-17', '5-203', '5-20', '5-18', '5-213', '5-171', '5-56', '5-219', '5-21', '5-200', '5-111', '5-240', '5-164', '5-74', '5-169', '5-109', '5-245', '5-193', '5-146', '5-235'], ['5-314', '5-311', '5-312', '5-313', '5-315'], ['5-Skycrag Goad', '5-Glacial Monstrosity', '5-Dark Elf', '5-Ixtun Contraband', '5-Fire Animated Sentinel', '5-Bladebreaker', "5-Brel's Mallet", '5-Winchest Contraband', "5-Poacher's Rifle", '5-Kerendon Contraband', '5-Viper Fang', '5-Whirly-Twirly', '5-Ruin Stalker', '5-Wildcat', '5-Jennev Contraband', '5-Treasure Trove', '5-Molten Phoenix', '5-Rust Fiend', "5-Sanity's Anathema", '5-Time Animated Sentinel', '5-Auralian Contraband', '5-Steel Golem', '5-Watchman']],[['6-95', '6-124', '6-200', '6-136', '6-166', '6-179', '6-150', '6-148', '6-10', '6-87', '6-110', '6-225', '6-195', '6-46', '6-78', '6-146', '6-118', '6-91', '6-55', '6-72', '6-107', '6-66', '6-119', '6-112', '6-188', '6-37', '6-4', '6-81', '6-104', '6-79', '6-47', '6-189', '6-163', '6-31', '6-1', '6-26', '6-122', '6-216', '6-170', '6-60', '6-129', '6-184', '6-210', '6-69', '6-183', '6-56', '6-205', '6-139', '6-182', '6-93', '6-167', '6-12', '6-96', '6-172', '6-105', '6-5', '6-3', '6-138', '6-149', '6-25', '6-82', '6-114', '6-181', '6-7', '6-2', '6-23', '6-155', '6-58', '6-50', '6-197', '6-224', '6-11', '6-213', '6-177', '6-41'], ['6-15', '6-90', '6-212', '6-230', '6-238', '6-143', '6-176', '6-94', '6-133', '6-140', '6-185', '6-8', '6-13', '6-83', '6-86', '6-45', '6-161', '6-232', '6-80', '6-214', '6-160', '6-99', '6-76', '6-108', '6-199', '6-106', '6-228', '6-211', '6-109', '6-194', '6-97', '6-61', '6-186', '6-173', '6-101', '6-201', '6-164', '6-51', '6-147', '6-52', '6-127', '6-63', '6-141', '6-145', '6-226', '6-192', '6-71', '6-234', '6-27', '6-70', '6-198', '6-20', '6-126', '6-153', '6-44', '6-102', '6-196', '6-19', '6-21', '6-17', '6-73', '6-191', '6-171', '6-34', '6-152', '6-40', '6-121', '6-132', '6-32', '6-100', '6-219', '6-190', '6-18', '6-65', '6-158', '6-116', '6-137', '6-221', '6-67', '6-16', '6-53'], ['6-92', '6-165', '6-227', '6-178', '6-22', '6-48', '6-135', '6-130', '6-14', '6-24', '6-180', '6-220', '6-128', '6-54', '6-154', '6-231', '6-156', '6-202', '6-157', '6-6', '6-120', '6-237', '6-77', '6-9', '6-229', '6-142', '6-38', '6-223', '6-187', '6-206', '6-85', '6-30', '6-235', '6-98', '6-88', '6-62', '6-193', '6-208', '6-151', '6-236', '6-115', '6-233', '6-74', '6-64', '6-123', '6-215', '6-35'], ['6-111', '6-117', '6-159', '6-175', '6-43', '6-209', '6-29', '6-222', '6-125', '6-217', '6-39', '6-134', '6-203', '6-204', '6-42', '6-113', '6-144', '6-68', '6-75', '6-49', '6-103', '6-168', '6-33', '6-59', '6-131', '6-174', '6-28', '6-84', '6-89', '6-162', '6-218', '6-207', '6-57', '6-169', '6-36'], ['6-316', '6-317', '6-319', '6-318'], ['6-Arc Dragon', '6-Pulsing Blob', '6-Timidity', '6-Curse of Provocation', '6-Premonition Bolt', '6-Ravenous Wurm', '6-Shingane Mark', '6-Shardling', '6-Alarming Findings', '6-Emerald Incarnation', '6-Headshot', '6-Disfigure', '6-Kesava, Trueheart', '6-Sewer Kraken', '6-Clan Warrior']],[['7-49', '7-103', '7-81', '7-37', '7-9', '7-128', '7-104', '7-96', '7-211', '7-43', '7-174', '7-17', '7-137', '7-105', '7-62', '7-100', '7-87', '7-145', '7-136', '7-70', '7-170', '7-192', '7-22', '7-185', '7-124', '7-64', '7-164', '7-126', '7-65', '7-6', '7-56', '7-102', '7-125', '7-127', '7-86', '7-147', '7-51', '7-129', '7-92', '7-14', '7-40', '7-120', '7-55', '7-4', '7-16', '7-181', '7-73', '7-26', '7-72', '7-5', '7-74', '7-48', '7-50', '7-157', '7-134', '7-118', '7-111', '7-154', '7-20', '7-197', '7-39', '7-78', '7-33', '7-113', '7-203', '7-7'], ['7-59', '7-68', '7-27', '7-41', '7-179', '7-12', '7-77', '7-162', '7-45', '7-178', '7-141', '7-143', '7-76', '7-138', '7-36', '7-173', '7-187', '7-75', '7-25', '7-140', '7-123', '7-8', '7-184', '7-156', '7-28', '7-142', '7-82', '7-63', '7-214', '7-212', '7-93', '7-35', '7-97', '7-191', '7-13', '7-44', '7-89', '7-151', '7-57', '7-114', '7-85', '7-168', '7-130', '7-195', '7-158', '7-23', '7-99', '7-132', '7-95', '7-38', '7-101', '7-106', '7-3', '7-46', '7-202', '7-196', '7-98', '7-24', '7-79', '7-109', '7-131', '7-163'], ['7-183', '7-199', '7-188', '7-1', '7-133', '7-108', '7-204', '7-84', '7-15', '7-122', '7-90', '7-171', '7-119', '7-34', '7-166', '7-193', '7-52', '7-152', '7-160', '7-21', '7-180', '7-29', '7-139', '7-66', '7-135', '7-165', '7-175', '7-159', '7-201', '7-198', '7-11', '7-19', '7-42', '7-61', '7-176', '7-153', '7-91', '7-149', '7-32', '7-69', '7-169', '7-80', '7-186', '7-190', '7-31', '7-110', '7-58', '7-115', '7-112', '7-121'], ['7-18', '7-116', '7-155', '7-205', '7-2', '7-182', '7-67', '7-60', '7-88', '7-54', '7-200', '7-209', '7-167', '7-71', '7-107', '7-10', '7-144', '7-146', '7-210', '7-150', '7-53', '7-94', '7-83', '7-194', '7-207', '7-117', '7-47', '7-161', '7-189', '7-208', '7-213', '7-172', '7-206', '7-148', '7-177', '7-30'], ['7-320'], ['7-Oni Grunt', '7-Raven', '7-Wind Elemental', '7-Ash Elemental', '7-Death Elemental', '7-Ice Elemental', '7-Xultan Cultist', '7-Nakova & Molot', '7-Totemite Pup', '7-Earth Elemental', '7-Living Wave', '7-Mark of the Forge', '7-Varret the Wise', '7-Luckbreaker Gryffyn', '7-Varret the Mighty', '7-Curse of Loneliness', '7-Nihil Draconus', '7-Varret the Stealthy']],[[], ['1001-7', '1001-6', '1001-1', '1001-15'], ['1001-12', '1001-2', '1001-14', '1001-5', '1001-3', '1001-8', '1001-9', '1001-13', '1001-4'], ['1001-10', '1001-16', '1001-11'], [], ['1001-Honed Blade']],[[], ['1002-22', '1002-2', '1002-20', '1002-15', '1002-5', '1002-14', '1002-1', '1002-4'], ['1002-7', '1002-6', '1002-8', '1002-12', '1002-16', '1002-9', '1002-13', '1002-23', '1002-11', '1002-19', '1002-17'], ['1002-21', '1002-10', '1002-3', '1002-18'], [], ['1002-Avatar of Winds', '1002-Unseen Disciple', '1002-Omen of Austerity']],[[], ['1003-9', '1003-1', '1003-6', '1003-13', '1003-21', '1003-3', '1003-19', '1003-10'], ['1003-18', '1003-11', '1003-8', '1003-4', '1003-14', '1003-25', '1003-17', '1003-20', '1003-22', '1003-24', '1003-16', '1003-2'], ['1003-15', '1003-7', '1003-5', '1003-12', '1003-23'], [], ['1003-Dirty Rat', '1003-Bridled Sandstrider']],[[], ['1004-1', '1004-13', '1004-10', '1004-16', '1004-9', '1004-5', '1004-11', '1004-17', '1004-18'], ['1004-22', '1004-2', '1004-20', '1004-23', '1004-6', '1004-7', '1004-14', '1004-3', '1004-8', '1004-4'], ['1004-15', '1004-21', '1004-19', '1004-12'], [], ['1004-Xulta Exile', '1004-Helici', '1004-Goat', '1004-Razortooth Aranha', '1004-Word of Sol']],[[], ['1005-2', '1005-19', '1005-13', '1005-6', '1005-5', '1005-14', '1005-1', '1005-15', '1005-17'], ['1005-9', '1005-18', '1005-16', '1005-10', '1005-11', '1005-4', '1005-26', '1005-22', '1005-23', '1005-24', '1005-25', '1005-20'], ['1005-7', '1005-8', '1005-21', '1005-12', '1005-3'], [], ['1005-Clandestine Shotgun']],[['1006-5', '1006-17', '1006-1', '1006-14', '1006-10'], ['1006-7', '1006-19', '1006-13', '1006-9', '1006-4'], ['1006-18', '1006-15', '1006-12', '1006-3', '1006-6'], ['1006-2', '1006-16', '1006-8', '1006-20', '1006-11'], [], []],[['1-5', '1-8', '1-10', '1-13', '1-17', '1-23', '1-31', '1-36', '1-37', '1-68', '1-75', '1-77', '1-80', '1-91', '1-93', '1-102', '1-127', '1-130', '1-133', '1-135', '1-141', '1-147', '1-150', '1-162', '1-191', '1-196', '1-197', '1-200', '1-203', '1-205', '1-207', '1-208', '1-215', '1-218', '1-235', '1-250', '1-252', '1-259', '1-261', '1-264', '1-278', '1-281', '1-321', '1-330', '1-354', '1-377', '1-392', '1-408', '1-414', '1-415', '1-417', '1-419', '1-421', '1-424', '1-427', '2-13', '2-17', '2-26', '2-27', '2-37', '2-47', '2-50', '2-61', '2-66', '2-68', '2-70', '2-73', '2-75', '2-89', '2-95', '2-116', '2-122', '2-133', '2-147', '2-151', '2-156', '2-165', '2-171', '2-184', '2-186', '2-190', '2-201', '2-203', '2-216', '2-217', '2-231', '2-238', '3-1', '3-2', '3-3', '3-6', '3-9', '3-13', '3-38', '3-51', '3-63', '3-64', '3-66', '3-68', '3-77', '3-101', '3-108', '3-115', '3-116', '3-134', '3-137', '3-145', '3-151', '3-154', '3-168', '3-177', '3-183', '3-195', '3-201', '3-204', '3-213', '3-219', '3-222', '3-228', '3-232', '3-237', '3-238'], ['1-20', '1-27', '1-28', '1-32', '1-39', '1-46', '1-67', '1-70', '1-71', '1-79', '1-82', '1-89', '1-96', '1-105', '1-115', '1-117', '1-128', '1-132', '1-139', '1-143', '1-146', '1-152', '1-156', '1-157', '1-167', '1-189', '1-192', '1-204', '1-206', '1-211', '1-217', '1-222', '1-227', '1-240', '1-255', '1-257', '1-262', '1-267', '1-269', '1-273', '1-282', '1-324', '1-332', '1-353', '1-360', '1-374', '1-375', '1-396', '1-512', '1-514', '2-11', '2-23', '2-29', '2-35', '2-41', '2-76', '2-105', '2-129', '2-166', '2-177', '2-180', '2-188', '2-206', '2-220', '2-236', '3-4', '3-8', '3-22', '3-27', '3-39', '3-42', '3-53', '3-55', '3-58', '3-71', '3-85', '3-103', '3-112', '3-117', '3-119', '3-128', '3-152', '3-161', '3-165', '3-166', '3-182', '3-185', '3-188', '3-207', '3-208', '3-209', '3-214', '3-216', '3-218', '3-233', '3-234', '3-254', '3-257', '3-258', '3-262', '3-269', '3-271', '3-274', '3-279'], ['1-16', '1-26', '1-34', '1-48', '1-54', '1-60', '1-78', '1-84', '1-86', '1-94', '1-97', '1-103', '1-109', '1-110', '1-118', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-168', '1-170', '1-172', '1-175', '1-202', '1-221', '1-231', '1-234', '1-241', '1-242', '1-244', '1-272', '1-280', '1-287', '1-292', '1-294', '1-299', '1-306', '1-314', '1-320', '1-322', '1-334', '1-336', '1-345', '1-351', '1-358', '1-371', '1-386', '1-399', '1-402', '1-488', '1-506', '2-5', '2-14', '2-21', '2-22', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-86', '2-90', '2-92', '2-114', '2-126', '2-158', '2-159', '2-167', '2-173', '2-182', '2-187', '2-192', '2-207', '2-208', '2-213', '2-222', '2-223', '2-225', '2-235', '2-237', '3-7', '3-14', '3-16', '3-19', '3-23', '3-26', '3-37', '3-56', '3-60', '3-69', '3-91', '3-122', '3-131', '3-140', '3-155', '3-158', '3-160', '3-163', '3-170', '3-173', '3-178', '3-205', '3-212', '3-215', '3-217', '3-220', '3-226', '3-236', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268'], ['1-6', '1-47', '1-59', '1-99', '1-116', '1-174', '1-177', '1-182', '1-186', '1-233', '1-239', '1-248', '1-303', '1-305', '1-309', '1-310', '1-317', '1-323', '1-326', '1-328', '1-335', '1-338', '1-343', '1-347', '1-350', '1-355', '1-362', '1-365', '1-367', '1-380', '1-383', '1-384', '1-385', '1-389', '1-391', '1-403', '2-30', '2-32', '2-34', '2-38', '2-67', '2-101', '2-119', '2-127', '2-154', '2-164', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-215', '2-218', '2-229', '2-230', '2-234', '2-242', '2-245', '3-5', '3-31', '3-41', '3-43', '3-46', '3-49', '3-52', '3-80', '3-87', '3-88', '3-93', '3-96', '3-97', '3-100', '3-113', '3-120', '3-136', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-243', '3-244', '3-247', '3-248', '3-250', '3-255', '3-263', '3-265', '3-275', '3-277', '3-278'], [], []],[['1-4', '1-5', '1-13', '1-21', '1-30', '1-31', '1-33', '1-37', '1-41', '1-73', '1-75', '1-77', '1-91', '1-101', '1-120', '1-130', '1-134', '1-142', '1-147', '1-150', '1-158', '1-162', '1-171', '1-180', '1-197', '1-200', '1-205', '1-209', '1-215', '1-218', '1-226', '1-235', '1-238', '1-250', '1-252', '1-261', '1-265', '1-276', '1-278', '1-288', '1-301', '1-321', '1-357', '1-407', '1-408', '1-411', '1-412', '1-417', '1-419', '1-421', '1-424', '1-427', '1-504', '2-3', '2-8', '2-15', '2-55', '2-56', '2-68', '2-73', '2-95', '2-103', '2-108', '2-118', '2-138', '2-145', '2-149', '2-150', '2-169', '2-171', '2-186', '2-198', '2-201', '2-209', '2-216', '2-231', '2-238', '2-246', '2-250', '2-251', '3-2', '3-18', '3-29', '3-40', '3-57', '3-62', '3-63', '3-65', '3-74', '3-108', '3-139', '3-154', '3-174', '3-176', '3-204', '3-231', '3-238', '4-14', '4-16', '4-36', '4-54', '4-61', '4-66', '4-74', '4-86', '4-101', '4-104', '4-109', '4-133', '4-146', '4-152', '4-154', '4-175', '4-207', '4-213', '4-216', '4-226'], ['1-2', '1-14', '1-20', '1-29', '1-32', '1-46', '1-52', '1-53', '1-58', '1-67', '1-71', '1-81', '1-89', '1-96', '1-98', '1-105', '1-115', '1-117', '1-122', '1-125', '1-132', '1-139', '1-146', '1-148', '1-156', '1-160', '1-184', '1-193', '1-204', '1-214', '1-216', '1-217', '1-224', '1-227', '1-240', '1-247', '1-251', '1-258', '1-269', '1-275', '1-279', '1-291', '1-324', '1-346', '1-353', '1-379', '1-396', '1-406', '2-9', '2-16', '2-23', '2-29', '2-45', '2-76', '2-78', '2-80', '2-94', '2-105', '2-112', '2-115', '2-131', '2-134', '2-135', '2-136', '2-139', '2-146', '2-166', '2-174', '2-188', '2-195', '2-205', '2-206', '2-220', '2-236', '3-22', '3-24', '3-28', '3-39', '3-47', '3-53', '3-70', '3-72', '3-78', '3-82', '3-85', '3-89', '3-109', '3-112', '3-123', '3-127', '3-135', '3-144', '3-165', '3-211', '3-214', '3-216', '3-233', '3-241', '3-253', '3-274', '3-280', '4-11', '4-24', '4-26', '4-41', '4-47', '4-51', '4-62', '4-65', '4-73', '4-83', '4-111', '4-119', '4-130', '4-132', '4-136', '4-147', '4-151', '4-157', '4-162', '4-171', '4-185', '4-195', '4-196', '4-202', '4-209', '4-210', '4-220', '4-221', '4-232', '4-235', '4-245', '4-250', '4-252', '4-254', '4-261', '4-264', '4-272', '4-276'], ['1-3', '1-18', '1-26', '1-34', '1-38', '1-45', '1-66', '1-84', '1-97', '1-103', '1-104', '1-109', '1-118', '1-121', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-170', '1-175', '1-199', '1-202', '1-210', '1-234', '1-241', '1-242', '1-244', '1-268', '1-272', '1-280', '1-285', '1-286', '1-292', '1-293', '1-294', '1-306', '1-312', '1-322', '1-336', '1-358', '1-359', '1-363', '1-371', '1-373', '1-397', '1-480', '2-5', '2-14', '2-22', '2-40', '2-49', '2-85', '2-86', '2-109', '2-110', '2-114', '2-126', '2-148', '2-159', '2-167', '2-173', '2-187', '2-192', '2-200', '2-207', '2-213', '2-222', '2-223', '2-235', '2-237', '3-7', '3-10', '3-14', '3-21', '3-23', '3-37', '3-44', '3-60', '3-67', '3-76', '3-81', '3-91', '3-107', '3-131', '3-140', '3-155', '3-158', '3-170', '3-205', '3-220', '3-226', '3-236', '3-252', '3-256', '3-259', '4-5', '4-17', '4-20', '4-21', '4-30', '4-43', '4-50', '4-56', '4-60', '4-68', '4-69', '4-70', '4-76', '4-105', '4-106', '4-110', '4-112', '4-123', '4-126', '4-127', '4-140', '4-164', '4-166', '4-169', '4-173', '4-179', '4-180', '4-183', '4-192', '4-203', '4-211', '4-217', '4-218', '4-224', '4-237', '4-256', '4-263', '4-268', '4-275', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-116', '1-119', '1-164', '1-174', '1-177', '1-182', '1-186', '1-233', '1-248', '1-303', '1-305', '1-307', '1-308', '1-309', '1-317', '1-323', '1-328', '1-335', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-383', '1-384', '1-389', '1-391', '2-32', '2-34', '2-100', '2-119', '2-154', '2-179', '2-183', '2-185', '2-197', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-5', '3-31', '3-41', '3-43', '3-48', '3-49', '3-52', '3-80', '3-88', '3-96', '3-97', '3-113', '3-120', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-192', '3-194', '3-196', '3-243', '3-247', '3-248', '3-249', '3-255', '3-265', '3-278', '4-31', '4-33', '4-37', '4-48', '4-58', '4-67', '4-79', '4-87', '4-93', '4-96', '4-108', '4-115', '4-128', '4-144', '4-158', '4-168', '4-174', '4-181', '4-184', '4-191', '4-201', '4-222', '4-223', '4-229', '4-240', '4-249', '4-260', '4-265', '4-269', '4-270'], [], []],[['1-4', '1-5', '1-31', '1-33', '1-37', '1-75', '1-91', '1-120', '1-130', '1-141', '1-150', '1-162', '1-171', '1-180', '1-190', '1-191', '1-203', '1-215', '1-250', '1-260', '1-261', '1-407', '1-408', '1-417', '1-419', '1-421', '1-424', '1-427', '2-3', '2-73', '2-89', '2-108', '2-118', '2-132', '2-142', '2-149', '2-151', '2-169', '2-171', '2-186', '2-201', '2-216', '2-231', '3-3', '3-13', '3-17', '3-25', '3-29', '3-33', '3-40', '3-50', '3-57', '3-62', '3-64', '3-65', '3-66', '3-68', '3-73', '3-77', '3-83', '3-90', '3-98', '3-105', '3-108', '3-114', '3-116', '3-137', '3-145', '3-169', '3-174', '3-176', '3-177', '3-183', '3-195', '3-199', '3-206', '3-228', '3-229', '3-232', '3-237', '3-240', '4-16', '4-66', '4-109', '4-190', '4-200', '4-206'], ['1-20', '1-28', '1-29', '1-32', '1-39', '1-53', '1-67', '1-81', '1-96', '1-113', '1-122', '1-125', '1-128', '1-143', '1-157', '1-160', '1-184', '1-216', '1-222', '1-225', '1-267', '1-269', '1-273', '1-279', '1-282', '1-283', '1-290', '1-332', '1-346', '1-374', '1-381', '1-396', '1-406', '1-513', '2-9', '2-45', '2-53', '2-80', '2-81', '2-91', '2-93', '2-115', '2-135', '2-143', '2-146', '2-180', '2-193', '2-205', '2-206', '2-220', '2-239', '3-22', '3-24', '3-28', '3-30', '3-42', '3-45', '3-53', '3-55', '3-70', '3-72', '3-78', '3-85', '3-95', '3-99', '3-109', '3-117', '3-123', '3-127', '3-156', '3-162', '3-185', '3-188', '3-198', '3-214', '3-233', '3-241', '3-246', '3-253', '3-254', '3-257', '3-260', '3-274', '3-279', '3-280', '4-8', '4-24', '4-32', '4-132', '4-139', '4-150', '4-153', '4-157', '4-162', '4-171', '4-210', '4-232', '4-245', '4-254', '4-264', '4-273', '4-276'], ['1-3', '1-18', '1-19', '1-26', '1-38', '1-56', '1-66', '1-78', '1-103', '1-118', '1-138', '1-140', '1-149', '1-166', '1-170', '1-199', '1-210', '1-223', '1-234', '1-241', '1-268', '1-285', '1-294', '1-300', '1-314', '1-322', '1-336', '1-339', '1-359', '1-363', '1-371', '1-390', '1-397', '1-402', '1-480', '1-488', '1-506', '2-21', '2-48', '2-85', '2-92', '2-110', '2-148', '2-173', '2-187', '2-207', '2-213', '2-223', '2-233', '2-235', '3-10', '3-14', '3-19', '3-21', '3-34', '3-37', '3-44', '3-59', '3-67', '3-76', '3-86', '3-91', '3-92', '3-94', '3-130', '3-131', '3-140', '3-155', '3-158', '3-163', '3-170', '3-178', '3-179', '3-197', '3-205', '3-215', '3-217', '3-220', '3-230', '3-252', '3-256', '3-272', '4-5', '4-13', '4-17', '4-21', '4-50', '4-70', '4-80', '4-106', '4-112', '4-126', '4-127', '4-131', '4-169', '4-183', '4-203', '4-217', '4-218', '4-224', '4-227', '4-251', '4-258', '4-262', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-119', '1-164', '1-174', '1-182', '1-248', '1-303', '1-310', '1-317', '1-326', '1-328', '1-343', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-384', '1-389', '1-403', '2-32', '2-100', '2-101', '2-154', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-31', '3-36', '3-43', '3-48', '3-49', '3-52', '3-87', '3-96', '3-97', '3-100', '3-120', '3-136', '3-138', '3-143', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-247', '3-248', '3-250', '3-265', '3-275', '3-277', '3-278', '4-31', '4-33', '4-67', '4-93', '4-137', '4-158', '4-174', '4-181', '4-191', '4-223', '4-228', '4-229', '4-249', '4-260', '4-269', '4-270'], [], []],[['1-15', '1-21', '1-30', '1-91', '1-133', '1-135', '1-147', '1-158', '1-171', '1-197', '1-200', '1-209', '1-213', '1-215', '1-235', '1-238', '1-250', '1-256', '1-263', '1-265', '1-301', '1-407', '1-408', '1-414', '1-501', '1-503', '1-504', '2-6', '2-7', '2-19', '2-26', '2-27', '2-36', '2-37', '2-46', '2-55', '2-57', '2-61', '2-75', '2-89', '2-103', '2-111', '2-118', '2-132', '2-151', '2-155', '2-169', '3-3', '3-15', '3-62', '3-102', '3-153', '3-174', '3-176', '4-4', '4-22', '4-29', '4-34', '4-54', '4-59', '4-63', '4-71', '4-75', '4-86', '4-100', '4-102', '4-103', '4-116', '4-135', '4-163', '4-165', '4-207', '4-212', '5-15', '5-27', '5-84', '5-87', '5-113', '5-150', '5-157', '5-160', '5-166', '5-184', '5-251', '5-253'], ['0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-2', '1-22', '1-25', '1-39', '1-46', '1-67', '1-70', '1-71', '1-76', '1-96', '1-98', '1-105', '1-131', '1-148', '1-152', '1-163', '1-178', '1-193', '1-195', '1-204', '1-216', '1-224', '1-247', '1-251', '1-258', '1-275', '1-282', '1-297', '1-304', '1-406', '1-425', '1-514', '2-4', '2-9', '2-11', '2-18', '2-23', '2-29', '2-41', '2-52', '2-53', '2-64', '2-96', '2-105', '2-131', '2-134', '2-144', '3-11', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-280', '4-1', '4-3', '4-8', '4-9', '4-26', '4-49', '4-73', '4-78', '4-85', '4-94', '4-97', '4-107', '4-119', '4-130', '4-136', '4-139', '4-145', '4-147', '4-150', '4-177', '4-193', '4-196', '4-199', '4-221', '4-232', '4-234', '4-276', '5-44', '5-47', '5-58', '5-65', '5-77', '5-97', '5-102', '5-116', '5-131', '5-141', '5-153', '5-156', '5-170', '5-181'], ['1-34', '1-45', '1-60', '1-66', '1-86', '1-97', '1-103', '1-121', '1-138', '1-144', '1-151', '1-155', '1-166', '1-168', '1-183', '1-199', '1-202', '1-223', '1-232', '1-241', '1-244', '1-268', '1-272', '1-286', '1-292', '1-293', '1-294', '1-320', '1-339', '1-363', '1-386', '1-390', '1-402', '1-480', '1-488', '1-506', '2-5', '2-28', '2-63', '2-85', '2-126', '2-159', '2-182', '2-200', '2-225', '3-14', '3-21', '3-37', '3-60', '3-61', '3-91', '3-107', '3-133', '3-170', '3-193', '3-212', '3-226', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268', '4-10', '4-17', '4-21', '4-25', '4-43', '4-50', '4-68', '4-70', '4-110', '4-123', '4-126', '4-127', '4-166', '4-169', '4-217', '4-218', '4-237', '4-242', '4-243', '4-247', '4-248', '4-253', '4-255', '4-256', '4-262', '4-266', '4-268', '4-275', '4-278', '5-26', '5-29', '5-33', '5-55', '5-68', '5-71', '5-85', '5-105', '5-117', '5-118', '5-129', '5-145', '5-175', '5-178', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-99', '1-107', '1-119', '1-123', '1-164', '1-177', '1-186', '1-239', '1-246', '1-248', '1-303', '1-305', '1-309', '1-310', '1-328', '1-338', '1-343', '1-362', '1-380', '1-384', '1-389', '1-400', '2-30', '2-32', '2-34', '2-67', '2-183', '2-185', '2-191', '2-204', '2-218', '2-230', '2-253', '3-5', '3-36', '3-41', '3-49', '3-52', '3-87', '3-88', '3-93', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-235', '3-243', '3-248', '3-265', '4-15', '4-31', '4-44', '4-58', '4-91', '4-128', '4-138', '4-143', '4-158', '4-181', '4-184', '4-187', '4-191', '4-223', '4-239', '5-20', '5-36', '5-56', '5-74', '5-109', '5-110', '5-111', '5-146', '5-148', '5-169', '5-171', '5-182', '5-183', '5-200', '5-203', '5-213', '5-219', '5-224'], [], []],[['1-5', '1-41', '1-91', '1-133', '1-136', '1-162', '1-197', '1-213', '1-220', '1-250', '1-261', '1-264', '1-278', '1-330', '1-357', '1-369', '1-392', '1-407', '1-408', '1-409', '1-410', '1-411', '1-412', '1-413', '1-414', '1-417', '1-419', '1-421', '1-424', '1-427', '2-7', '2-19', '2-31', '2-46', '2-50', '2-57', '2-70', '2-75', '2-89', '2-103', '2-111', '2-138', '2-171', '2-175', '2-186', '2-201', '2-209', '2-216', '2-224', '2-231', '2-238', '2-246', '2-247', '2-248', '2-250', '2-251', '3-15', '3-40', '3-63', '3-65', '3-102', '3-153', '3-154', '3-174', '3-206', '4-22', '4-34', '4-35', '4-45', '4-46', '4-52', '4-59', '4-63', '4-71', '4-75', '4-82', '4-86', '4-100', '4-103', '4-121', '4-122', '4-135', '4-163', '4-167', '4-175', '4-182', '4-189', '4-197', '4-212', '4-213', '4-219', '4-236', '5-4', '5-5', '5-7', '5-28', '5-39', '5-52', '5-73', '5-82', '5-91', '5-92', '5-103', '5-113', '5-134', '5-137', '5-163', '5-172', '5-177', '5-184', '5-196', '5-214', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '5-253'], ['0-63', '1-32', '1-52', '1-67', '1-82', '1-163', '1-178', '1-204', '1-225', '1-240', '1-258', '1-262', '1-275', '1-291', '1-315', '1-332', '1-333', '1-374', '1-381', '1-404', '1-406', '1-416', '1-425', '1-502', '1-512', '1-514', '2-4', '2-23', '2-43', '2-45', '2-51', '2-60', '2-64', '2-78', '2-80', '2-96', '2-102', '2-131', '2-137', '2-139', '2-144', '2-172', '2-177', '2-193', '2-202', '2-226', '2-240', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-262', '3-280', '4-9', '4-24', '4-41', '4-73', '4-81', '4-114', '4-119', '4-136', '4-147', '4-162', '4-171', '4-176', '4-177', '4-196', '4-221', '4-234', '4-273', '4-276', '5-2', '5-8', '5-13', '5-23', '5-30', '5-35', '5-47', '5-49', '5-58', '5-59', '5-62', '5-65', '5-88', '5-97', '5-107', '5-114', '5-126', '5-132', '5-140', '5-147', '5-158', '5-162', '5-173', '5-181', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249'], ['1-3', '1-54', '1-84', '1-103', '1-104', '1-121', '1-140', '1-155', '1-166', '1-172', '1-188', '1-202', '1-234', '1-241', '1-280', '1-294', '1-299', '1-312', '1-320', '1-334', '1-336', '1-339', '1-359', '1-363', '1-368', '1-371', '1-373', '1-388', '1-390', '1-397', '1-480', '2-28', '2-48', '2-63', '2-85', '2-109', '2-110', '2-114', '2-158', '2-160', '2-170', '2-181', '2-182', '2-192', '2-208', '2-223', '2-225', '3-10', '3-60', '3-61', '3-107', '3-133', '3-155', '3-212', '3-220', '3-251', '3-256', '3-261', '3-264', '3-266', '3-267', '3-268', '3-270', '3-273', '4-10', '4-21', '4-25', '4-70', '4-123', '4-126', '4-127', '4-164', '4-169', '4-192', '4-217', '4-242', '4-243', '4-247', '4-248', '4-251', '4-253', '4-255', '4-256', '4-262', '4-266', '4-271', '4-275', '4-277', '4-278', '5-12', '5-25', '5-29', '5-32', '5-33', '5-40', '5-68', '5-71', '5-86', '5-98', '5-105', '5-139', '5-143', '5-145', '5-161', '5-175', '5-178', '5-180', '5-198', '5-204', '5-205', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-51', '1-59', '1-99', '1-164', '1-174', '1-177', '1-186', '1-239', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-343', '1-348', '1-362', '1-365', '1-380', '1-384', '1-389', '1-391', '2-30', '2-67', '2-98', '2-154', '2-183', '2-185', '2-197', '2-204', '2-218', '2-230', '2-242', '2-253', '3-5', '3-36', '3-41', '3-46', '3-80', '3-93', '3-97', '3-100', '3-113', '3-138', '3-148', '3-175', '3-186', '3-187', '3-196', '3-243', '3-248', '3-255', '3-265', '3-278', '4-15', '4-31', '4-33', '4-44', '4-48', '4-58', '4-79', '4-91', '4-96', '4-128', '4-138', '4-143', '4-144', '4-181', '4-184', '4-187', '4-191', '4-223', '4-228', '4-239', '4-240', '4-246', '4-269', '5-17', '5-56', '5-57', '5-63', '5-72', '5-109', '5-110', '5-124', '5-133', '5-146', '5-148', '5-164', '5-182', '5-183', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-219', '5-224', '5-230', '5-235', '5-240', '5-245', '5-250'], [], []],[['1-55', '1-85', '1-194', '1-200', '1-213', '1-254', '1-407', '1-408', '1-414', '2-8', '2-89', '2-138', '3-1', '3-40', '3-51', '3-101', '3-102', '3-151', '3-201', '3-228', '4-4', '4-18', '4-34', '4-53', '4-59', '4-64', '4-71', '4-100', '4-101', '4-116', '4-122', '4-148', '4-149', '4-161', '4-163', '4-175', '4-189', '4-197', '4-213', '4-233', '4-279', '5-15', '5-113', '5-251', '5-253', '5-255', '5-256', '7-4', '7-5', '7-6', '7-9', '7-14', '7-16', '7-20', '7-22', '7-26', '7-33', '7-37', '7-39', '7-40', '7-43', '7-48', '7-49', '7-50', '7-51', '7-55', '7-56', '7-62', '7-65', '7-70', '7-72', '7-73', '7-74', '7-78', '7-81', '7-86', '7-87', '7-92', '7-96', '7-100', '7-103', '7-104', '7-113', '7-118', '7-124', '7-125', '7-126', '7-127', '7-128', '7-129', '7-134', '7-136', '7-137', '7-211'], ['0-6', '0-14', '0-21', '0-30', '0-36', '1-14', '1-64', '1-90', '1-105', '1-152', '1-163', '1-178', '1-206', '1-227', '1-240', '1-283', '1-406', '1-418', '1-420', '1-422', '1-423', '1-426', '2-4', '2-9', '2-12', '2-16', '2-29', '2-94', '2-96', '2-131', '2-136', '2-143', '2-152', '3-70', '3-85', '3-119', '3-135', '3-144', '3-203', '3-211', '3-239', '3-280', '4-1', '4-3', '4-6', '4-26', '4-49', '4-73', '4-90', '4-97', '4-136', '4-145', '4-160', '4-171', '4-176', '4-193', '4-202', '4-234', '4-272', '5-2', '5-83', '5-97', '5-107', '5-132', '5-181', '5-254', '7-8', '7-13', '7-24', '7-25', '7-28', '7-35', '7-36', '7-44', '7-45', '7-57', '7-59', '7-63', '7-79', '7-85', '7-93', '7-97', '7-98', '7-101', '7-106', '7-114', '7-131', '7-132', '7-140', '7-141', '7-142', '7-143', '7-156', '7-162', '7-178', '7-184', '7-195', '7-212', '7-214'], ['1-26', '1-34', '1-38', '1-66', '1-84', '1-86', '1-112', '1-121', '1-138', '1-140', '1-151', '1-166', '1-202', '1-231', '1-241', '1-244', '1-306', '1-368', '1-388', '2-5', '2-21', '2-109', '2-110', '2-114', '2-159', '2-182', '2-222', '3-14', '3-21', '3-69', '3-91', '3-107', '3-131', '3-133', '3-158', '3-173', '3-178', '3-193', '3-205', '3-212', '3-217', '3-226', '3-242', '3-245', '4-10', '4-13', '4-21', '4-25', '4-43', '4-50', '4-60', '4-68', '4-70', '4-76', '4-112', '4-126', '4-131', '4-164', '4-169', '4-180', '4-204', '4-211', '4-217', '4-218', '4-227', '4-248', '4-271', '4-277', '4-278', '5-9', '5-12', '5-33', '5-68', '5-71', '5-85', '5-86', '5-90', '5-98', '5-105', '5-145', '5-161', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221'], ['1-6', '1-51', '1-61', '1-99', '1-107', '1-124', '1-164', '1-177', '1-185', '1-186', '1-239', '1-245', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-338', '1-362', '1-367', '1-389', '2-154', '2-185', '2-204', '2-229', '2-242', '2-253', '3-36', '3-49', '3-52', '3-80', '3-87', '3-88', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-192', '3-235', '3-243', '3-247', '3-248', '3-277', '4-31', '4-33', '4-37', '4-44', '4-48', '4-79', '4-91', '4-93', '4-96', '4-115', '4-137', '4-138', '4-143', '4-158', '4-184', '4-187', '4-228', '4-239', '4-240', '5-17', '5-21', '5-36', '5-56', '5-74', '5-110', '5-133', '5-146', '5-183'], [], []],[['0-3', '0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-202', '3-204', '4-12', '4-14', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-66', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-41', '5-42', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-56', '6-66', '6-69', '6-78', '6-82', '6-91', '6-104', '6-118', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-188', '6-189', '6-197', '6-210', '6-213'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-164', '3-182', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-254', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-65', '6-67', '6-70', '6-71', '6-73', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-196', '6-198', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-25', '4-30', '4-43', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-89', '6-103', '6-113', '6-117', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-203', '6-204', '6-207', '6-218'], [], []],[['0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-194', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-108', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-195', '3-202', '3-204', '4-12', '4-14', '4-18', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-206', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-15', '5-41', '5-42', '5-46', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-2', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-50', '6-56', '6-66', '6-69', '6-78', '6-82', '6-87', '6-91', '6-93', '6-104', '6-114', '6-118', '6-122', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-184', '6-188', '6-189', '6-197', '6-210', '6-213', '6-216'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-143', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-152', '3-164', '3-182', '3-188', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-32', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-77', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249', '5-254', '6-15', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-63', '6-65', '6-67', '6-70', '6-71', '6-73', '6-76', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-194', '6-196', '6-198', '6-199', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-293', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '1-488', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-17', '4-25', '4-30', '4-43', '4-50', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-120', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-36', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-84', '6-89', '6-103', '6-113', '6-117', '6-125', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-175', '6-203', '6-204', '6-207', '6-217', '6-218'], [], []]],'set_boosts':[[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[['6-5', '1-15', '5-5', '5-7', '4-12', '0-3', '5-10', '1-31', '4-22', '4-27', '1-55', '1-392', '1-408', '1-407', '2-217', '1-330', '2-175', '1-369', '5-236', '5-226', '5-241', '5-231', '5-246', '3-202', '2-138', '1-252', '4-197', '6-188', '6-189', '1-261', '4-213', '1-278', '1-213', '6-213', '6-181', '5-113', '3-154', '5-115', '3-157', '6-150', '1-196', '1-197', '5-120', '1-203', '3-171', '2-118', '6-136', '1-133', '2-70', '5-78', '1-504', '1-142', '1-141', '6-104', '3-106', '6-118', '4-133', '4-135', '6-91', '1-72', '4-53', '1-69', '1-75', '1-68', '1-85', '3-63', '4-64', '1-80', '1-503', '2-55', '6-46'], ['4-3', '5-6', '1-25', '6-19', '4-19', '2-10', '1-32', '1-39', '4-39', '3-30', '1-46', '0-6', '5-30', '1-406', '4-254', '6-238', '1-79', '4-241', '3-274', '5-222', '3-276', '1-324', '3-257', '1-396', '6-230', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228', '2-139', '3-211', '1-262', '6-196', '6-198', '0-36', '4-221', '1-291', '2-162', '3-233', '3-239', '3-241', '5-181', '6-141', '1-193', '5-123', '2-115', '5-131', '5-132', '5-138', '5-141', '0-30', '1-247', '2-131', '1-236', '2-136', '6-94', '5-79', '1-131', '5-81', '4-111', '2-80', '1-165', '5-97', '3-127', '0-21', '5-100', '6-133', '2-35', '4-57', '6-52', '4-62', '4-73', '5-53', '1-96', '6-71', '1-105', '0-14', '1-100', '1-113'], ['4-5', '4-10', '5-9', '5-12', '6-22', '5-19', '2-14', '6-30', '5-25', '1-38', '6-35', '2-28', '5-33', '1-60', '6-235', '1-399', '2-192', '6-229', '6-227', '5-221', '5-204', '5-210', '5-215', '6-231', '5-198', '6-233', '4-256', '1-336', '5-217', '4-277', '4-278', '4-263', '5-218', '6-236', '3-212', '4-204', '5-161', '6-202', '1-280', '1-272', '2-160', '5-175', '1-294', '5-178', '4-237', '6-220', '3-242', '5-185', '3-155', '3-158', '2-109', '1-202', '2-114', '4-173', '3-184', '2-126', '1-232', '4-183', '3-191', '1-241', '1-243', '1-242', '5-76', '4-106', '5-85', '6-98', '1-155', '5-90', '1-149', '5-95', '3-126', '4-127', '1-168', '5-98', '1-175', '3-140', '4-56', '3-60', '4-60', '6-54', '1-78', '4-69', '1-94', '6-64', '5-55', '4-76', '2-59', '1-480', '6-85', '1-118'], [], [], []],[['5-75', '3-202', '5-251', '6-2', '1-392', '2-138', '6-93', '3-3', '4-53', '5-115', '6-184', '6-5', '5-78', '1-69', '6-50', '1-408', '3-157', '4-103', '6-188', '1-68', '1-407', '1-85', '5-252', '6-148', '6-7', '2-217', '6-56', '2-108', '4-18', '6-150', '4-12', '4-63', '4-206', '4-64', '5-46', '0-18', '1-330', '1-194', '3-106', '4-113', '1-203', '4-213', '6-155', '6-197', '5-15', '2-175', '4-22', '1-354', '6-114', '1-369', '4-27', '6-31', '6-210', '6-122', '4-135', '6-213', '6-216', '3-195', '6-87', '2-198', '6-136', '5-236', '5-226', '5-241', '5-231', '5-246'], ['1-406', '4-272', '2-35', '5-77', '3-152', '6-94', '1-193', '4-57', '4-198', '6-52', '6-190', '6-147', '6-191', '3-211', '4-107', '6-63', '4-62', '5-192', '4-254', '4-65', '1-25', '6-15', '6-238', '4-111', '6-194', '6-17', '6-27', '1-79', '6-196', '6-21', '6-198', '6-199', '5-239', '5-228', '5-244', '5-233', '5-249', '4-19', '5-216', '1-216', '4-73', '6-108', '6-201', '6-160', '4-241', '1-165', '6-65', '1-32', '1-27', '3-22', '5-222', '3-276', '6-76', '1-143', '1-283', '3-127', '4-32', '5-132', '0-21', '5-188', '4-130', '6-80', '1-222', '2-211', '6-34', '5-141', '3-257', '3-188', '1-247', '1-113', '6-83', '2-131', '1-58', '3-239', '5-181', '1-236', '1-396', '6-132', '6-133', '6-230', '3-279', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228'], ['5-76', '5-40', '4-50', '5-117', '3-158', '4-60', '4-106', '3-212', '4-17', '4-203', '4-204', '6-98', '5-161', '6-193', '4-69', '6-235', '1-399', '2-192', '6-229', '1-94', '2-114', '6-227', '5-221', '5-12', '6-22', '5-204', '5-210', '1-155', '5-215', '6-64', '5-90', '6-202', '6-231', '5-198', '4-25', '6-233', '4-123', '2-49', '4-173', '4-256', '5-55', '1-336', '4-262', '5-95', '2-59', '3-126', '5-217', '4-127', '3-227', '5-223', '5-98', '6-30', '4-277', '6-120', '4-278', '3-184', '2-160', '5-25', '2-126', '1-480', '5-29', '2-225', '1-232', '6-35', '4-183', '1-293', '2-28', '1-112', '3-191', '6-38', '5-180', '5-105', '6-220', '6-85', '3-242', '5-32', '1-488', '5-145', '5-33', '5-71', '1-243', '1-242', '1-60', '6-135', '5-185'], [], [], []]],'set_boost_amount':[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5]}
# 
# with open('data.json', 'w') as outfile:
#     json.dump(data_dict, outfile)

# ###Make Settings Dictionary###
# 
# settings_dict = {'format_used': 10,
#                  'pass_style': 0,
#                  'bots_used': {'bot1': 'Xi', 'bot2': 'Xi', 'bot3': 'Xi', 'bot4': 'Xi', 
#                                'bot5': 'Xi', 'bot6': 'Xi', 'bot7': 'Xi', 'bot8': 'Xi', 
#                                'bot9': 'Xi', 'bot10': 'Xi', 'bot11': 'Xi'},
#                  'ranking_used': 'format7b_rating.csv',
#                  'update_ranking_check': True,
#                  'cubify':False, 
#                  'use_promos':False,
#                  'use_unnumbered':False}
# 
# with open('settings.json', 'w') as outfile:
#     json.dump(settings_dict, outfile)

# In[2]:


csv.register_dialect('myDialect', 
                     delimiter = '|',
                     quoting=csv.QUOTE_NONE,
                     skipinitialspace=True)

with open('card_data.csv', mode='r') as infile:
    reader = csv.reader(infile, dialect='myDialect')
    card_dict = {rows[0]:{'name':rows[1],'rarity':rows[2],'type':rows[3],'cost':int(rows[4]),'influence':{'cost':rows[5],'fire':rows[6],'time':rows[7],'justice':rows[8],'primal':rows[9],'shadow':rows[10]},'image':rows[11],'ranking':int(rows[12])} for rows in reader}
infile.close()

card_dict.get('5-227').get('influence').update({'fire':'True'})
card_dict.get('5-227').get('influence').update({'justice':'True'})
card_dict.get('5-227').get('influence').update({'primal':'True'})
card_dict.get('5-242').get('influence').update({'fire':'True'})
card_dict.get('5-242').get('influence').update({'time':'True'})
card_dict.get('5-242').get('influence').update({'primal':'True'})
card_dict.get('5-237').get('influence').update({'fire':'True'})
card_dict.get('5-237').get('influence').update({'justice':'True'})
card_dict.get('5-237').get('influence').update({'shadow':'True'})
card_dict.get('5-247').get('influence').update({'time':'True'})
card_dict.get('5-247').get('influence').update({'justice':'True'})
card_dict.get('5-247').get('influence').update({'shadow':'True'})
card_dict.get('5-232').get('influence').update({'time':'True'})
card_dict.get('5-232').get('influence').update({'shadow':'True'})
card_dict.get('5-232').get('influence').update({'primal':'True'})
card_dict.get('2-246').get('influence').update({'justice':'True'})
card_dict.get('2-246').get('influence').update({'shadow':'True'})
card_dict.get('1-410').get('influence').update({'time':'True'})
card_dict.get('1-410').get('influence').update({'justice':'True'})
card_dict.get('1-412').get('influence').update({'time':'True'})
card_dict.get('1-412').get('influence').update({'primal':'True'})
card_dict.get('1-409').get('influence').update({'shadow':'True'})
card_dict.get('1-409').get('influence').update({'primal':'True'})
card_dict.get('2-247').get('influence').update({'justice':'True'})
card_dict.get('2-247').get('influence').update({'primal':'True'})
card_dict.get('2-248').get('influence').update({'fire':'True'})
card_dict.get('2-248').get('influence').update({'time':'True'})
card_dict.get('1-411').get('influence').update({'fire':'True'})
card_dict.get('1-411').get('influence').update({'justice':'True'})
card_dict.get('2-250').get('influence').update({'fire':'True'})
card_dict.get('2-250').get('influence').update({'primal':'True'})
card_dict.get('1-413').get('influence').update({'fire':'True'})
card_dict.get('1-413').get('influence').update({'shadow':'True'})
card_dict.get('2-251').get('influence').update({'shadow':'True'})
card_dict.get('2-251').get('influence').update({'time':'True'})


# In[3]:


def rank_determination():
    with open(settings_dict.get('ranking_used'), mode='r') as infile:
        reader = csv.reader(infile, dialect='myDialect')
        card_rating = {rows[0]:rows[1] for rows in reader}
    infile.close()

    for beta in card_rating:
        try:
            card_dict.get(beta).update({'ranking':float(card_dict.get(beta).get('ranking')*card_rating.get(beta))})
            if card_dict.get(beta).get('rarity') == 'Rare' or card_dict.get(beta).get('rarity') == 'Legendary':
                if card_dict.get(beta).get('ranking') < 1.0:
                    card_dict.get(beta).update({'ranking':1.0})
        except:
            pass


# In[4]:


def read_settings():
    with open('settings.json') as json_file:
        global settings_dict
        settings_dict = json.load(json_file)
        
    with open('bot.json') as json_file:
        global bot_dict
        bot_dict = json.load(json_file)


# In[5]:


def read_formats():
    with open('data.json') as json_file:
        global data_dict
        data_dict = json.load(json_file)


# In[6]:


def reset_settings():

    settings_dict = {'format_used': 10,
                     'pass_style': 0,
                     'bots_used': {'bot1': 'Xi', 'bot2': 'Xi', 'bot3': 'Xi', 'bot4': 'Xi', 
                                   'bot5': 'Xi', 'bot6': 'Xi', 'bot7': 'Xi', 'bot8': 'Xi', 
                                   'bot9': 'Xi', 'bot10': 'Xi', 'bot11': 'Xi'},
                     'ranking_used': 'format7b_rating.csv',
                     'update_ranking_check': True, 
                     'cubify':False, 
                     'use_promos':False, 
                     'use_unnumbered':False}

    with open('settings.json', 'w') as outfile:
        json.dump(settings_dict, outfile)
        
    read_settings()
    deck_buttons.destroy()
    decks_program()
    
    saved_lbl = Label(settings_tab, text='Settings reset!!!')
    saved_lbl.grid(row=7, column=0, sticky=S+W)
    
    settings_frame_holder.destroy()
    settings_program()
    
    root.update()
    root.after(2000,saved_lbl.destroy())


# In[7]:


def reset_formats():
    
    data_dict = {'format_name': ['1: The Empty Throne','2: Omens of the Past','3: The Dusk Road','4: The Fall of Argenport','5: Defiance','5b: Homecoming','6: Dark Frontier','6b: Trials of Grodov','6c: DF + FoX','7: The Flame of Xulta','7b: The Flame of Xulta v2'],'format_code': ['format1','format2','format3','format4','format5','format5b','format6','format6b','format6c','format7','format7b'],'format_sets': [['set1','set1','set1','set1'],['set2','set1','set2','set1'],['set3','set2','set1','set3'],['set4','cur4','cur4','set4'],['set5','cur5','cur5','set5'],['cur5b','set5','set5','cur5b'],['set6','cur6','cur6','set6'],['set6','cur6b','cur6b','set6'],['set6','cur6c','cur6c','set6'],['set7','cur7','cur7','set7'],['cur7b','set7','set7','cur7b']],'format_directions': [['L','R','L','R'],['L','R','L','R'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L'],['L','R','R','L']],'set_name': ['Set 0: The Empty Throne (Introductary Cards)', 'Set 1: The Empty Throne', 'Set 2: Omens ofthe Past', 'Set 3: The Dusk Road', 'Set 4: The Fall of Argenport', 'Set 5: Defiance', 'Set 6: Dark Frontier', 'Set 7: The Flame of Xulta', "Campaign 1: Jekk's Bounty", 'Campaign 2: The Tale of Horus Traver', 'Campaign 3: Dead Reckoning', 'Campaign 4: Into Shadow', 'Campaign 5: Homecoming', 'Campaign 6: Trials of Grodov', 'Eternal Draft Pack - Format 4', 'Eternal Draft Pack - Format 5', 'Eternal Draft Pack - Format 5b', 'Eternal Draft Pack - Format 6', 'Eternal Draft Pack - Format 6b', 'Eternal Draft Pack - Format 6c', 'Eternal Draft Pack - Format 7', 'Eternal Draft Pack - Format 7b'],'set_code': ['set0','set1','set2','set3','set4','set5','set6','set7','set1001','set1002','set1003','set1004','set1005','set1006','cur4','cur5','cur5b','cur6','cur6b','cur6c','cur7','cur7b'],'set_cards': [[['0-18', '0-4', '0-35', '0-15', '0-33', '0-24', '0-3', '0-11'],['0-27', '0-62', '0-53', '0-54', '0-60', '0-58', '0-9', '0-55', '0-30', '0-51', '0-36', '0-14', '0-61', '0-56', '0-6', '0-63', '0-21'], [], [], [], []],[['1-278', '1-55', '1-501', '1-301', '1-407', '1-354', '1-190', '1-266', '1-74', '1-263', '1-197', '1-120', '1-419', '1-8', '1-41', '1-220', '1-95', '1-505', '1-75', '1-377', '1-414', '1-261', '1-194', '1-413', '1-200', '1-93', '1-331', '1-10', '1-392', '1-238', '1-421', '1-281', '1-410', '1-256', '1-33', '1-276', '1-158', '1-88', '1-4', '1-68', '1-504', '1-203', '1-226', '1-417', '1-424', '1-136', '1-134', '1-180', '1-357', '1-412', '1-218', '1-219', '1-129', '1-259', '1-102', '1-127', '1-270', '1-35', '1-77', '1-12', '1-30', '1-23', '1-427', '1-13', '1-159', '1-398', '1-91', '1-137', '1-409', '1-250', '1-260', '1-196', '1-17', '1-215', '1-150', '1-415', '1-321', '1-213', '1-101', '1-141', '1-191', '1-85', '1-201', '1-207', '1-288', '1-72', '1-411', '1-208', '1-80', '1-15', '1-69', '1-83', '1-330', '1-205', '1-265', '1-142', '1-264', '1-503', '1-130', '1-36', '1-302', '1-31', '1-212', '1-147', '1-254', '1-252', '1-73', '1-49', '1-209', '1-21', '1-37', '1-235', '1-162', '1-277', '1-135', '1-369', '1-408', '1-171', '1-114', '1-133', '1-153', '1-316', '1-284', '1-5', '1-44'], ['1-125', '1-319', '1-96', '1-291', '1-204', '1-356', '1-255', '1-43', '1-406', '1-156', '1-76', '1-360', '1-510', '1-71', '1-375', '1-132', '1-189', '1-46', '1-115', '1-426', '1-341', '1-290', '1-297', '1-379', '1-324', '1-257', '1-304', '1-396', '1-353', '1-283', '1-422', '1-98', '1-513', '1-217', '1-193', '1-206', '1-178', '1-108', '1-279', '1-517', '1-20', '1-214', '1-228', '1-167', '1-52', '1-160', '1-332', '1-395', '1-128', '1-404', '1-58', '1-230', '1-267', '1-282', '1-224', '1-315', '1-512', '1-374', '1-227', '1-42', '1-111', '1-274', '1-169', '1-89', '1-92', '1-416', '1-229', '1-27', '1-420', '1-146', '1-2', '1-289', '1-346', '1-82', '1-64', '1-275', '1-100', '1-195', '1-425', '1-211', '1-216', '1-192', '1-90', '1-269', '1-258', '1-40', '1-418', '1-29', '1-79', '1-273', '1-139', '1-25', '1-117', '1-502', '1-22', '1-113', '1-514', '1-240', '1-152', '1-318', '1-105', '1-131', '1-81', '1-381', '1-394', '1-28', '1-14', '1-148', '1-50', '1-143', '1-516', '1-176', '1-247', '1-222', '1-122', '1-236', '1-145', '1-184', '1-165', '1-53', '1-11', '1-333', '1-39', '1-423', '1-67', '1-225', '1-163', '1-32', '1-251', '1-70', '1-157', '1-262'], ['1-26', '1-292', '1-242', '1-386', '1-334', '1-78', '1-272', '1-340', '1-295', '1-168', '1-155', '1-287', '1-45', '1-322', '1-299', '1-371', '1-312', '1-286', '1-402', '1-253', '1-84', '1-382', '1-202', '1-16', '1-138', '1-358', '1-399', '1-368', '1-480', '1-241', '1-181', '1-183', '1-118', '1-48', '1-306', '1-188', '1-234', '1-237', '1-280', '1-243', '1-97', '1-19', '1-149', '1-170', '1-60', '1-364', '1-154', '1-223', '1-221', '1-372', '1-103', '1-3', '1-361', '1-294', '1-172', '1-9', '1-140', '1-337', '1-109', '1-339', '1-244', '1-18', '1-311', '1-320', '1-166', '1-86', '1-94', '1-66', '1-232', '1-327', '1-388', '1-175', '1-373', '1-359', '1-271', '1-336', '1-231', '1-151', '1-34', '1-144', '1-293', '1-506', '1-390', '1-121', '1-110', '1-210', '1-199', '1-268', '1-314', '1-38', '1-345', '1-112', '1-54', '1-488', '1-351', '1-300', '1-285', '1-104', '1-56', '1-363', '1-397'], ['1-107', '1-335', '1-248', '1-367', '1-51', '1-182', '1-347', '1-366', '1-338', '1-186', '1-62', '1-362', '1-99', '1-303', '1-317', '1-400', '1-174', '1-389', '1-326', '1-61', '1-177', '1-246', '1-383', '1-6', '1-355', '1-164', '1-365', '1-47', '1-380', '1-343', '1-403', '1-59', '1-329', '1-378', '1-348', '1-124', '1-350', '1-245', '1-309', '1-328', '1-384', '1-123', '1-323', '1-310', '1-307', '1-185', '1-385', '1-116', '1-239', '1-305', '1-391', '1-233', '1-387', '1-308', '1-119'], ['1-521', '1-511', '1-520', '1-518', '1-522', '1-519'], ['1-Direwood Beast', '1-Pig', '1-Sky Serpent', '1-Mithril Armor', "1-Dragon's Eye", '1-Sangu, Pale Rider', '1-Carnosaur', '1-Frog', '1-Muertis, Pale Rider', '1-Volan, Pale Rider', '1-1', '1-Rhinarc', '1-Gemblade', '1-Firebomb', '1-Puma', '1-Golem', '1-Iron Sword', '1-126', '1-Sentinel', '1-187', '1-Spiteling', '1-Titan', '1-Stormdancer', '1-Illusionary Dragon', '1-63', '1-249', '1-Obsidian Armor', '1-Occi, Pale Rider', '1-Owl', '1-Magmahound', '1-Snowball', '1-Grenadin', '1-Stone Cudgel', '1-Vengeful Gargoyle', '1-Serpent Hatchling', '1-The Tormentor', '1-Wisp']],[['2-238', '2-6', '2-3', '2-89', '2-47', '2-128', '2-147', '2-42', '2-151', '2-72', '2-194', '2-203', '2-74', '2-15', '2-232', '2-157', '2-169', '2-201', '2-217', '2-87', '2-117', '2-25', '2-111', '2-8', '2-246', '2-250', '2-61', '2-190', '2-122', '2-138', '2-156', '2-113', '2-121', '2-132', '2-106', '2-140', '2-103', '2-75', '2-77', '2-33', '2-145', '2-108', '2-247', '2-221', '2-251', '2-118', '2-123', '2-210', '2-37', '2-56', '2-171', '2-248', '2-88', '2-149', '2-27', '2-13', '2-150', '2-133', '2-66', '2-36', '2-26', '2-116', '2-31', '2-73', '2-55', '2-7', '2-165', '2-79', '2-141', '2-175', '2-176', '2-71', '2-82', '2-50', '2-198', '2-142', '2-68', '2-95', '2-186', '2-224', '2-155', '2-216', '2-70', '2-209', '2-184', '2-46', '2-99', '2-2', '2-54', '2-17', '2-231', '2-19', '2-57', '2-39', '2-244'], ['2-94', '2-163', '2-144', '2-162', '2-189', '2-131', '2-62', '2-124', '2-64', '2-96', '2-102', '2-137', '2-107', '2-76', '2-134', '2-60', '2-129', '2-104', '2-188', '2-139', '2-120', '2-20', '2-143', '2-236', '2-211', '2-10', '2-81', '2-16', '2-146', '2-69', '2-78', '2-172', '2-11', '2-24', '2-97', '2-52', '2-135', '2-177', '2-240', '2-161', '2-112', '2-43', '2-136', '2-202', '2-206', '2-51', '2-166', '2-205', '2-152', '2-29', '2-105', '2-45', '2-1', '2-18', '2-35', '2-44', '2-9', '2-168', '2-174', '2-219', '2-193', '2-227', '2-80', '2-220', '2-41', '2-153', '2-93', '2-23', '2-91', '2-243', '2-239', '2-4', '2-195', '2-58', '2-226', '2-180', '2-12', '2-115', '2-84', '2-53'], ['2-235', '2-182', '2-90', '2-21', '2-173', '2-237', '2-167', '2-14', '2-192', '2-170', '2-59', '2-85', '2-5', '2-233', '2-148', '2-126', '2-222', '2-114', '2-49', '2-223', '2-110', '2-181', '2-225', '2-200', '2-159', '2-158', '2-207', '2-63', '2-125', '2-109', '2-22', '2-241', '2-92', '2-213', '2-83', '2-228', '2-48', '2-40', '2-208', '2-160', '2-196', '2-28', '2-178', '2-86', '2-187', '2-249', '2-214'], ['2-212', '2-30', '2-164', '2-245', '2-253', '2-229', '2-230', '2-98', '2-197', '2-191', '2-185', '2-32', '2-199', '2-204', '2-67', '2-130', '2-154', '2-234', '2-101', '2-242', '2-218', '2-38', '2-215', '2-183', '2-179', '2-34', '2-127', '2-65', '2-100', '2-119'], ['2-256', '2-252', '2-255', '2-254'], ['2-Explorer', '2-Minotaur', '2-Urska, the Bear', '2-Animated Sentinel', '2-Dragon', '2-Hellhound', '2-Restless Radiant']],[['3-121', '3-232', '3-115', '3-153', '3-174', '3-106', '3-238', '3-9', '3-101', '3-169', '3-77', '3-222', '3-12', '3-83', '3-177', '3-201', '3-17', '3-25', '3-167', '3-145', '3-116', '3-195', '3-57', '3-180', '3-64', '3-142', '3-13', '3-6', '3-134', '3-102', '3-190', '3-204', '3-157', '3-223', '3-40', '3-151', '3-105', '3-98', '3-3', '3-168', '3-50', '3-199', '3-154', '3-176', '3-137', '3-54', '3-228', '3-79', '3-206', '3-224', '3-237', '3-213', '3-240', '3-29', '3-132', '3-139', '3-1', '3-202', '3-66', '3-108', '3-73', '3-231', '3-18', '3-219', '3-62', '3-68', '3-51', '3-229', '3-15', '3-171', '3-129', '3-38', '3-65', '3-2', '3-183', '3-63', '3-90', '3-74', '3-33', '3-114'], ['3-99', '3-203', '3-211', '3-111', '3-84', '3-109', '3-103', '3-166', '3-253', '3-185', '3-8', '3-104', '3-207', '3-216', '3-262', '3-22', '3-95', '3-32', '3-4', '3-156', '3-254', '3-128', '3-188', '3-42', '3-82', '3-269', '3-280', '3-274', '3-152', '3-164', '3-71', '3-72', '3-78', '3-165', '3-47', '3-58', '3-159', '3-39', '3-162', '3-214', '3-144', '3-55', '3-161', '3-208', '3-246', '3-234', '3-30', '3-258', '3-276', '3-24', '3-28', '3-241', '3-118', '3-182', '3-123', '3-117', '3-271', '3-70', '3-119', '3-198', '3-257', '3-11', '3-53', '3-233', '3-239', '3-150', '3-135', '3-45', '3-85', '3-218', '3-27', '3-127', '3-89', '3-112', '3-279', '3-260', '3-181', '3-209'], ['3-212', '3-264', '3-268', '3-189', '3-7', '3-230', '3-272', '3-270', '3-215', '3-69', '3-173', '3-26', '3-86', '3-23', '3-131', '3-126', '3-158', '3-81', '3-59', '3-14', '3-179', '3-56', '3-67', '3-35', '3-225', '3-210', '3-197', '3-261', '3-140', '3-107', '3-125', '3-94', '3-141', '3-205', '3-75', '3-110', '3-155', '3-61', '3-37', '3-160', '3-256', '3-10', '3-91', '3-133', '3-220', '3-259', '3-16', '3-163', '3-242', '3-226', '3-124', '3-122', '3-130', '3-193', '3-76', '3-251', '3-252', '3-267', '3-146', '3-217', '3-21', '3-19', '3-44', '3-266', '3-170', '3-191', '3-184', '3-20', '3-92', '3-178', '3-60', '3-34', '3-236', '3-273', '3-245', '3-227'], ['3-148', '3-275', '3-100', '3-249', '3-138', '3-88', '3-187', '3-247', '3-46', '3-277', '3-250', '3-192', '3-87', '3-31', '3-243', '3-80', '3-255', '3-194', '3-172', '3-48', '3-5', '3-96', '3-175', '3-143', '3-49', '3-93', '3-149', '3-221', '3-36', '3-113', '3-248', '3-196', '3-52', '3-278', '3-41', '3-235', '3-43', '3-97', '3-244', '3-136', '3-120', '3-186', '3-200', '3-263', '3-265', '3-147'], ['3-305', '3-302', '3-303', '3-304', '3-301'], ['3-Gilded Hammer', '3-Flying Squirrel', '3-Shattered Sentinel', '3-Cabal Extortion Scheme', '3-Valkyrie', '3-Fixit', '3-Jotun', '3-Sidearm', '3-Nyctophobia', '3-Hound', '3-Snowman', '3-Soldier', '3-Dinosaur', '3-Twilight Prowler', '3-Sandbind']],[['4-134', '4-38', '4-159', '4-61', '4-216', '4-16', '4-197', '4-36', '4-52', '4-22', '4-208', '4-95', '4-213', '4-233', '4-72', '4-161', '4-29', '4-214', '4-86', '4-170', '4-103', '4-167', '4-113', '4-146', '4-215', '4-148', '4-84', '4-54', '4-154', '4-12', '4-121', '4-163', '4-152', '4-133', '4-141', '4-66', '4-102', '4-4', '4-206', '4-175', '4-82', '4-149', '4-236', '4-74', '4-226', '4-186', '4-104', '4-109', '4-225', '4-182', '4-7', '4-34', '4-200', '4-207', '4-71', '4-35', '4-117', '4-23', '4-27', '4-46', '4-88', '4-124', '4-2', '4-45', '4-122', '4-212', '4-194', '4-135', '4-63', '4-190', '4-165', '4-189', '4-279', '4-53', '4-129', '4-219', '4-101', '4-64', '4-178', '4-238', '4-75', '4-18', '4-14', '4-116', '4-100', '4-59'], ['4-261', '4-267', '4-188', '4-257', '4-196', '4-78', '4-92', '4-176', '4-28', '4-90', '4-130', '4-151', '4-99', '4-220', '4-41', '4-32', '4-62', '4-259', '4-107', '4-252', '4-205', '4-139', '4-1', '4-51', '4-198', '4-241', '4-97', '4-276', '4-81', '4-160', '4-9', '4-65', '4-274', '4-234', '4-153', '4-132', '4-230', '4-119', '4-136', '4-232', '4-85', '4-254', '4-125', '4-39', '4-273', '4-47', '4-250', '4-11', '4-24', '4-172', '4-185', '4-111', '4-114', '4-157', '4-49', '4-221', '4-98', '4-195', '4-147', '4-272', '4-8', '4-6', '4-19', '4-118', '4-57', '4-40', '4-145', '4-193', '4-150', '4-77', '4-83', '4-209', '4-73', '4-171', '4-202', '4-142', '4-264', '4-26', '4-199', '4-210', '4-235', '4-245', '4-156', '4-177', '4-94', '4-89', '4-3', '4-162', '4-120'], ['4-275', '4-180', '4-106', '4-43', '4-211', '4-68', '4-217', '4-13', '4-70', '4-244', '4-248', '4-268', '4-131', '4-20', '4-56', '4-173', '4-10', '4-204', '4-183', '4-127', '4-60', '4-50', '4-231', '4-105', '4-112', '4-169', '4-80', '4-126', '4-243', '4-179', '4-253', '4-262', '4-224', '4-166', '4-123', '4-110', '4-251', '4-242', '4-278', '4-192', '4-227', '4-277', '4-263', '4-155', '4-255', '4-256', '4-21', '4-203', '4-5', '4-164', '4-76', '4-258', '4-69', '4-266', '4-25', '4-140', '4-247', '4-17', '4-218', '4-237', '4-271', '4-55', '4-30'], ['4-239', '4-128', '4-229', '4-181', '4-144', '4-48', '4-138', '4-158', '4-44', '4-174', '4-187', '4-249', '4-67', '4-115', '4-96', '4-58', '4-87', '4-270', '4-15', '4-42', '4-228', '4-33', '4-137', '4-222', '4-269', '4-93', '4-184', '4-201', '4-191', '4-168', '4-31', '4-91', '4-108', '4-79', '4-143', '4-223', '4-265', '4-240', '4-246', '4-260', '4-37'], ['4-309', '4-307', '4-310', '4-306', '4-308'], ['4-Little Brother', '4-Shugo Tactic', '4-Disciplinary Weights', '4-Scorpion Trap', '4-Guard Tower', '4-Crownwatch Tactic', '4-Temple Tactic', "4-Fear's Sum", '4-Marionette', '4-Inferiority Complex', '4-Sheep', '4-Flamefang', '4-Sand Wurm', '4-Monk', '4-Brand, Without Fear', '4-Cabal Tactic', '4-Clan Tactic']],[['5-255', '5-234', '5-27', '5-184', '5-10', '5-174', '5-246', '5-70', '5-150', '5-229', '5-41', '5-73', '5-108', '5-142', '5-42', '5-121', '5-122', '5-14', '5-236', '5-82', '5-177', '5-7', '5-113', '5-84', '5-251', '5-38', '5-253', '5-16', '5-214', '5-91', '5-54', '5-134', '5-172', '5-248', '5-137', '5-252', '5-80', '5-39', '5-238', '5-103', '5-115', '5-166', '5-4', '5-52', '5-163', '5-120', '5-160', '5-159', '5-226', '5-243', '5-119', '5-196', '5-61', '5-37', '5-220', '5-241', '5-202', '5-78', '5-92', '5-157', '5-256', '5-5', '5-15', '5-75', '5-127', '5-231', '5-149', '5-1', '5-87', '5-96', '5-208', '5-67', '5-28', '5-112', '5-46'], ['5-107', '5-62', '5-81', '5-6', '5-116', '5-192', '5-254', '5-99', '5-222', '5-239', '5-126', '5-151', '5-35', '5-165', '5-53', '5-104', '5-132', '5-154', '5-138', '5-64', '5-97', '5-30', '5-83', '5-60', '5-207', '5-162', '5-94', '5-102', '5-31', '5-153', '5-45', '5-66', '5-141', '5-194', '5-201', '5-211', '5-114', '5-47', '5-233', '5-167', '5-158', '5-244', '5-125', '5-152', '5-191', '5-228', '5-22', '5-49', '5-34', '5-147', '5-187', '5-156', '5-131', '5-59', '5-100', '5-13', '5-88', '5-48', '5-8', '5-128', '5-176', '5-173', '5-216', '5-135', '5-44', '5-170', '5-140', '5-2', '5-58', '5-249', '5-23', '5-77', '5-123', '5-181', '5-79', '5-93', '5-3', '5-188', '5-11', '5-65', '5-24'], ['5-98', '5-69', '5-95', '5-232', '5-19', '5-185', '5-225', '5-217', '5-223', '5-175', '5-76', '5-130', '5-218', '5-50', '5-199', '5-139', '5-117', '5-161', '5-221', '5-197', '5-215', '5-168', '5-55', '5-26', '5-206', '5-105', '5-90', '5-209', '5-143', '5-51', '5-12', '5-86', '5-32', '5-9', '5-145', '5-129', '5-43', '5-25', '5-237', '5-68', '5-29', '5-118', '5-212', '5-247', '5-106', '5-85', '5-180', '5-227', '5-136', '5-204', '5-155', '5-205', '5-71', '5-242', '5-178', '5-179', '5-33', '5-40', '5-210', '5-198'], ['5-224', '5-110', '5-36', '5-189', '5-186', '5-230', '5-182', '5-133', '5-250', '5-72', '5-190', '5-63', '5-195', '5-148', '5-144', '5-124', '5-57', '5-89', '5-183', '5-101', '5-17', '5-203', '5-20', '5-18', '5-213', '5-171', '5-56', '5-219', '5-21', '5-200', '5-111', '5-240', '5-164', '5-74', '5-169', '5-109', '5-245', '5-193', '5-146', '5-235'], ['5-314', '5-311', '5-312', '5-313', '5-315'], ['5-Skycrag Goad', '5-Glacial Monstrosity', '5-Dark Elf', '5-Ixtun Contraband', '5-Fire Animated Sentinel', '5-Bladebreaker', "5-Brel's Mallet", '5-Winchest Contraband', "5-Poacher's Rifle", '5-Kerendon Contraband', '5-Viper Fang', '5-Whirly-Twirly', '5-Ruin Stalker', '5-Wildcat', '5-Jennev Contraband', '5-Treasure Trove', '5-Molten Phoenix', '5-Rust Fiend', "5-Sanity's Anathema", '5-Time Animated Sentinel', '5-Auralian Contraband', '5-Steel Golem', '5-Watchman']],[['6-95', '6-124', '6-200', '6-136', '6-166', '6-179', '6-150', '6-148', '6-10', '6-87', '6-110', '6-225', '6-195', '6-46', '6-78', '6-146', '6-118', '6-91', '6-55', '6-72', '6-107', '6-66', '6-119', '6-112', '6-188', '6-37', '6-4', '6-81', '6-104', '6-79', '6-47', '6-189', '6-163', '6-31', '6-1', '6-26', '6-122', '6-216', '6-170', '6-60', '6-129', '6-184', '6-210', '6-69', '6-183', '6-56', '6-205', '6-139', '6-182', '6-93', '6-167', '6-12', '6-96', '6-172', '6-105', '6-5', '6-3', '6-138', '6-149', '6-25', '6-82', '6-114', '6-181', '6-7', '6-2', '6-23', '6-155', '6-58', '6-50', '6-197', '6-224', '6-11', '6-213', '6-177', '6-41'], ['6-15', '6-90', '6-212', '6-230', '6-238', '6-143', '6-176', '6-94', '6-133', '6-140', '6-185', '6-8', '6-13', '6-83', '6-86', '6-45', '6-161', '6-232', '6-80', '6-214', '6-160', '6-99', '6-76', '6-108', '6-199', '6-106', '6-228', '6-211', '6-109', '6-194', '6-97', '6-61', '6-186', '6-173', '6-101', '6-201', '6-164', '6-51', '6-147', '6-52', '6-127', '6-63', '6-141', '6-145', '6-226', '6-192', '6-71', '6-234', '6-27', '6-70', '6-198', '6-20', '6-126', '6-153', '6-44', '6-102', '6-196', '6-19', '6-21', '6-17', '6-73', '6-191', '6-171', '6-34', '6-152', '6-40', '6-121', '6-132', '6-32', '6-100', '6-219', '6-190', '6-18', '6-65', '6-158', '6-116', '6-137', '6-221', '6-67', '6-16', '6-53'], ['6-92', '6-165', '6-227', '6-178', '6-22', '6-48', '6-135', '6-130', '6-14', '6-24', '6-180', '6-220', '6-128', '6-54', '6-154', '6-231', '6-156', '6-202', '6-157', '6-6', '6-120', '6-237', '6-77', '6-9', '6-229', '6-142', '6-38', '6-223', '6-187', '6-206', '6-85', '6-30', '6-235', '6-98', '6-88', '6-62', '6-193', '6-208', '6-151', '6-236', '6-115', '6-233', '6-74', '6-64', '6-123', '6-215', '6-35'], ['6-111', '6-117', '6-159', '6-175', '6-43', '6-209', '6-29', '6-222', '6-125', '6-217', '6-39', '6-134', '6-203', '6-204', '6-42', '6-113', '6-144', '6-68', '6-75', '6-49', '6-103', '6-168', '6-33', '6-59', '6-131', '6-174', '6-28', '6-84', '6-89', '6-162', '6-218', '6-207', '6-57', '6-169', '6-36'], ['6-316', '6-317', '6-319', '6-318'], ['6-Arc Dragon', '6-Pulsing Blob', '6-Timidity', '6-Curse of Provocation', '6-Premonition Bolt', '6-Ravenous Wurm', '6-Shingane Mark', '6-Shardling', '6-Alarming Findings', '6-Emerald Incarnation', '6-Headshot', '6-Disfigure', '6-Kesava, Trueheart', '6-Sewer Kraken', '6-Clan Warrior']],[['7-49', '7-103', '7-81', '7-37', '7-9', '7-128', '7-104', '7-96', '7-211', '7-43', '7-174', '7-17', '7-137', '7-105', '7-62', '7-100', '7-87', '7-145', '7-136', '7-70', '7-170', '7-192', '7-22', '7-185', '7-124', '7-64', '7-164', '7-126', '7-65', '7-6', '7-56', '7-102', '7-125', '7-127', '7-86', '7-147', '7-51', '7-129', '7-92', '7-14', '7-40', '7-120', '7-55', '7-4', '7-16', '7-181', '7-73', '7-26', '7-72', '7-5', '7-74', '7-48', '7-50', '7-157', '7-134', '7-118', '7-111', '7-154', '7-20', '7-197', '7-39', '7-78', '7-33', '7-113', '7-203', '7-7'], ['7-59', '7-68', '7-27', '7-41', '7-179', '7-12', '7-77', '7-162', '7-45', '7-178', '7-141', '7-143', '7-76', '7-138', '7-36', '7-173', '7-187', '7-75', '7-25', '7-140', '7-123', '7-8', '7-184', '7-156', '7-28', '7-142', '7-82', '7-63', '7-214', '7-212', '7-93', '7-35', '7-97', '7-191', '7-13', '7-44', '7-89', '7-151', '7-57', '7-114', '7-85', '7-168', '7-130', '7-195', '7-158', '7-23', '7-99', '7-132', '7-95', '7-38', '7-101', '7-106', '7-3', '7-46', '7-202', '7-196', '7-98', '7-24', '7-79', '7-109', '7-131', '7-163'], ['7-183', '7-199', '7-188', '7-1', '7-133', '7-108', '7-204', '7-84', '7-15', '7-122', '7-90', '7-171', '7-119', '7-34', '7-166', '7-193', '7-52', '7-152', '7-160', '7-21', '7-180', '7-29', '7-139', '7-66', '7-135', '7-165', '7-175', '7-159', '7-201', '7-198', '7-11', '7-19', '7-42', '7-61', '7-176', '7-153', '7-91', '7-149', '7-32', '7-69', '7-169', '7-80', '7-186', '7-190', '7-31', '7-110', '7-58', '7-115', '7-112', '7-121'], ['7-18', '7-116', '7-155', '7-205', '7-2', '7-182', '7-67', '7-60', '7-88', '7-54', '7-200', '7-209', '7-167', '7-71', '7-107', '7-10', '7-144', '7-146', '7-210', '7-150', '7-53', '7-94', '7-83', '7-194', '7-207', '7-117', '7-47', '7-161', '7-189', '7-208', '7-213', '7-172', '7-206', '7-148', '7-177', '7-30'], ['7-320'], ['7-Oni Grunt', '7-Raven', '7-Wind Elemental', '7-Ash Elemental', '7-Death Elemental', '7-Ice Elemental', '7-Xultan Cultist', '7-Nakova & Molot', '7-Totemite Pup', '7-Earth Elemental', '7-Living Wave', '7-Mark of the Forge', '7-Varret the Wise', '7-Luckbreaker Gryffyn', '7-Varret the Mighty', '7-Curse of Loneliness', '7-Nihil Draconus', '7-Varret the Stealthy']],[[], ['1001-7', '1001-6', '1001-1', '1001-15'], ['1001-12', '1001-2', '1001-14', '1001-5', '1001-3', '1001-8', '1001-9', '1001-13', '1001-4'], ['1001-10', '1001-16', '1001-11'], [], ['1001-Honed Blade']],[[], ['1002-22', '1002-2', '1002-20', '1002-15', '1002-5', '1002-14', '1002-1', '1002-4'], ['1002-7', '1002-6', '1002-8', '1002-12', '1002-16', '1002-9', '1002-13', '1002-23', '1002-11', '1002-19', '1002-17'], ['1002-21', '1002-10', '1002-3', '1002-18'], [], ['1002-Avatar of Winds', '1002-Unseen Disciple', '1002-Omen of Austerity']],[[], ['1003-9', '1003-1', '1003-6', '1003-13', '1003-21', '1003-3', '1003-19', '1003-10'], ['1003-18', '1003-11', '1003-8', '1003-4', '1003-14', '1003-25', '1003-17', '1003-20', '1003-22', '1003-24', '1003-16', '1003-2'], ['1003-15', '1003-7', '1003-5', '1003-12', '1003-23'], [], ['1003-Dirty Rat', '1003-Bridled Sandstrider']],[[], ['1004-1', '1004-13', '1004-10', '1004-16', '1004-9', '1004-5', '1004-11', '1004-17', '1004-18'], ['1004-22', '1004-2', '1004-20', '1004-23', '1004-6', '1004-7', '1004-14', '1004-3', '1004-8', '1004-4'], ['1004-15', '1004-21', '1004-19', '1004-12'], [], ['1004-Xulta Exile', '1004-Helici', '1004-Goat', '1004-Razortooth Aranha', '1004-Word of Sol']],[[], ['1005-2', '1005-19', '1005-13', '1005-6', '1005-5', '1005-14', '1005-1', '1005-15', '1005-17'], ['1005-9', '1005-18', '1005-16', '1005-10', '1005-11', '1005-4', '1005-26', '1005-22', '1005-23', '1005-24', '1005-25', '1005-20'], ['1005-7', '1005-8', '1005-21', '1005-12', '1005-3'], [], ['1005-Clandestine Shotgun']],[['1006-5', '1006-17', '1006-1', '1006-14', '1006-10'], ['1006-7', '1006-19', '1006-13', '1006-9', '1006-4'], ['1006-18', '1006-15', '1006-12', '1006-3', '1006-6'], ['1006-2', '1006-16', '1006-8', '1006-20', '1006-11'], [], []],[['1-5', '1-8', '1-10', '1-13', '1-17', '1-23', '1-31', '1-36', '1-37', '1-68', '1-75', '1-77', '1-80', '1-91', '1-93', '1-102', '1-127', '1-130', '1-133', '1-135', '1-141', '1-147', '1-150', '1-162', '1-191', '1-196', '1-197', '1-200', '1-203', '1-205', '1-207', '1-208', '1-215', '1-218', '1-235', '1-250', '1-252', '1-259', '1-261', '1-264', '1-278', '1-281', '1-321', '1-330', '1-354', '1-377', '1-392', '1-408', '1-414', '1-415', '1-417', '1-419', '1-421', '1-424', '1-427', '2-13', '2-17', '2-26', '2-27', '2-37', '2-47', '2-50', '2-61', '2-66', '2-68', '2-70', '2-73', '2-75', '2-89', '2-95', '2-116', '2-122', '2-133', '2-147', '2-151', '2-156', '2-165', '2-171', '2-184', '2-186', '2-190', '2-201', '2-203', '2-216', '2-217', '2-231', '2-238', '3-1', '3-2', '3-3', '3-6', '3-9', '3-13', '3-38', '3-51', '3-63', '3-64', '3-66', '3-68', '3-77', '3-101', '3-108', '3-115', '3-116', '3-134', '3-137', '3-145', '3-151', '3-154', '3-168', '3-177', '3-183', '3-195', '3-201', '3-204', '3-213', '3-219', '3-222', '3-228', '3-232', '3-237', '3-238'], ['1-20', '1-27', '1-28', '1-32', '1-39', '1-46', '1-67', '1-70', '1-71', '1-79', '1-82', '1-89', '1-96', '1-105', '1-115', '1-117', '1-128', '1-132', '1-139', '1-143', '1-146', '1-152', '1-156', '1-157', '1-167', '1-189', '1-192', '1-204', '1-206', '1-211', '1-217', '1-222', '1-227', '1-240', '1-255', '1-257', '1-262', '1-267', '1-269', '1-273', '1-282', '1-324', '1-332', '1-353', '1-360', '1-374', '1-375', '1-396', '1-512', '1-514', '2-11', '2-23', '2-29', '2-35', '2-41', '2-76', '2-105', '2-129', '2-166', '2-177', '2-180', '2-188', '2-206', '2-220', '2-236', '3-4', '3-8', '3-22', '3-27', '3-39', '3-42', '3-53', '3-55', '3-58', '3-71', '3-85', '3-103', '3-112', '3-117', '3-119', '3-128', '3-152', '3-161', '3-165', '3-166', '3-182', '3-185', '3-188', '3-207', '3-208', '3-209', '3-214', '3-216', '3-218', '3-233', '3-234', '3-254', '3-257', '3-258', '3-262', '3-269', '3-271', '3-274', '3-279'], ['1-16', '1-26', '1-34', '1-48', '1-54', '1-60', '1-78', '1-84', '1-86', '1-94', '1-97', '1-103', '1-109', '1-110', '1-118', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-168', '1-170', '1-172', '1-175', '1-202', '1-221', '1-231', '1-234', '1-241', '1-242', '1-244', '1-272', '1-280', '1-287', '1-292', '1-294', '1-299', '1-306', '1-314', '1-320', '1-322', '1-334', '1-336', '1-345', '1-351', '1-358', '1-371', '1-386', '1-399', '1-402', '1-488', '1-506', '2-5', '2-14', '2-21', '2-22', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-86', '2-90', '2-92', '2-114', '2-126', '2-158', '2-159', '2-167', '2-173', '2-182', '2-187', '2-192', '2-207', '2-208', '2-213', '2-222', '2-223', '2-225', '2-235', '2-237', '3-7', '3-14', '3-16', '3-19', '3-23', '3-26', '3-37', '3-56', '3-60', '3-69', '3-91', '3-122', '3-131', '3-140', '3-155', '3-158', '3-160', '3-163', '3-170', '3-173', '3-178', '3-205', '3-212', '3-215', '3-217', '3-220', '3-226', '3-236', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268'], ['1-6', '1-47', '1-59', '1-99', '1-116', '1-174', '1-177', '1-182', '1-186', '1-233', '1-239', '1-248', '1-303', '1-305', '1-309', '1-310', '1-317', '1-323', '1-326', '1-328', '1-335', '1-338', '1-343', '1-347', '1-350', '1-355', '1-362', '1-365', '1-367', '1-380', '1-383', '1-384', '1-385', '1-389', '1-391', '1-403', '2-30', '2-32', '2-34', '2-38', '2-67', '2-101', '2-119', '2-127', '2-154', '2-164', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-215', '2-218', '2-229', '2-230', '2-234', '2-242', '2-245', '3-5', '3-31', '3-41', '3-43', '3-46', '3-49', '3-52', '3-80', '3-87', '3-88', '3-93', '3-96', '3-97', '3-100', '3-113', '3-120', '3-136', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-243', '3-244', '3-247', '3-248', '3-250', '3-255', '3-263', '3-265', '3-275', '3-277', '3-278'], [], []],[['1-4', '1-5', '1-13', '1-21', '1-30', '1-31', '1-33', '1-37', '1-41', '1-73', '1-75', '1-77', '1-91', '1-101', '1-120', '1-130', '1-134', '1-142', '1-147', '1-150', '1-158', '1-162', '1-171', '1-180', '1-197', '1-200', '1-205', '1-209', '1-215', '1-218', '1-226', '1-235', '1-238', '1-250', '1-252', '1-261', '1-265', '1-276', '1-278', '1-288', '1-301', '1-321', '1-357', '1-407', '1-408', '1-411', '1-412', '1-417', '1-419', '1-421', '1-424', '1-427', '1-504', '2-3', '2-8', '2-15', '2-55', '2-56', '2-68', '2-73', '2-95', '2-103', '2-108', '2-118', '2-138', '2-145', '2-149', '2-150', '2-169', '2-171', '2-186', '2-198', '2-201', '2-209', '2-216', '2-231', '2-238', '2-246', '2-250', '2-251', '3-2', '3-18', '3-29', '3-40', '3-57', '3-62', '3-63', '3-65', '3-74', '3-108', '3-139', '3-154', '3-174', '3-176', '3-204', '3-231', '3-238', '4-14', '4-16', '4-36', '4-54', '4-61', '4-66', '4-74', '4-86', '4-101', '4-104', '4-109', '4-133', '4-146', '4-152', '4-154', '4-175', '4-207', '4-213', '4-216', '4-226'], ['1-2', '1-14', '1-20', '1-29', '1-32', '1-46', '1-52', '1-53', '1-58', '1-67', '1-71', '1-81', '1-89', '1-96', '1-98', '1-105', '1-115', '1-117', '1-122', '1-125', '1-132', '1-139', '1-146', '1-148', '1-156', '1-160', '1-184', '1-193', '1-204', '1-214', '1-216', '1-217', '1-224', '1-227', '1-240', '1-247', '1-251', '1-258', '1-269', '1-275', '1-279', '1-291', '1-324', '1-346', '1-353', '1-379', '1-396', '1-406', '2-9', '2-16', '2-23', '2-29', '2-45', '2-76', '2-78', '2-80', '2-94', '2-105', '2-112', '2-115', '2-131', '2-134', '2-135', '2-136', '2-139', '2-146', '2-166', '2-174', '2-188', '2-195', '2-205', '2-206', '2-220', '2-236', '3-22', '3-24', '3-28', '3-39', '3-47', '3-53', '3-70', '3-72', '3-78', '3-82', '3-85', '3-89', '3-109', '3-112', '3-123', '3-127', '3-135', '3-144', '3-165', '3-211', '3-214', '3-216', '3-233', '3-241', '3-253', '3-274', '3-280', '4-11', '4-24', '4-26', '4-41', '4-47', '4-51', '4-62', '4-65', '4-73', '4-83', '4-111', '4-119', '4-130', '4-132', '4-136', '4-147', '4-151', '4-157', '4-162', '4-171', '4-185', '4-195', '4-196', '4-202', '4-209', '4-210', '4-220', '4-221', '4-232', '4-235', '4-245', '4-250', '4-252', '4-254', '4-261', '4-264', '4-272', '4-276'], ['1-3', '1-18', '1-26', '1-34', '1-38', '1-45', '1-66', '1-84', '1-97', '1-103', '1-104', '1-109', '1-118', '1-121', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-170', '1-175', '1-199', '1-202', '1-210', '1-234', '1-241', '1-242', '1-244', '1-268', '1-272', '1-280', '1-285', '1-286', '1-292', '1-293', '1-294', '1-306', '1-312', '1-322', '1-336', '1-358', '1-359', '1-363', '1-371', '1-373', '1-397', '1-480', '2-5', '2-14', '2-22', '2-40', '2-49', '2-85', '2-86', '2-109', '2-110', '2-114', '2-126', '2-148', '2-159', '2-167', '2-173', '2-187', '2-192', '2-200', '2-207', '2-213', '2-222', '2-223', '2-235', '2-237', '3-7', '3-10', '3-14', '3-21', '3-23', '3-37', '3-44', '3-60', '3-67', '3-76', '3-81', '3-91', '3-107', '3-131', '3-140', '3-155', '3-158', '3-170', '3-205', '3-220', '3-226', '3-236', '3-252', '3-256', '3-259', '4-5', '4-17', '4-20', '4-21', '4-30', '4-43', '4-50', '4-56', '4-60', '4-68', '4-69', '4-70', '4-76', '4-105', '4-106', '4-110', '4-112', '4-123', '4-126', '4-127', '4-140', '4-164', '4-166', '4-169', '4-173', '4-179', '4-180', '4-183', '4-192', '4-203', '4-211', '4-217', '4-218', '4-224', '4-237', '4-256', '4-263', '4-268', '4-275', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-116', '1-119', '1-164', '1-174', '1-177', '1-182', '1-186', '1-233', '1-248', '1-303', '1-305', '1-307', '1-308', '1-309', '1-317', '1-323', '1-328', '1-335', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-383', '1-384', '1-389', '1-391', '2-32', '2-34', '2-100', '2-119', '2-154', '2-179', '2-183', '2-185', '2-197', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-5', '3-31', '3-41', '3-43', '3-48', '3-49', '3-52', '3-80', '3-88', '3-96', '3-97', '3-113', '3-120', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-192', '3-194', '3-196', '3-243', '3-247', '3-248', '3-249', '3-255', '3-265', '3-278', '4-31', '4-33', '4-37', '4-48', '4-58', '4-67', '4-79', '4-87', '4-93', '4-96', '4-108', '4-115', '4-128', '4-144', '4-158', '4-168', '4-174', '4-181', '4-184', '4-191', '4-201', '4-222', '4-223', '4-229', '4-240', '4-249', '4-260', '4-265', '4-269', '4-270'], [], []],[['1-4', '1-5', '1-31', '1-33', '1-37', '1-75', '1-91', '1-120', '1-130', '1-141', '1-150', '1-162', '1-171', '1-180', '1-190', '1-191', '1-203', '1-215', '1-250', '1-260', '1-261', '1-407', '1-408', '1-417', '1-419', '1-421', '1-424', '1-427', '2-3', '2-73', '2-89', '2-108', '2-118', '2-132', '2-142', '2-149', '2-151', '2-169', '2-171', '2-186', '2-201', '2-216', '2-231', '3-3', '3-13', '3-17', '3-25', '3-29', '3-33', '3-40', '3-50', '3-57', '3-62', '3-64', '3-65', '3-66', '3-68', '3-73', '3-77', '3-83', '3-90', '3-98', '3-105', '3-108', '3-114', '3-116', '3-137', '3-145', '3-169', '3-174', '3-176', '3-177', '3-183', '3-195', '3-199', '3-206', '3-228', '3-229', '3-232', '3-237', '3-240', '4-16', '4-66', '4-109', '4-190', '4-200', '4-206'], ['1-20', '1-28', '1-29', '1-32', '1-39', '1-53', '1-67', '1-81', '1-96', '1-113', '1-122', '1-125', '1-128', '1-143', '1-157', '1-160', '1-184', '1-216', '1-222', '1-225', '1-267', '1-269', '1-273', '1-279', '1-282', '1-283', '1-290', '1-332', '1-346', '1-374', '1-381', '1-396', '1-406', '1-513', '2-9', '2-45', '2-53', '2-80', '2-81', '2-91', '2-93', '2-115', '2-135', '2-143', '2-146', '2-180', '2-193', '2-205', '2-206', '2-220', '2-239', '3-22', '3-24', '3-28', '3-30', '3-42', '3-45', '3-53', '3-55', '3-70', '3-72', '3-78', '3-85', '3-95', '3-99', '3-109', '3-117', '3-123', '3-127', '3-156', '3-162', '3-185', '3-188', '3-198', '3-214', '3-233', '3-241', '3-246', '3-253', '3-254', '3-257', '3-260', '3-274', '3-279', '3-280', '4-8', '4-24', '4-32', '4-132', '4-139', '4-150', '4-153', '4-157', '4-162', '4-171', '4-210', '4-232', '4-245', '4-254', '4-264', '4-273', '4-276'], ['1-3', '1-18', '1-19', '1-26', '1-38', '1-56', '1-66', '1-78', '1-103', '1-118', '1-138', '1-140', '1-149', '1-166', '1-170', '1-199', '1-210', '1-223', '1-234', '1-241', '1-268', '1-285', '1-294', '1-300', '1-314', '1-322', '1-336', '1-339', '1-359', '1-363', '1-371', '1-390', '1-397', '1-402', '1-480', '1-488', '1-506', '2-21', '2-48', '2-85', '2-92', '2-110', '2-148', '2-173', '2-187', '2-207', '2-213', '2-223', '2-233', '2-235', '3-10', '3-14', '3-19', '3-21', '3-34', '3-37', '3-44', '3-59', '3-67', '3-76', '3-86', '3-91', '3-92', '3-94', '3-130', '3-131', '3-140', '3-155', '3-158', '3-163', '3-170', '3-178', '3-179', '3-197', '3-205', '3-215', '3-217', '3-220', '3-230', '3-252', '3-256', '3-272', '4-5', '4-13', '4-17', '4-21', '4-50', '4-70', '4-80', '4-106', '4-112', '4-126', '4-127', '4-131', '4-169', '4-183', '4-203', '4-217', '4-218', '4-224', '4-227', '4-251', '4-258', '4-262', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-119', '1-164', '1-174', '1-182', '1-248', '1-303', '1-310', '1-317', '1-326', '1-328', '1-343', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-384', '1-389', '1-403', '2-32', '2-100', '2-101', '2-154', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-31', '3-36', '3-43', '3-48', '3-49', '3-52', '3-87', '3-96', '3-97', '3-100', '3-120', '3-136', '3-138', '3-143', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-247', '3-248', '3-250', '3-265', '3-275', '3-277', '3-278', '4-31', '4-33', '4-67', '4-93', '4-137', '4-158', '4-174', '4-181', '4-191', '4-223', '4-228', '4-229', '4-249', '4-260', '4-269', '4-270'], [], []],[['1-15', '1-21', '1-30', '1-91', '1-133', '1-135', '1-147', '1-158', '1-171', '1-197', '1-200', '1-209', '1-213', '1-215', '1-235', '1-238', '1-250', '1-256', '1-263', '1-265', '1-301', '1-407', '1-408', '1-414', '1-501', '1-503', '1-504', '2-6', '2-7', '2-19', '2-26', '2-27', '2-36', '2-37', '2-46', '2-55', '2-57', '2-61', '2-75', '2-89', '2-103', '2-111', '2-118', '2-132', '2-151', '2-155', '2-169', '3-3', '3-15', '3-62', '3-102', '3-153', '3-174', '3-176', '4-4', '4-22', '4-29', '4-34', '4-54', '4-59', '4-63', '4-71', '4-75', '4-86', '4-100', '4-102', '4-103', '4-116', '4-135', '4-163', '4-165', '4-207', '4-212', '5-15', '5-27', '5-84', '5-87', '5-113', '5-150', '5-157', '5-160', '5-166', '5-184', '5-251', '5-253'], ['0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-2', '1-22', '1-25', '1-39', '1-46', '1-67', '1-70', '1-71', '1-76', '1-96', '1-98', '1-105', '1-131', '1-148', '1-152', '1-163', '1-178', '1-193', '1-195', '1-204', '1-216', '1-224', '1-247', '1-251', '1-258', '1-275', '1-282', '1-297', '1-304', '1-406', '1-425', '1-514', '2-4', '2-9', '2-11', '2-18', '2-23', '2-29', '2-41', '2-52', '2-53', '2-64', '2-96', '2-105', '2-131', '2-134', '2-144', '3-11', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-280', '4-1', '4-3', '4-8', '4-9', '4-26', '4-49', '4-73', '4-78', '4-85', '4-94', '4-97', '4-107', '4-119', '4-130', '4-136', '4-139', '4-145', '4-147', '4-150', '4-177', '4-193', '4-196', '4-199', '4-221', '4-232', '4-234', '4-276', '5-44', '5-47', '5-58', '5-65', '5-77', '5-97', '5-102', '5-116', '5-131', '5-141', '5-153', '5-156', '5-170', '5-181'], ['1-34', '1-45', '1-60', '1-66', '1-86', '1-97', '1-103', '1-121', '1-138', '1-144', '1-151', '1-155', '1-166', '1-168', '1-183', '1-199', '1-202', '1-223', '1-232', '1-241', '1-244', '1-268', '1-272', '1-286', '1-292', '1-293', '1-294', '1-320', '1-339', '1-363', '1-386', '1-390', '1-402', '1-480', '1-488', '1-506', '2-5', '2-28', '2-63', '2-85', '2-126', '2-159', '2-182', '2-200', '2-225', '3-14', '3-21', '3-37', '3-60', '3-61', '3-91', '3-107', '3-133', '3-170', '3-193', '3-212', '3-226', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268', '4-10', '4-17', '4-21', '4-25', '4-43', '4-50', '4-68', '4-70', '4-110', '4-123', '4-126', '4-127', '4-166', '4-169', '4-217', '4-218', '4-237', '4-242', '4-243', '4-247', '4-248', '4-253', '4-255', '4-256', '4-262', '4-266', '4-268', '4-275', '4-278', '5-26', '5-29', '5-33', '5-55', '5-68', '5-71', '5-85', '5-105', '5-117', '5-118', '5-129', '5-145', '5-175', '5-178', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-99', '1-107', '1-119', '1-123', '1-164', '1-177', '1-186', '1-239', '1-246', '1-248', '1-303', '1-305', '1-309', '1-310', '1-328', '1-338', '1-343', '1-362', '1-380', '1-384', '1-389', '1-400', '2-30', '2-32', '2-34', '2-67', '2-183', '2-185', '2-191', '2-204', '2-218', '2-230', '2-253', '3-5', '3-36', '3-41', '3-49', '3-52', '3-87', '3-88', '3-93', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-235', '3-243', '3-248', '3-265', '4-15', '4-31', '4-44', '4-58', '4-91', '4-128', '4-138', '4-143', '4-158', '4-181', '4-184', '4-187', '4-191', '4-223', '4-239', '5-20', '5-36', '5-56', '5-74', '5-109', '5-110', '5-111', '5-146', '5-148', '5-169', '5-171', '5-182', '5-183', '5-200', '5-203', '5-213', '5-219', '5-224'], [], []],[['1-5', '1-41', '1-91', '1-133', '1-136', '1-162', '1-197', '1-213', '1-220', '1-250', '1-261', '1-264', '1-278', '1-330', '1-357', '1-369', '1-392', '1-407', '1-408', '1-409', '1-410', '1-411', '1-412', '1-413', '1-414', '1-417', '1-419', '1-421', '1-424', '1-427', '2-7', '2-19', '2-31', '2-46', '2-50', '2-57', '2-70', '2-75', '2-89', '2-103', '2-111', '2-138', '2-171', '2-175', '2-186', '2-201', '2-209', '2-216', '2-224', '2-231', '2-238', '2-246', '2-247', '2-248', '2-250', '2-251', '3-15', '3-40', '3-63', '3-65', '3-102', '3-153', '3-154', '3-174', '3-206', '4-22', '4-34', '4-35', '4-45', '4-46', '4-52', '4-59', '4-63', '4-71', '4-75', '4-82', '4-86', '4-100', '4-103', '4-121', '4-122', '4-135', '4-163', '4-167', '4-175', '4-182', '4-189', '4-197', '4-212', '4-213', '4-219', '4-236', '5-4', '5-5', '5-7', '5-28', '5-39', '5-52', '5-73', '5-82', '5-91', '5-92', '5-103', '5-113', '5-134', '5-137', '5-163', '5-172', '5-177', '5-184', '5-196', '5-214', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '5-253'], ['0-63', '1-32', '1-52', '1-67', '1-82', '1-163', '1-178', '1-204', '1-225', '1-240', '1-258', '1-262', '1-275', '1-291', '1-315', '1-332', '1-333', '1-374', '1-381', '1-404', '1-406', '1-416', '1-425', '1-502', '1-512', '1-514', '2-4', '2-23', '2-43', '2-45', '2-51', '2-60', '2-64', '2-78', '2-80', '2-96', '2-102', '2-131', '2-137', '2-139', '2-144', '2-172', '2-177', '2-193', '2-202', '2-226', '2-240', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-262', '3-280', '4-9', '4-24', '4-41', '4-73', '4-81', '4-114', '4-119', '4-136', '4-147', '4-162', '4-171', '4-176', '4-177', '4-196', '4-221', '4-234', '4-273', '4-276', '5-2', '5-8', '5-13', '5-23', '5-30', '5-35', '5-47', '5-49', '5-58', '5-59', '5-62', '5-65', '5-88', '5-97', '5-107', '5-114', '5-126', '5-132', '5-140', '5-147', '5-158', '5-162', '5-173', '5-181', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249'], ['1-3', '1-54', '1-84', '1-103', '1-104', '1-121', '1-140', '1-155', '1-166', '1-172', '1-188', '1-202', '1-234', '1-241', '1-280', '1-294', '1-299', '1-312', '1-320', '1-334', '1-336', '1-339', '1-359', '1-363', '1-368', '1-371', '1-373', '1-388', '1-390', '1-397', '1-480', '2-28', '2-48', '2-63', '2-85', '2-109', '2-110', '2-114', '2-158', '2-160', '2-170', '2-181', '2-182', '2-192', '2-208', '2-223', '2-225', '3-10', '3-60', '3-61', '3-107', '3-133', '3-155', '3-212', '3-220', '3-251', '3-256', '3-261', '3-264', '3-266', '3-267', '3-268', '3-270', '3-273', '4-10', '4-21', '4-25', '4-70', '4-123', '4-126', '4-127', '4-164', '4-169', '4-192', '4-217', '4-242', '4-243', '4-247', '4-248', '4-251', '4-253', '4-255', '4-256', '4-262', '4-266', '4-271', '4-275', '4-277', '4-278', '5-12', '5-25', '5-29', '5-32', '5-33', '5-40', '5-68', '5-71', '5-86', '5-98', '5-105', '5-139', '5-143', '5-145', '5-161', '5-175', '5-178', '5-180', '5-198', '5-204', '5-205', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-51', '1-59', '1-99', '1-164', '1-174', '1-177', '1-186', '1-239', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-343', '1-348', '1-362', '1-365', '1-380', '1-384', '1-389', '1-391', '2-30', '2-67', '2-98', '2-154', '2-183', '2-185', '2-197', '2-204', '2-218', '2-230', '2-242', '2-253', '3-5', '3-36', '3-41', '3-46', '3-80', '3-93', '3-97', '3-100', '3-113', '3-138', '3-148', '3-175', '3-186', '3-187', '3-196', '3-243', '3-248', '3-255', '3-265', '3-278', '4-15', '4-31', '4-33', '4-44', '4-48', '4-58', '4-79', '4-91', '4-96', '4-128', '4-138', '4-143', '4-144', '4-181', '4-184', '4-187', '4-191', '4-223', '4-228', '4-239', '4-240', '4-246', '4-269', '5-17', '5-56', '5-57', '5-63', '5-72', '5-109', '5-110', '5-124', '5-133', '5-146', '5-148', '5-164', '5-182', '5-183', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-219', '5-224', '5-230', '5-235', '5-240', '5-245', '5-250'], [], []],[['1-55', '1-85', '1-194', '1-200', '1-213', '1-254', '1-407', '1-408', '1-414', '2-8', '2-89', '2-138', '3-1', '3-40', '3-51', '3-101', '3-102', '3-151', '3-201', '3-228', '4-4', '4-18', '4-34', '4-53', '4-59', '4-64', '4-71', '4-100', '4-101', '4-116', '4-122', '4-148', '4-149', '4-161', '4-163', '4-175', '4-189', '4-197', '4-213', '4-233', '4-279', '5-15', '5-113', '5-251', '5-253', '5-255', '5-256', '7-4', '7-5', '7-6', '7-9', '7-14', '7-16', '7-20', '7-22', '7-26', '7-33', '7-37', '7-39', '7-40', '7-43', '7-48', '7-49', '7-50', '7-51', '7-55', '7-56', '7-62', '7-65', '7-70', '7-72', '7-73', '7-74', '7-78', '7-81', '7-86', '7-87', '7-92', '7-96', '7-100', '7-103', '7-104', '7-113', '7-118', '7-124', '7-125', '7-126', '7-127', '7-128', '7-129', '7-134', '7-136', '7-137', '7-211'], ['0-6', '0-14', '0-21', '0-30', '0-36', '1-14', '1-64', '1-90', '1-105', '1-152', '1-163', '1-178', '1-206', '1-227', '1-240', '1-283', '1-406', '1-418', '1-420', '1-422', '1-423', '1-426', '2-4', '2-9', '2-12', '2-16', '2-29', '2-94', '2-96', '2-131', '2-136', '2-143', '2-152', '3-70', '3-85', '3-119', '3-135', '3-144', '3-203', '3-211', '3-239', '3-280', '4-1', '4-3', '4-6', '4-26', '4-49', '4-73', '4-90', '4-97', '4-136', '4-145', '4-160', '4-171', '4-176', '4-193', '4-202', '4-234', '4-272', '5-2', '5-83', '5-97', '5-107', '5-132', '5-181', '5-254', '7-8', '7-13', '7-24', '7-25', '7-28', '7-35', '7-36', '7-44', '7-45', '7-57', '7-59', '7-63', '7-79', '7-85', '7-93', '7-97', '7-98', '7-101', '7-106', '7-114', '7-131', '7-132', '7-140', '7-141', '7-142', '7-143', '7-156', '7-162', '7-178', '7-184', '7-195', '7-212', '7-214'], ['1-26', '1-34', '1-38', '1-66', '1-84', '1-86', '1-112', '1-121', '1-138', '1-140', '1-151', '1-166', '1-202', '1-231', '1-241', '1-244', '1-306', '1-368', '1-388', '2-5', '2-21', '2-109', '2-110', '2-114', '2-159', '2-182', '2-222', '3-14', '3-21', '3-69', '3-91', '3-107', '3-131', '3-133', '3-158', '3-173', '3-178', '3-193', '3-205', '3-212', '3-217', '3-226', '3-242', '3-245', '4-10', '4-13', '4-21', '4-25', '4-43', '4-50', '4-60', '4-68', '4-70', '4-76', '4-112', '4-126', '4-131', '4-164', '4-169', '4-180', '4-204', '4-211', '4-217', '4-218', '4-227', '4-248', '4-271', '4-277', '4-278', '5-9', '5-12', '5-33', '5-68', '5-71', '5-85', '5-86', '5-90', '5-98', '5-105', '5-145', '5-161', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221'], ['1-6', '1-51', '1-61', '1-99', '1-107', '1-124', '1-164', '1-177', '1-185', '1-186', '1-239', '1-245', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-338', '1-362', '1-367', '1-389', '2-154', '2-185', '2-204', '2-229', '2-242', '2-253', '3-36', '3-49', '3-52', '3-80', '3-87', '3-88', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-192', '3-235', '3-243', '3-247', '3-248', '3-277', '4-31', '4-33', '4-37', '4-44', '4-48', '4-79', '4-91', '4-93', '4-96', '4-115', '4-137', '4-138', '4-143', '4-158', '4-184', '4-187', '4-228', '4-239', '4-240', '5-17', '5-21', '5-36', '5-56', '5-74', '5-110', '5-133', '5-146', '5-183'], [], []],[['1-133', '1-369', '5-246', '2-175', '5-52', '1-260', '6-139', '3-171', '1-114', '1-102', '6-210', '3-167', '1-212', '5-196', '6-56', '2-70', '6-213', '1-33', '0-15', '1-147', '1-21', '5-113', '5-78', '5-208', '1-72', '1-12', '2-50', '6-138', '2-217', '4-101', '1-264', '1-69', '4-213', '5-10', '4-34', '2-73', '6-31', '0-33', '1-209', '3-2', '6-25', '2-103', '4-64', '5-91', '1-330', '1-30', '6-118', '1-41', '1-162', '1-392', '4-135', '2-238', '6-146', '6-5', '6-148', '3-154', '1-93', '5-251', '1-505', '5-236', '5-241', '2-66', '6-82', '2-156', '1-207', '1-270', '0-11', '5-115', '1-4', '2-210', '1-150', '5-149', '5-75', '4-113', '1-256', '1-354', '6-91', '1-68', '1-302', '1-77', '6-155', '3-204', '1-141', '1-197', '4-63', '6-136', '1-127', '1-180', '4-133', '1-142', '1-357', '6-166', '2-198', '2-138', '6-149', '1-55', '2-55', '0-18', '1-31', '2-68', '1-196', '6-104', '5-112', '6-1', '6-66', '1-208', '0-4', '4-238', '1-73', '1-252', '0-24', '1-136', '6-7', '1-265', '6-26', '3-18', '1-266', '1-49', '5-87', '1-213', '3-174', '1-35', '6-189', '4-236', '1-17', '1-158', '1-83', '1-80', '3-3', '5-14', '0-3', '1-101', '5-7', '1-254', '1-301', '1-85', '1-238', '5-226', '1-153', '6-69', '1-137', '1-220', '0-35', '6-182', '6-167', '5-172', '6-78', '1-171', '1-130', '1-408', '5-42', '1-37', '3-106', '1-407', '1-276', '4-103', '3-29', '5-5', '6-188', '6-3', '1-261', '4-74', '5-84', '6-46', '2-2', '5-41', '1-15', '3-63', '3-157', '4-216', '6-150', '6-197', '5-134', '1-415', '1-218', '4-14', '4-152', '6-181', '1-503', '2-194', '5-252', '5-231', '2-149', '4-197', '5-108', '1-159', '1-504', '5-120', '3-65', '4-27', '1-278', '1-75', '3-202', '4-22', '4-12', '1-321', '4-53', '3-153', '2-118', '5-220', '1-215', '1-88', '1-203', '1-284', '3-145'], ['1-204', '6-71', '6-132', '2-96', '5-94', '6-212', '1-32', '4-221', '0-9', '6-198', '6-65', '5-123', '6-19', '1-50', '5-131', '5-6', '5-192', '6-141', '0-56', '4-111', '5-8', '1-406', '5-211', '6-232', '3-11', '6-137', '5-216', '5-59', '3-218', '0-58', '5-158', '6-133', '4-254', '3-257', '4-132', '2-137', '5-53', '3-30', '6-152', '1-90', '6-21', '1-125', '1-216', '1-255', '6-83', '5-201', '5-93', '4-81', '6-160', '0-61', '1-128', '1-324', '1-146', '2-177', '4-142', '5-34', '0-51', '1-79', '0-53', '6-94', '5-11', '5-79', '1-148', '3-164', '5-2', '3-211', '0-6', '6-100', '1-360', '1-105', '1-222', '3-279', '2-163', '4-19', '6-53', '5-194', '6-153', '5-207', '6-234', '2-29', '1-139', '6-45', '1-113', '0-62', '4-57', '3-233', '6-192', '6-186', '2-162', '6-171', '0-30', '5-88', '3-71', '4-259', '6-116', '6-190', '1-165', '6-164', '1-117', '2-136', '1-279', '1-39', '5-128', '1-131', '2-10', '2-35', '6-73', '1-160', '2-146', '1-81', '2-174', '6-109', '3-239', '1-76', '0-27', '0-21', '1-258', '1-98', '5-62', '6-226', '6-106', '1-176', '1-240', '4-8', '3-274', '4-73', '5-181', '1-211', '5-24', '4-276', '6-201', '1-178', '1-230', '4-85', '2-45', '1-282', '0-54', '2-205', '3-241', '4-107', '6-17', '4-171', '1-341', '5-49', '5-97', '5-165', '1-192', '2-64', '5-162', '6-70', '6-196', '4-220', '2-166', '5-100', '4-3', '1-25', '4-241', '6-147', '0-14', '1-46', '5-47', '4-198', '4-257', '4-47', '6-52', '6-108', '6-219', '4-62', '0-36', '3-246', '6-61', '6-32', '4-39', '1-70', '1-247', '3-182', '4-272', '1-28', '4-130', '6-238', '1-96', '6-173', '1-89', '6-67', '1-304', '1-52', '1-394', '1-297', '4-151', '2-139', '4-26', '1-333', '5-154', '6-230', '2-227', '1-353', '4-150', '1-100', '6-27', '1-283', '5-222', '5-81', '2-115', '1-214', '5-254', '2-211', '6-191', '5-151', '0-55', '2-1', '1-396', '5-102', '2-226', '1-27', '5-141', '6-97', '3-22', '6-80', '1-262', '1-43', '5-188', '1-67', '2-131', '0-60', '3-103', '1-236', '6-34', '6-145', '6-40', '3-27', '5-30', '4-65', '1-58', '4-98', '2-80', '1-42', '5-138', '2-9', '4-162', '1-156', '6-86', '2-4', '5-48', '1-318', '4-176', '3-123', '1-193', '6-102', '1-291', '3-127', '4-195', '5-132', '6-140', '3-276', '1-375', '0-63', '6-228'], ['5-26', '5-205', '5-33', '1-60', '5-76', '4-5', '1-237', '1-183', '6-22', '4-237', '5-217', '5-40', '5-199', '6-193', '5-185', '2-14', '3-242', '6-9', '3-227', '3-107', '6-115', '1-94', '5-129', '4-251', '5-223', '3-220', '6-215', '4-69', '2-167', '4-256', '1-243', '2-109', '5-117', '6-64', '4-275', '3-133', '1-175', '2-28', '3-61', '1-294', '1-97', '4-271', '6-231', '1-285', '6-74', '5-204', '1-242', '5-161', '1-3', '4-43', '4-127', '1-232', '4-242', '5-106', '1-244', '3-259', '3-131', '2-114', '3-60', '1-312', '1-19', '2-126', '3-155', '6-156', '1-112', '5-71', '4-183', '5-212', '1-38', '6-227', '6-130', '3-212', '2-160', '1-272', '3-256', '1-300', '5-12', '5-175', '3-184', '1-280', '6-98', '2-59', '6-178', '6-229', '4-155', '5-209', '5-210', '5-198', '6-135', '4-76', '5-139', '4-30', '1-363', '4-203', '5-215', '6-157', '6-14', '2-192', '1-241', '5-225', '4-218', '4-123', '2-63', '4-268', '5-178', '1-78', '3-44', '1-234', '4-263', '4-255', '6-236', '5-51', '6-208', '6-30', '1-286', '2-22', '3-81', '5-69', '1-399', '6-54', '1-154', '1-271', '5-90', '2-48', '1-480', '3-158', '5-85', '5-218', '5-145', '1-373', '6-206', '5-98', '1-54', '4-80', '4-106', '5-32', '6-142', '6-85', '5-25', '3-140', '3-56', '6-235', '5-105', '6-233', '1-188', '5-221', '4-278', '4-10', '6-223', '3-191', '3-126', '1-149', '5-19', '5-118', '5-9', '4-25', '1-181', '1-202', '4-173', '2-49', '5-136', '4-277', '5-50', '4-204', '6-123', '5-29', '6-92', '4-140', '3-189', '1-118', '6-38', '6-202', '2-85', '2-40', '1-336', '4-56', '2-225', '4-166', '5-95', '1-155', '6-220', '1-306', '4-60', '1-168', '6-6', '2-181', '5-55', '1-138', '4-262', '6-62', '1-45', '6-165', '6-35', '5-180', '1-295'], ['3-88', '1-6', '5-224', '5-101', '4-269', '1-348', '4-42', '6-131', '4-15', '6-144', '1-119', '5-144', '5-89', '4-260', '1-51', '5-182', '4-143', '6-43', '5-230', '1-177', '4-184', '3-149', '4-79', '4-228', '5-213', '5-72', '2-154', '5-21', '2-34', '1-305', '3-148', '4-91', '6-174', '3-31', '6-89', '6-49', '1-308', '1-164', '4-191', '5-186', '3-80', '4-223', '5-240', '2-253', '4-240', '6-39', '6-68', '2-164', '6-207', '3-5', '4-229', '2-230', '4-144', '5-200', '6-59', '1-400', '3-196', '5-56', '5-235', '1-380', '5-133', '3-143', '5-164', '1-185', '5-195', '1-59', '3-278', '6-218', '4-181', '1-326', '6-117', '2-197', '3-48', '6-168', '5-203', '4-58', '5-124', '2-119', '1-307', '2-67', '3-43', '1-61', '5-63', '1-124', '6-29', '5-20', '6-103', '3-243', '6-162', '5-109', '3-52', '6-169', '6-57', '1-246', '3-138', '6-134', '5-111', '3-248', '5-190', '6-113', '3-93', '4-222', '3-113', '5-193', '5-189', '1-123', '1-47', '3-265', '6-203', '1-366', '2-38', '2-127', '1-245', '6-159', '1-233', '6-33', '3-244', '5-250', '6-204', '4-168', '2-30'], [], []],[['0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-202', '3-204', '4-12', '4-14', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-66', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-41', '5-42', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-56', '6-66', '6-69', '6-78', '6-82', '6-91', '6-104', '6-118', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-188', '6-189', '6-197', '6-210', '6-213'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-164', '3-182', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-254', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-65', '6-67', '6-70', '6-71', '6-73', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-196', '6-198', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-25', '4-30', '4-43', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-89', '6-103', '6-113', '6-117', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-203', '6-204', '6-207', '6-218'], [], []],[['0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-194', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-108', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-195', '3-202', '3-204', '4-12', '4-14', '4-18', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-206', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-15', '5-41', '5-42', '5-46', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-2', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-50', '6-56', '6-66', '6-69', '6-78', '6-82', '6-87', '6-91', '6-93', '6-104', '6-114', '6-118', '6-122', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-184', '6-188', '6-189', '6-197', '6-210', '6-213', '6-216'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-143', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-152', '3-164', '3-182', '3-188', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-32', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-77', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249', '5-254', '6-15', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-63', '6-65', '6-67', '6-70', '6-71', '6-73', '6-76', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-194', '6-196', '6-198', '6-199', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-293', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '1-488', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-17', '4-25', '4-30', '4-43', '4-50', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-120', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-36', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-84', '6-89', '6-103', '6-113', '6-117', '6-125', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-175', '6-203', '6-204', '6-207', '6-217', '6-218'], [], []]],'format_boosts':[[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[[],[],[],[],[],[]],[['6-5', '1-15', '5-5', '5-7', '4-12', '0-3', '5-10', '1-31', '4-22', '4-27', '1-55', '1-392', '1-408', '1-407', '2-217', '1-330', '2-175', '1-369', '5-236', '5-226', '5-241', '5-231', '5-246', '3-202', '2-138', '1-252', '4-197', '6-188', '6-189', '1-261', '4-213', '1-278', '1-213', '6-213', '6-181', '5-113', '3-154', '5-115', '3-157', '6-150', '1-196', '1-197', '5-120', '1-203', '3-171', '2-118', '6-136', '1-133', '2-70', '5-78', '1-504', '1-142', '1-141', '6-104', '3-106', '6-118', '4-133', '4-135', '6-91', '1-72', '4-53', '1-69', '1-75', '1-68', '1-85', '3-63', '4-64', '1-80', '1-503', '2-55', '6-46'], ['4-3', '5-6', '1-25', '6-19', '4-19', '2-10', '1-32', '1-39', '4-39', '3-30', '1-46', '0-6', '5-30', '1-406', '4-254', '6-238', '1-79', '4-241', '3-274', '5-222', '3-276', '1-324', '3-257', '1-396', '6-230', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228', '2-139', '3-211', '1-262', '6-196', '6-198', '0-36', '4-221', '1-291', '2-162', '3-233', '3-239', '3-241', '5-181', '6-141', '1-193', '5-123', '2-115', '5-131', '5-132', '5-138', '5-141', '0-30', '1-247', '2-131', '1-236', '2-136', '6-94', '5-79', '1-131', '5-81', '4-111', '2-80', '1-165', '5-97', '3-127', '0-21', '5-100', '6-133', '2-35', '4-57', '6-52', '4-62', '4-73', '5-53', '1-96', '6-71', '1-105', '0-14', '1-100', '1-113'], ['4-5', '4-10', '5-9', '5-12', '6-22', '5-19', '2-14', '6-30', '5-25', '1-38', '6-35', '2-28', '5-33', '1-60', '6-235', '1-399', '2-192', '6-229', '6-227', '5-221', '5-204', '5-210', '5-215', '6-231', '5-198', '6-233', '4-256', '1-336', '5-217', '4-277', '4-278', '4-263', '5-218', '6-236', '3-212', '4-204', '5-161', '6-202', '1-280', '1-272', '2-160', '5-175', '1-294', '5-178', '4-237', '6-220', '3-242', '5-185', '3-155', '3-158', '2-109', '1-202', '2-114', '4-173', '3-184', '2-126', '1-232', '4-183', '3-191', '1-241', '1-243', '1-242', '5-76', '4-106', '5-85', '6-98', '1-155', '5-90', '1-149', '5-95', '3-126', '4-127', '1-168', '5-98', '1-175', '3-140', '4-56', '3-60', '4-60', '6-54', '1-78', '4-69', '1-94', '6-64', '5-55', '4-76', '2-59', '1-480', '6-85', '1-118'], [], [], []],[['5-75', '3-202', '5-251', '6-2', '1-392', '2-138', '6-93', '3-3', '4-53', '5-115', '6-184', '6-5', '5-78', '1-69', '6-50', '1-408', '3-157', '4-103', '6-188', '1-68', '1-407', '1-85', '5-252', '6-148', '6-7', '2-217', '6-56', '2-108', '4-18', '6-150', '4-12', '4-63', '4-206', '4-64', '5-46', '0-18', '1-330', '1-194', '3-106', '4-113', '1-203', '4-213', '6-155', '6-197', '5-15', '2-175', '4-22', '1-354', '6-114', '1-369', '4-27', '6-31', '6-210', '6-122', '4-135', '6-213', '6-216', '3-195', '6-87', '2-198', '6-136', '5-236', '5-226', '5-241', '5-231', '5-246'], ['1-406', '4-272', '2-35', '5-77', '3-152', '6-94', '1-193', '4-57', '4-198', '6-52', '6-190', '6-147', '6-191', '3-211', '4-107', '6-63', '4-62', '5-192', '4-254', '4-65', '1-25', '6-15', '6-238', '4-111', '6-194', '6-17', '6-27', '1-79', '6-196', '6-21', '6-198', '6-199', '5-239', '5-228', '5-244', '5-233', '5-249', '4-19', '5-216', '1-216', '4-73', '6-108', '6-201', '6-160', '4-241', '1-165', '6-65', '1-32', '1-27', '3-22', '5-222', '3-276', '6-76', '1-143', '1-283', '3-127', '4-32', '5-132', '0-21', '5-188', '4-130', '6-80', '1-222', '2-211', '6-34', '5-141', '3-257', '3-188', '1-247', '1-113', '6-83', '2-131', '1-58', '3-239', '5-181', '1-236', '1-396', '6-132', '6-133', '6-230', '3-279', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228'], ['5-76', '5-40', '4-50', '5-117', '3-158', '4-60', '4-106', '3-212', '4-17', '4-203', '4-204', '6-98', '5-161', '6-193', '4-69', '6-235', '1-399', '2-192', '6-229', '1-94', '2-114', '6-227', '5-221', '5-12', '6-22', '5-204', '5-210', '1-155', '5-215', '6-64', '5-90', '6-202', '6-231', '5-198', '4-25', '6-233', '4-123', '2-49', '4-173', '4-256', '5-55', '1-336', '4-262', '5-95', '2-59', '3-126', '5-217', '4-127', '3-227', '5-223', '5-98', '6-30', '4-277', '6-120', '4-278', '3-184', '2-160', '5-25', '2-126', '1-480', '5-29', '2-225', '1-232', '6-35', '4-183', '1-293', '2-28', '1-112', '3-191', '6-38', '5-180', '5-105', '6-220', '6-85', '3-242', '5-32', '1-488', '5-145', '5-33', '5-71', '1-243', '1-242', '1-60', '6-135', '5-185'], [], [], []]],'format_boost_amount':[0,0,0,0,0,0,0,0,0,3,5]}

    with open('data.json', 'w') as outfile:
        json.dump(data_dict, outfile)
        
    root.update()


# In[8]:


def save_settings():
    
    settings_dict.update(format_used=format_box.current())
    settings_dict.update(ranking_used=ranking_file.get())
    settings_dict.update(update_ranking_check=update_var.get())
    settings_dict.update(pass_style=pass_style_var.get())
    settings_dict.update(cubify=cube_var.get())
    settings_dict.update(use_promos=promo_var.get())
    settings_dict.update(use_unnumbered=unnumbered_var.get())
    
    with open('settings.json', 'w') as outfile:
        json.dump(settings_dict, outfile)
    
    read_settings()
    deck_buttons.destroy()
    decks_program()
    
    saved_lbl = Label(settings_tab, text='Settings saved!!!')
    saved_lbl.grid(row=7, column=0, sticky=S+W)
    
    root.update()
    root.after(2000,saved_lbl.destroy())


# In[61]:


def update_bot_ratings():
    card_data = []

    format_num = settings_dict.get('format_used')
    format_array = data_dict.get('format_code')[format_num]
    format_names = data_dict.get('format_name')[format_num]
    format_sets = data_dict.get('format_sets')[format_num]
    format_cards = []
    
    for omega in format_sets:
        omega_index = data_dict.get('set_code').index(omega)
        format_cards.append(data_dict.get('set_cards')[omega_index])
        
    format_cards = set(flatten(format_cards))

    for psi in format_cards:
        card_data.append([psi,card_dict.get(psi).get('ranking'),card_dict.get(psi).get('name')])

    with open('userratings_' + str(format_array) + '.csv', 'w', newline='') as csvFile:
        writer = csv.writer(csvFile, dialect='myDialect')
        writer.writerows(card_data)
    csvFile.close()


# In[62]:


def reset_dbl_check():
    
    format_num = settings_dict.get('format_used')
    format_array = data_dict.get('format_code')[format_num]
    
    if messagebox.askokcancel('Warning!',"Are you sure that you want to reset 'userratings_" + str(format_array) + ".csv'? \nThis cannot be undone."):
        reset_bot_ratings()


# In[64]:


def reset_bot_ratings():
    card_data = []

    format_num = settings_dict.get('format_used')
    format_array = data_dict.get('format_code')[format_num]
    format_names = data_dict.get('format_name')[format_num]
    format_sets = data_dict.get('format_sets')[format_num]
    format_cards = []
    
    for omega in format_sets:
        omega_index = data_dict.get('set_code').index(omega)
        format_cards.append(data_dict.get('set_cards')[omega_index])
        
    format_cards = set(flatten(format_cards))

    for psi in format_cards:
        card_data.append([psi,1.0,card_dict.get(psi).get('name')])

    with open('userratings_' + str(format_array) + '.csv', 'w', newline='') as csvFile:
        writer = csv.writer(csvFile, dialect='myDialect')
        writer.writerows(card_data)
    csvFile.close()


# In[12]:


def flatten(l):
    for el in l:
        if isinstance(el, collections.Iterable) and not isinstance(el, (str, bytes)):
            yield from flatten(el)
        else:
            yield el


# ###Used to make bots.###
# 
# color_number_preferenc_arrays = [[1.0,0.3,0.3,0.1,0.1],[1.0,1.0,0.3,0.1,0.1],[1.0,1.0,1.0,0.2,0.1],[1.0,1.0,1.0,1.0,0.1],[1.0,1.0,1.0,1.0,1.0]]
# 
# bot_dict = {'Xi':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Xi',[0.0,0.0,0.0,0.0,0.0],2,[0,0],[0,0]]],
#            'Fire':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Fire',[0.1,0.0,0.0,0.0,0.0],2,[0,0],[0,0]]],
#            'Time':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Time',[0.0,0.1,0.0,0.0,0.0],2,[0,0],[0,0]]],
#            'Justice':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Justice',[0.0,0.0,0.1,0.0,0.0],2,[0,0],[0,0]]],
#            'Primal':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Primal',[0.0,0.0,0.0,0.1,0.0],2,[0,0],[0,0]]],
#            'Shadow':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Shadow',[0.0,0.0,0.0,0.0,0.1],2,[0,0],[0,0]]],
#            'Anti-Fire':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Anti-Fire',[-0.1,0.0,0.0,0.0,0.0],2,[0,0],[0,0]]],
#            'Anti-Time':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Anti-Time',[0.0,-0.1,0.0,0.0,0.0],2,[0,0],[0,0]]],
#            'Anti-Justice':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Anti-Justice',[0.0,0.0,-0.1,0.0,0.0],2,[0,0],[0,0]]],
#            'Anti-Primal':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Anti-Primal',[0.0,0.0,0.0,-0.1,0.0],2,[0,0],[0,0]]],
#            'Anti-Shadow':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Anti-Shadow',[0.0,0.0,0.0,0.0,-0.1],2,[0,0],[0,0]]],
#            '1Faction':[[0.0,0.0,0.0,0.0,0.0],color_number_preferenc_arrays[0],[],['1Faction',[0.0,0.0,0.0,0.0,0.0],1,[0,0],[0,0]]],
#            '3Faction':[[0.0,0.0,0.0,0.0,0.0],color_number_preferenc_arrays[2],[],['3Faction',[0.0,0.0,0.0,0.0,0.0],3,[0,0],[0,0]]],
#            '4Faction':[[0.0,0.0,0.0,0.0,0.0],color_number_preferenc_arrays[3],[],['4Faction',[0.0,0.0,0.0,0.0,0.0],4,[0,0],[0,0]]],
#            '5Faction':[[0.0,0.0,0.0,0.0,0.0],color_number_preferenc_arrays[4],[],['5Faction',[0.0,0.0,0.0,0.0,0.0],5,[0,0],[0,0]]],
#            'Aggro':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Aggro',[0.0,0.0,0.0,0.0,0.0],2,[1,0],[0,0]]],
#            'Control':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Control',[0.0,0.0,0.0,0.0,0.0],2,[0,1],[0,0]]],
#            'Pauper':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Pauper',[0.0,0.0,0.0,0.0,0.0],2,[0,0],[1,0]]],
#            'Prince':[[0.0,0.0,0.0,0.0,0.0],[1.0,1.0,0.3,0.1,0.1],[],['Prince',[0.0,0.0,0.0,0.0,0.0],2,[0,0],[0,1]]]}
# 
# with open('bot.json', 'w') as outfile:
#     json.dump(bot_dict, outfile)

# In[13]:


def bot_window():
    
    global bots_window
    bots_window = Toplevel(root)
    bots_window.title('Bots')
    
    global bot_values
    bot_values = list(bot_dict.keys())
    
    bots_window_lbl = Label(bots_window, text='Define the bots to use in draft', font='Helvetica 18 bold')
    bots_window_lbl.grid(row=0, column=0, sticky=W)
    
    same_bot_frame = Frame(bots_window, bd=0, highlightbackground="black", highlightcolor="black", highlightthickness=1, pady=5)
    same_bot_frame.grid(row=1, column=0, sticky=N+W)
    
    same_bot_lbl = Label(same_bot_frame, text='Use this bot as default:')
    same_bot_lbl.grid(row=0, column=0, sticky=N+W)

    global same_bot_box
    same_bot_box = ttk.Combobox(same_bot_frame, values=bot_values)
    same_bot_box.grid(row=1, column=0)
    same_bot_box.current(0)
    
    apply_bot_btn = Button(same_bot_frame, text='Apply to all bots', command=apply_same_bot)
    apply_bot_btn.grid(row=1, column=1, padx=5)
    
    build_indv_bot_frame()
    
    bots_button_frame = Frame(bots_window)
    bots_button_frame.grid(rows=3, column=0)
    
    cancel_bot_btn = Button(bots_button_frame, text='Close', command=bots_window.destroy)
    cancel_bot_btn.pack(side=RIGHT, padx=5, pady=8)
    
    save_bot_btn = Button(bots_button_frame, text='Save bots', command=save_bots)
    save_bot_btn.pack(side=RIGHT)
    
    random_btn = Button(bots_button_frame, text='Randomize bots', command=randomize_bots)
    random_btn.pack(side=RIGHT, padx=30)


# In[14]:


def build_indv_bot_frame():
    
    global indv_bot_frame
    global indv_bot1_box
    global indv_bot2_box
    global indv_bot3_box
    global indv_bot4_box
    global indv_bot5_box
    global indv_bot6_box
    global indv_bot7_box
    global indv_bot8_box
    global indv_bot9_box
    global indv_bot10_box
    global indv_bot11_box
    
    indv_bot_frame = Frame(bots_window, pady=16)
    indv_bot_frame.grid(row=2, column=0, sticky=N+W)
    
    indv_bot1_lbl = Label(indv_bot_frame, text='Bot 1:')
    indv_bot1_lbl.grid(row=1, column=0, sticky=W)
    indv_bot1_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot1_box.grid(row=1, column=1)
    indv_bot1_box.current(bot_values.index(settings_dict.get('bots_used').get('bot1')))
    
    indv_bot2_lbl = Label(indv_bot_frame, text='Bot 2:')
    indv_bot2_lbl.grid(row=2, column=0, sticky=W)
    indv_bot2_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot2_box.grid(row=2, column=1)
    indv_bot2_box.current(bot_values.index(settings_dict.get('bots_used').get('bot2')))
    
    indv_bot3_lbl = Label(indv_bot_frame, text='Bot 3:')
    indv_bot3_lbl.grid(row=3, column=0, sticky=W)
    indv_bot3_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot3_box.grid(row=3, column=1)
    indv_bot3_box.current(bot_values.index(settings_dict.get('bots_used').get('bot3')))
    
    indv_bot4_lbl = Label(indv_bot_frame, text='Bot 4:')
    indv_bot4_lbl.grid(row=4, column=0, sticky=W)
    indv_bot4_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot4_box.grid(row=4, column=1)
    indv_bot4_box.current(bot_values.index(settings_dict.get('bots_used').get('bot4')))
    
    indv_bot5_lbl = Label(indv_bot_frame, text='Bot 5:')
    indv_bot5_lbl.grid(row=5, column=0, sticky=W)
    indv_bot5_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot5_box.grid(row=5, column=1)
    indv_bot5_box.current(bot_values.index(settings_dict.get('bots_used').get('bot5')))
    
    indv_bot6_lbl = Label(indv_bot_frame, text='Bot 6:')
    indv_bot6_lbl.grid(row=6, column=0, sticky=W)
    indv_bot6_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot6_box.grid(row=6, column=1)
    indv_bot6_box.current(bot_values.index(settings_dict.get('bots_used').get('bot6')))
    
    indv_bot7_lbl = Label(indv_bot_frame, text='Bot 7:')
    indv_bot7_lbl.grid(row=7, column=0, sticky=W)
    indv_bot7_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot7_box.grid(row=7, column=1)
    indv_bot7_box.current(bot_values.index(settings_dict.get('bots_used').get('bot7')))
    
    indv_bot8_lbl = Label(indv_bot_frame, text='Bot 8:')
    indv_bot8_lbl.grid(row=8, column=0, sticky=W)
    indv_bot8_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot8_box.grid(row=8, column=1)
    indv_bot8_box.current(bot_values.index(settings_dict.get('bots_used').get('bot8')))
    
    indv_bot9_lbl = Label(indv_bot_frame, text='Bot 9:')
    indv_bot9_lbl.grid(row=9, column=0, sticky=W)
    indv_bot9_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot9_box.grid(row=9, column=1)
    indv_bot9_box.current(bot_values.index(settings_dict.get('bots_used').get('bot9')))
    
    indv_bot10_lbl = Label(indv_bot_frame, text='Bot 10:')
    indv_bot10_lbl.grid(row=10, column=0, sticky=W)
    indv_bot10_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot10_box.grid(row=10, column=1)
    indv_bot10_box.current(bot_values.index(settings_dict.get('bots_used').get('bot10')))
    
    indv_bot11_lbl = Label(indv_bot_frame, text='Bot 11:')
    indv_bot11_lbl.grid(row=11, column=0, sticky=W)
    indv_bot11_box = ttk.Combobox(indv_bot_frame, values=bot_values)
    indv_bot11_box.grid(row=11, column=1)
    indv_bot11_box.current(bot_values.index(settings_dict.get('bots_used').get('bot11')))


# In[15]:


def apply_same_bot():
    
    indv_bot_frame.destroy()
    
    settings_dict.get('bots_used').update(bot1 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot2 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot3 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot4 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot5 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot6 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot7 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot8 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot9 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot10 = same_bot_box.get())
    settings_dict.get('bots_used').update(bot11 = same_bot_box.get())
    
    build_indv_bot_frame()


# In[16]:


def randomize_bots():
    
    indv_bot_frame.destroy()
    
    settings_dict.get('bots_used').update(bot1 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot2 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot3 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot4 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot5 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot6 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot7 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot8 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot9 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot10 = random.choice(list(bot_dict.keys())))
    settings_dict.get('bots_used').update(bot11 = random.choice(list(bot_dict.keys())))
    
    build_indv_bot_frame()


# In[17]:


def save_bots():
    
    settings_dict.get('bots_used').update(bot1 = indv_bot1_box.get())
    settings_dict.get('bots_used').update(bot2 = indv_bot2_box.get())
    settings_dict.get('bots_used').update(bot3 = indv_bot3_box.get())
    settings_dict.get('bots_used').update(bot4 = indv_bot4_box.get())
    settings_dict.get('bots_used').update(bot5 = indv_bot5_box.get())
    settings_dict.get('bots_used').update(bot6 = indv_bot6_box.get())
    settings_dict.get('bots_used').update(bot7 = indv_bot7_box.get())
    settings_dict.get('bots_used').update(bot8 = indv_bot8_box.get())
    settings_dict.get('bots_used').update(bot9 = indv_bot9_box.get())
    settings_dict.get('bots_used').update(bot10 = indv_bot10_box.get())
    settings_dict.get('bots_used').update(bot11 = indv_bot11_box.get())
    
    with open('settings.json', 'w') as outfile:
        json.dump(settings_dict, outfile)
    
    read_settings()
    deck_buttons.destroy()
    decks_program()
    
    saved_lbl = Label(bots_window, text='Settings saved!!!')
    saved_lbl.grid(row=4, column=0, sticky=S+W)
    
    root.update()
    root.after(2000,saved_lbl.destroy())


# ###Originally used to sort the sets (just copy and pasted from the card_dict.keys() function).###
# 
# set0 = {'0-3', '0-4', '0-6', '0-9', '0-11', '0-14', '0-15', '0-18', '0-21', '0-24', '0-27', '0-30', '0-33', '0-35', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63'}
# set1 = {'1-Firebomb', '1-Grenadin', '1-Iron Sword', '1-Magmahound', '1-Wisp', '1-Rhinarc', '1-Sentinel', '1-Owl', '1-Gemblade', '1-Frog', '1-Snowball', '1-Pig', '1-Serpent Hatchling', '1-Sky Serpent', '1-Carnosaur', '1-Stormdancer', '1-Illusionary Dragon', '1-Spiteling', '1-Vengeful Gargoyle', '1-Muertis, Pale Rider', '1-Occi, Pale Rider', '1-Sangu, Pale Rider', '1-Volan, Pale Rider', '1-Direwood Beast', '1-Puma', '1-The Tormentor', '1-Mithril Armor', '1-Obsidian Armor', "1-Dragon's Eye", '1-Titan', '1-Golem', '1-Stone Cudgel', '1-1', '1-2', '1-3', '1-4', '1-5', '1-6', '1-8', '1-9', '1-10', '1-11', '1-12', '1-13', '1-14', '1-15', '1-16', '1-17', '1-18', '1-19', '1-20', '1-21', '1-22', '1-23', '1-25', '1-26', '1-27', '1-28', '1-29', '1-30', '1-31', '1-32', '1-33', '1-34', '1-35', '1-36', '1-37', '1-38', '1-39', '1-40', '1-41', '1-42', '1-43', '1-44', '1-45', '1-46', '1-47', '1-48', '1-49', '1-50', '1-51', '1-52', '1-53', '1-54', '1-55', '1-56', '1-58', '1-59', '1-60', '1-61', '1-62', '1-63', '1-64', '1-66', '1-67', '1-68', '1-69', '1-70', '1-71', '1-72', '1-73', '1-74', '1-75', '1-76', '1-77', '1-78', '1-79', '1-80', '1-81', '1-82', '1-83', '1-84', '1-85', '1-86', '1-88', '1-89', '1-90', '1-91', '1-92', '1-93', '1-94', '1-95', '1-96', '1-97', '1-98', '1-99', '1-100', '1-101', '1-102', '1-103', '1-104', '1-105', '1-107', '1-108', '1-109', '1-110', '1-111', '1-112', '1-113', '1-114', '1-115', '1-116', '1-117', '1-118', '1-119', '1-120', '1-121', '1-122', '1-123', '1-124', '1-125', '1-126', '1-127', '1-128', '1-129', '1-130', '1-131', '1-132', '1-133', '1-134', '1-135', '1-136', '1-137', '1-138', '1-139', '1-140', '1-141', '1-142', '1-143', '1-144', '1-145', '1-146', '1-147', '1-148', '1-149', '1-150', '1-151', '1-152', '1-153', '1-154', '1-155', '1-156', '1-157', '1-158', '1-159', '1-160', '1-162', '1-163', '1-164', '1-165', '1-166', '1-167', '1-168', '1-169', '1-170', '1-171', '1-172', '1-174', '1-175', '1-176', '1-177', '1-178', '1-180', '1-181', '1-182', '1-183', '1-184', '1-185', '1-186', '1-187', '1-188', '1-189', '1-190', '1-191', '1-192', '1-193', '1-194', '1-195', '1-196', '1-197', '1-199', '1-200', '1-201', '1-202', '1-203', '1-204', '1-205', '1-206', '1-207', '1-208', '1-209', '1-210', '1-211', '1-212', '1-213', '1-214', '1-215', '1-216', '1-217', '1-218', '1-219', '1-220', '1-221', '1-222', '1-223', '1-224', '1-225', '1-226', '1-227', '1-228', '1-229', '1-230', '1-231', '1-232', '1-233', '1-234', '1-235', '1-236', '1-237', '1-238', '1-239', '1-240', '1-241', '1-242', '1-243', '1-244', '1-245', '1-246', '1-247', '1-248', '1-249', '1-250', '1-251', '1-252', '1-253', '1-254', '1-255', '1-256', '1-257', '1-258', '1-259', '1-260', '1-261', '1-262', '1-263', '1-264', '1-265', '1-266', '1-267', '1-268', '1-269', '1-270', '1-271', '1-272', '1-273', '1-274', '1-275', '1-276', '1-277', '1-278', '1-279', '1-280', '1-281', '1-282', '1-283', '1-284', '1-285', '1-286', '1-287', '1-288', '1-289', '1-290', '1-291', '1-292', '1-293', '1-294', '1-295', '1-297', '1-299', '1-300', '1-301', '1-302', '1-303', '1-304', '1-305', '1-306', '1-307', '1-308', '1-309', '1-310', '1-311', '1-312', '1-314', '1-315', '1-316', '1-317', '1-318', '1-319', '1-320', '1-321', '1-322', '1-323', '1-324', '1-326', '1-327', '1-328', '1-329', '1-330', '1-331', '1-332', '1-333', '1-334', '1-335', '1-336', '1-337', '1-338', '1-339', '1-340', '1-341', '1-343', '1-345', '1-346', '1-347', '1-348', '1-350', '1-351', '1-353', '1-354', '1-355', '1-356', '1-357', '1-358', '1-359', '1-360', '1-361', '1-362', '1-363', '1-364', '1-365', '1-366', '1-367', '1-368', '1-369', '1-371', '1-372', '1-373', '1-374', '1-375', '1-377', '1-378', '1-379', '1-380', '1-381', '1-382', '1-383', '1-384', '1-385', '1-386', '1-387', '1-388', '1-389', '1-390', '1-391', '1-392', '1-394', '1-395', '1-396', '1-397', '1-398', '1-399', '1-400', '1-402', '1-403', '1-404', '1-406', '1-407', '1-408', '1-409', '1-410', '1-411', '1-412', '1-413', '1-414', '1-415', '1-416', '1-417', '1-418', '1-419', '1-420', '1-421', '1-422', '1-423', '1-424', '1-425', '1-426', '1-427', '1-480', '1-488', '1-501', '1-502', '1-503', '1-504', '1-505', '1-506', '1-510', '1-511', '1-512', '1-513', '1-514', '1-516', '1-517', '1-518', '1-519', '1-520', '1-521', '1-522'}
# set2 = {'2-Hellhound', '2-Minotaur', '2-Urska, the Bear', '2-Restless Radiant', '2-Animated Sentinel', '2-Explorer', '2-Dragon', '2-1', '2-2', '2-3', '2-4', '2-5', '2-6', '2-7', '2-8', '2-9', '2-10', '2-11', '2-12', '2-13', '2-14', '2-15', '2-16', '2-17', '2-18', '2-19', '2-20', '2-21', '2-22', '2-23', '2-24', '2-25', '2-26', '2-27', '2-28', '2-29', '2-30', '2-31', '2-32', '2-33', '2-34', '2-35', '2-36', '2-37', '2-38', '2-39', '2-40', '2-41', '2-42', '2-43', '2-44', '2-45', '2-46', '2-47', '2-48', '2-49', '2-50', '2-51', '2-52', '2-53', '2-54', '2-55', '2-56', '2-57', '2-58', '2-59', '2-60', '2-61', '2-62', '2-63', '2-64', '2-65', '2-66', '2-67', '2-68', '2-69', '2-70', '2-71', '2-72', '2-73', '2-74', '2-75', '2-76', '2-77', '2-78', '2-79', '2-80', '2-81', '2-82', '2-83', '2-84', '2-85', '2-86', '2-87', '2-88', '2-89', '2-90', '2-91', '2-92', '2-93', '2-94', '2-95', '2-96', '2-97', '2-98', '2-99', '2-100', '2-101', '2-102', '2-103', '2-104', '2-105', '2-106', '2-107', '2-108', '2-109', '2-110', '2-111', '2-112', '2-113', '2-114', '2-115', '2-116', '2-117', '2-118', '2-119', '2-120', '2-121', '2-122', '2-123', '2-124', '2-125', '2-126', '2-127', '2-128', '2-129', '2-130', '2-131', '2-132', '2-133', '2-134', '2-135', '2-136', '2-137', '2-138', '2-139', '2-140', '2-141', '2-142', '2-143', '2-144', '2-145', '2-146', '2-147', '2-148', '2-149', '2-150', '2-151', '2-152', '2-153', '2-154', '2-155', '2-156', '2-157', '2-158', '2-159', '2-160', '2-161', '2-162', '2-163', '2-164', '2-165', '2-166', '2-167', '2-168', '2-169', '2-170', '2-171', '2-172', '2-173', '2-174', '2-175', '2-176', '2-177', '2-178', '2-179', '2-180', '2-181', '2-182', '2-183', '2-184', '2-185', '2-186', '2-187', '2-188', '2-189', '2-190', '2-191', '2-192', '2-193', '2-194', '2-195', '2-196', '2-197', '2-198', '2-199', '2-200', '2-201', '2-202', '2-203', '2-204', '2-205', '2-206', '2-207', '2-208', '2-209', '2-210', '2-211', '2-212', '2-213', '2-214', '2-215', '2-216', '2-217', '2-218', '2-219', '2-220', '2-221', '2-222', '2-223', '2-224', '2-225', '2-226', '2-227', '2-228', '2-229', '2-230', '2-231', '2-232', '2-233', '2-234', '2-235', '2-236', '2-237', '2-238', '2-239', '2-240', '2-241', '2-242', '2-243', '2-244', '2-245', '2-246', '2-247', '2-248', '2-249', '2-250', '2-251', '2-252', '2-253', '2-254', '2-255', '2-256'}
# set3 = {'3-Hound', '3-Shattered Sentinel', '3-Sandbind', '3-Valkyrie', '3-Soldier', '3-Gilded Hammer', '3-Snowman', '3-Flying Squirrel', '3-Dinosaur', '3-Twilight Prowler', '3-Jotun', '3-Cabal Extortion Scheme', '3-Nyctophobia', '3-Sidearm', '3-Fixit', '3-1', '3-2', '3-3', '3-4', '3-5', '3-6', '3-7', '3-8', '3-9', '3-10', '3-11', '3-12', '3-13', '3-14', '3-15', '3-16', '3-17', '3-18', '3-19', '3-20', '3-21', '3-22', '3-23', '3-24', '3-25', '3-26', '3-27', '3-28', '3-29', '3-30', '3-31', '3-32', '3-33', '3-34', '3-35', '3-36', '3-37', '3-38', '3-39', '3-40', '3-41', '3-42', '3-43', '3-44', '3-45', '3-46', '3-47', '3-48', '3-49', '3-50', '3-51', '3-52', '3-53', '3-54', '3-55', '3-56', '3-57', '3-58', '3-59', '3-60', '3-61', '3-62', '3-63', '3-64', '3-65', '3-66', '3-67', '3-68', '3-69', '3-70', '3-71', '3-72', '3-73', '3-74', '3-75', '3-76', '3-77', '3-78', '3-79', '3-80', '3-81', '3-82', '3-83', '3-84', '3-85', '3-86', '3-87', '3-88', '3-89', '3-90', '3-91', '3-92', '3-93', '3-94', '3-95', '3-96', '3-97', '3-98', '3-99', '3-100', '3-101', '3-102', '3-103', '3-104', '3-105', '3-106', '3-107', '3-108', '3-109', '3-110', '3-111', '3-112', '3-113', '3-114', '3-115', '3-116', '3-117', '3-118', '3-119', '3-120', '3-121', '3-122', '3-123', '3-124', '3-125', '3-126', '3-127', '3-128', '3-129', '3-130', '3-131', '3-132', '3-133', '3-134', '3-135', '3-136', '3-137', '3-138', '3-139', '3-140', '3-141', '3-142', '3-143', '3-144', '3-145', '3-146', '3-147', '3-148', '3-149', '3-150', '3-151', '3-152', '3-153', '3-154', '3-155', '3-156', '3-157', '3-158', '3-159', '3-160', '3-161', '3-162', '3-163', '3-164', '3-165', '3-166', '3-167', '3-168', '3-169', '3-170', '3-171', '3-172', '3-173', '3-174', '3-175', '3-176', '3-177', '3-178', '3-179', '3-180', '3-181', '3-182', '3-183', '3-184', '3-185', '3-186', '3-187', '3-188', '3-189', '3-190', '3-191', '3-192', '3-193', '3-194', '3-195', '3-196', '3-197', '3-198', '3-199', '3-200', '3-201', '3-202', '3-203', '3-204', '3-205', '3-206', '3-207', '3-208', '3-209', '3-210', '3-211', '3-212', '3-213', '3-214', '3-215', '3-216', '3-217', '3-218', '3-219', '3-220', '3-221', '3-222', '3-223', '3-224', '3-225', '3-226', '3-227', '3-228', '3-229', '3-230', '3-231', '3-232', '3-233', '3-234', '3-235', '3-236', '3-237', '3-238', '3-239', '3-240', '3-241', '3-242', '3-243', '3-244', '3-245', '3-246', '3-247', '3-248', '3-249', '3-250', '3-251', '3-252', '3-253', '3-254', '3-255', '3-256', '3-257', '3-258', '3-259', '3-260', '3-261', '3-262', '3-263', '3-264', '3-265', '3-266', '3-267', '3-268', '3-269', '3-270', '3-271', '3-272', '3-273', '3-274', '3-275', '3-276', '3-277', '3-278', '3-279', '3-280', '3-301', '3-302', '3-303', '3-304', '3-305'}
# set4 = {'4-Flamefang', '4-Shugo Tactic', '4-Brand, Without Fear', '4-Scorpion Trap', '4-Disciplinary Weights', '4-Monk', '4-Temple Tactic', '4-Sand Wurm', '4-Crownwatch Tactic', '4-Sheep', '4-Inferiority Complex', '4-Little Brother', '4-Clan Tactic', "4-Fear's Sum", '4-Cabal Tactic', '4-Marionette', '4-Guard Tower', '4-1', '4-2', '4-3', '4-4', '4-5', '4-6', '4-7', '4-8', '4-9', '4-10', '4-11', '4-12', '4-13', '4-14', '4-15', '4-16', '4-17', '4-18', '4-19', '4-20', '4-21', '4-22', '4-23', '4-24', '4-25', '4-26', '4-27', '4-28', '4-29', '4-30', '4-31', '4-32', '4-33', '4-34', '4-35', '4-36', '4-37', '4-38', '4-39', '4-40', '4-41', '4-42', '4-43', '4-44', '4-45', '4-46', '4-47', '4-48', '4-49', '4-50', '4-51', '4-52', '4-53', '4-54', '4-55', '4-56', '4-57', '4-58', '4-59', '4-60', '4-61', '4-62', '4-63', '4-64', '4-65', '4-66', '4-67', '4-68', '4-69', '4-70', '4-71', '4-72', '4-73', '4-74', '4-75', '4-76', '4-77', '4-78', '4-79', '4-80', '4-81', '4-82', '4-83', '4-84', '4-85', '4-86', '4-87', '4-88', '4-89', '4-90', '4-91', '4-92', '4-93', '4-94', '4-95', '4-96', '4-97', '4-98', '4-99', '4-100', '4-101', '4-102', '4-103', '4-104', '4-105', '4-106', '4-107', '4-108', '4-109', '4-110', '4-111', '4-112', '4-113', '4-114', '4-115', '4-116', '4-117', '4-118', '4-119', '4-120', '4-121', '4-122', '4-123', '4-124', '4-125', '4-126', '4-127', '4-128', '4-129', '4-130', '4-131', '4-132', '4-133', '4-134', '4-135', '4-136', '4-137', '4-138', '4-139', '4-140', '4-141', '4-142', '4-143', '4-144', '4-145', '4-146', '4-147', '4-148', '4-149', '4-150', '4-151', '4-152', '4-153', '4-154', '4-155', '4-156', '4-157', '4-158', '4-159', '4-160', '4-161', '4-162', '4-163', '4-164', '4-165', '4-166', '4-167', '4-168', '4-169', '4-170', '4-171', '4-172', '4-173', '4-174', '4-175', '4-176', '4-177', '4-178', '4-179', '4-180', '4-181', '4-182', '4-183', '4-184', '4-185', '4-186', '4-187', '4-188', '4-189', '4-190', '4-191', '4-192', '4-193', '4-194', '4-195', '4-196', '4-197', '4-198', '4-199', '4-200', '4-201', '4-202', '4-203', '4-204', '4-205', '4-206', '4-207', '4-208', '4-209', '4-210', '4-211', '4-212', '4-213', '4-214', '4-215', '4-216', '4-217', '4-218', '4-219', '4-220', '4-221', '4-222', '4-223', '4-224', '4-225', '4-226', '4-227', '4-228', '4-229', '4-230', '4-231', '4-232', '4-233', '4-234', '4-235', '4-236', '4-237', '4-238', '4-239', '4-240', '4-241', '4-242', '4-243', '4-244', '4-245', '4-246', '4-247', '4-248', '4-249', '4-250', '4-251', '4-252', '4-253', '4-254', '4-255', '4-256', '4-257', '4-258', '4-259', '4-260', '4-261', '4-262', '4-263', '4-264', '4-265', '4-266', '4-267', '4-268', '4-269', '4-270', '4-271', '4-272', '4-273', '4-274', '4-275', '4-276', '4-277', '4-278', '4-279', '4-306', '4-307', '4-308', '4-309', '4-310'}
# set5 = {'5-Fire Animated Sentinel', '5-Wildcat', '5-Molten Phoenix', "5-Poacher's Rifle", '5-Time Animated Sentinel', '5-Viper Fang', "5-Sanity's Anathema", '5-Watchman', '5-Steel Golem', '5-Bladebreaker', '5-Glacial Monstrosity', '5-Skycrag Goad', '5-Dark Elf', '5-Rust Fiend', '5-Jennev Contraband', '5-Ruin Stalker', '5-Ixtun Contraband', '5-Winchest Contraband', "5-Brel's Mallet", '5-Kerendon Contraband', '5-Auralian Contraband', '5-Treasure Trove', '5-Whirly-Twirly', '5-1', '5-2', '5-3', '5-4', '5-5', '5-6', '5-7', '5-8', '5-9', '5-10', '5-11', '5-12', '5-13', '5-14', '5-15', '5-16', '5-17', '5-18', '5-19', '5-20', '5-21', '5-22', '5-23', '5-24', '5-25', '5-26', '5-27', '5-28', '5-29', '5-30', '5-31', '5-32', '5-33', '5-34', '5-35', '5-36', '5-37', '5-38', '5-39', '5-40', '5-41', '5-42', '5-43', '5-44', '5-45', '5-46', '5-47', '5-48', '5-49', '5-50', '5-51', '5-52', '5-53', '5-54', '5-55', '5-56', '5-57', '5-58', '5-59', '5-60', '5-61', '5-62', '5-63', '5-64', '5-65', '5-66', '5-67', '5-68', '5-69', '5-70', '5-71', '5-72', '5-73', '5-74', '5-75', '5-76', '5-77', '5-78', '5-79', '5-80', '5-81', '5-82', '5-83', '5-84', '5-85', '5-86', '5-87', '5-88', '5-89', '5-90', '5-91', '5-92', '5-93', '5-94', '5-95', '5-96', '5-97', '5-98', '5-99', '5-100', '5-101', '5-102', '5-103', '5-104', '5-105', '5-106', '5-107', '5-108', '5-109', '5-110', '5-111', '5-112', '5-113', '5-114', '5-115', '5-116', '5-117', '5-118', '5-119', '5-120', '5-121', '5-122', '5-123', '5-124', '5-125', '5-126', '5-127', '5-128', '5-129', '5-130', '5-131', '5-132', '5-133', '5-134', '5-135', '5-136', '5-137', '5-138', '5-139', '5-140', '5-141', '5-142', '5-143', '5-144', '5-145', '5-146', '5-147', '5-148', '5-149', '5-150', '5-151', '5-152', '5-153', '5-154', '5-155', '5-156', '5-157', '5-158', '5-159', '5-160', '5-161', '5-162', '5-163', '5-164', '5-165', '5-166', '5-167', '5-168', '5-169', '5-170', '5-171', '5-172', '5-173', '5-174', '5-175', '5-176', '5-177', '5-178', '5-179', '5-180', '5-181', '5-182', '5-183', '5-184', '5-185', '5-186', '5-187', '5-188', '5-189', '5-190', '5-191', '5-192', '5-193', '5-194', '5-195', '5-196', '5-197', '5-198', '5-199', '5-200', '5-201', '5-202', '5-203', '5-204', '5-205', '5-206', '5-207', '5-208', '5-209', '5-210', '5-211', '5-212', '5-213', '5-214', '5-215', '5-216', '5-217', '5-218', '5-219', '5-220', '5-221', '5-222', '5-223', '5-224', '5-225', '5-226', '5-227', '5-228', '5-229', '5-230', '5-231', '5-232', '5-233', '5-234', '5-235', '5-236', '5-237', '5-238', '5-239', '5-240', '5-241', '5-242', '5-243', '5-244', '5-245', '5-246', '5-247', '5-248', '5-249', '5-250', '5-251', '5-252', '5-253', '5-254', '5-255', '5-256', '5-311', '5-312', '5-313', '5-314', '5-315'}
# set6 = {'6-Shingane Mark', '6-Shardling', '6-Clan Warrior', '6-Headshot', '6-Pulsing Blob', '6-Ravenous Wurm', '6-Alarming Findings', '6-Timidity', '6-Emerald Incarnation', '6-Curse of Provocation', '6-Kesava, Trueheart', '6-Premonition Bolt', '6-Arc Dragon', '6-Disfigure', '6-Sewer Kraken', '6-1', '6-2', '6-3', '6-4', '6-5', '6-6', '6-7', '6-8', '6-9', '6-10', '6-11', '6-12', '6-13', '6-14', '6-15', '6-16', '6-17', '6-18', '6-19', '6-20', '6-21', '6-22', '6-23', '6-24', '6-25', '6-26', '6-27', '6-28', '6-29', '6-30', '6-31', '6-32', '6-33', '6-34', '6-35', '6-36', '6-37', '6-38', '6-39', '6-40', '6-41', '6-42', '6-43', '6-44', '6-45', '6-46', '6-47', '6-48', '6-49', '6-50', '6-51', '6-52', '6-53', '6-54', '6-55', '6-56', '6-57', '6-58', '6-59', '6-60', '6-61', '6-62', '6-63', '6-64', '6-65', '6-66', '6-67', '6-68', '6-69', '6-70', '6-71', '6-72', '6-73', '6-74', '6-75', '6-76', '6-77', '6-78', '6-79', '6-80', '6-81', '6-82', '6-83', '6-84', '6-85', '6-86', '6-87', '6-88', '6-89', '6-90', '6-91', '6-92', '6-93', '6-94', '6-95', '6-96', '6-97', '6-98', '6-99', '6-100', '6-101', '6-102', '6-103', '6-104', '6-105', '6-106', '6-107', '6-108', '6-109', '6-110', '6-111', '6-112', '6-113', '6-114', '6-115', '6-116', '6-117', '6-118', '6-119', '6-120', '6-121', '6-122', '6-123', '6-124', '6-125', '6-126', '6-127', '6-128', '6-129', '6-130', '6-131', '6-132', '6-133', '6-134', '6-135', '6-136', '6-137', '6-138', '6-139', '6-140', '6-141', '6-142', '6-143', '6-144', '6-145', '6-146', '6-147', '6-148', '6-149', '6-150', '6-151', '6-152', '6-153', '6-154', '6-155', '6-156', '6-157', '6-158', '6-159', '6-160', '6-161', '6-162', '6-163', '6-164', '6-165', '6-166', '6-167', '6-168', '6-169', '6-170', '6-171', '6-172', '6-173', '6-174', '6-175', '6-176', '6-177', '6-178', '6-179', '6-180', '6-181', '6-182', '6-183', '6-184', '6-185', '6-186', '6-187', '6-188', '6-189', '6-190', '6-191', '6-192', '6-193', '6-194', '6-195', '6-196', '6-197', '6-198', '6-199', '6-200', '6-201', '6-202', '6-203', '6-204', '6-205', '6-206', '6-207', '6-208', '6-209', '6-210', '6-211', '6-212', '6-213', '6-214', '6-215', '6-216', '6-217', '6-218', '6-219', '6-220', '6-221', '6-222', '6-223', '6-224', '6-225', '6-226', '6-227', '6-228', '6-229', '6-230', '6-231', '6-232', '6-233', '6-234', '6-235', '6-236', '6-237', '6-238', '6-316', '6-317', '6-318', '6-319'}
# set7 = {'7-Ash Elemental', '7-Oni Grunt', '7-Earth Elemental', '7-Pacify', '7-Wind Elemental', '7-Luckbreaker Gryffyn', '7-Ice Elemental', '7-Living Wave', '7-Death Elemental', '7-Nihil Draconus', '7-Totemite Pup', '7-Mark of the Forge', '7-Xultan Cultist', '7-Curse of Loneliness', '7-Raven', '7-Nakova & Molot', '7-Varret the Mighty', '7-Varret the Stealthy', '7-Varret the Wise', '7-1', '7-2', '7-3', '7-4', '7-5', '7-6', '7-7', '7-8', '7-9', '7-10', '7-11', '7-12', '7-13', '7-14', '7-15', '7-16', '7-17', '7-18', '7-19', '7-20', '7-21', '7-22', '7-23', '7-24', '7-25', '7-26', '7-27', '7-28', '7-29', '7-30', '7-31', '7-32', '7-33', '7-34', '7-35', '7-36', '7-37', '7-38', '7-39', '7-40', '7-41', '7-42', '7-43', '7-44', '7-45', '7-46', '7-47', '7-48', '7-49', '7-50', '7-51', '7-52', '7-53', '7-54', '7-55', '7-56', '7-57', '7-58', '7-59', '7-60', '7-61', '7-62', '7-63', '7-64', '7-65', '7-66', '7-67', '7-68', '7-69', '7-70', '7-71', '7-72', '7-73', '7-74', '7-75', '7-76', '7-77', '7-78', '7-79', '7-80', '7-81', '7-82', '7-83', '7-84', '7-85', '7-86', '7-87', '7-88', '7-89', '7-90', '7-91', '7-92', '7-93', '7-94', '7-95', '7-96', '7-97', '7-98', '7-99', '7-100', '7-101', '7-102', '7-103', '7-104', '7-105', '7-106', '7-107', '7-108', '7-109', '7-110', '7-111', '7-112', '7-113', '7-114', '7-115', '7-116', '7-117', '7-118', '7-119', '7-120', '7-121', '7-122', '7-123', '7-124', '7-125', '7-126', '7-127', '7-128', '7-129', '7-130', '7-131', '7-132', '7-133', '7-134', '7-135', '7-136', '7-137', '7-138', '7-139', '7-140', '7-141', '7-142', '7-143', '7-144', '7-145', '7-146', '7-147', '7-148', '7-149', '7-150', '7-151', '7-152', '7-153', '7-154', '7-155', '7-156', '7-157', '7-158', '7-159', '7-160', '7-161', '7-162', '7-163', '7-164', '7-165', '7-166', '7-167', '7-168', '7-169', '7-170', '7-171', '7-172', '7-173', '7-174', '7-175', '7-176', '7-177', '7-178', '7-179', '7-180', '7-181', '7-182', '7-183', '7-184', '7-185', '7-186', '7-187', '7-188', '7-189', '7-190', '7-191', '7-192', '7-193', '7-194', '7-195', '7-196', '7-197', '7-198', '7-199', '7-200', '7-201', '7-202', '7-203', '7-204', '7-205', '7-206', '7-207', '7-208', '7-209', '7-210', '7-211', '7-212', '7-213', '7-214', '7-320', '7-321', '7-322'}
# set1001 = {'1001-Honed Blade', '1001-1', '1001-2', '1001-3', '1001-4', '1001-5', '1001-6', '1001-7', '1001-8', '1001-9', '1001-10', '1001-11', '1001-12', '1001-13', '1001-14', '1001-15', '1001-16'}
# set1002 = {'1002-Unseen Disciple', '1002-Avatar of Winds', '1002-Omen of Austerity', '1002-1', '1002-2', '1002-3', '1002-4', '1002-5', '1002-6', '1002-7', '1002-8', '1002-9', '1002-10', '1002-11', '1002-12', '1002-13', '1002-14', '1002-15', '1002-16', '1002-17', '1002-18', '1002-19', '1002-20', '1002-21', '1002-22', '1002-23'}
# set1003 = {'1003-Bridled Sandstrider', '1003-Dirty Rat', '1003-1', '1003-2', '1003-3', '1003-4', '1003-5', '1003-6', '1003-7', '1003-8', '1003-9', '1003-10', '1003-11', '1003-12', '1003-13', '1003-14', '1003-15', '1003-16', '1003-17', '1003-18', '1003-19', '1003-20', '1003-21', '1003-22', '1003-23', '1003-24', '1003-25'}
# set1004 = {'1004-Razortooth Aranha', '1004-Xulta Exile', '1004-Goat', '1004-Helici', '1004-Word of Sol', '1004-1', '1004-2', '1004-3', '1004-4', '1004-5', '1004-6', '1004-7', '1004-8', '1004-9', '1004-10', '1004-11', '1004-12', '1004-13', '1004-14', '1004-15', '1004-16', '1004-17', '1004-18', '1004-19', '1004-20', '1004-21', '1004-22', '1004-23'}
# set1005 = {'1005-Clandestine Shotgun', '1005-1', '1005-2', '1005-3', '1005-4', '1005-5', '1005-6', '1005-7', '1005-8', '1005-9', '1005-10', '1005-11', '1005-12', '1005-13', '1005-14', '1005-15', '1005-16', '1005-17', '1005-18', '1005-19', '1005-20', '1005-21', '1005-22', '1005-23', '1005-24', '1005-25', '1005-26'}
# set1006 = {'1006-1', '1006-2', '1006-3', '1006-4', '1006-5', '1006-6', '1006-7', '1006-8', '1006-9', '1006-10', '1006-11', '1006-12', '1006-13', '1006-14', '1006-15', '1006-16', '1006-17', '1006-18', '1006-19', '1006-20'}

# In[18]:


def rarity_determiner(set_to_sort):
    list_common = []
    list_uncommon = []
    list_rare = []
    list_legendary = []
    list_promo = []
    list_no_rarity = []
    
    for alpha in set_to_sort:
        if card_dict.get(alpha).get('rarity') == 'Common':
            list_common.append(alpha)
        elif card_dict.get(alpha).get('rarity') == 'Uncommon':
            list_uncommon.append(alpha)
        elif card_dict.get(alpha).get('rarity') == 'Rare':
            list_rare.append(alpha)
        elif card_dict.get(alpha).get('rarity') == 'Legendary':
            list_legendary.append(alpha)
        elif card_dict.get(alpha).get('rarity') == 'Promo':
            list_promo.append(alpha)
        elif card_dict.get(alpha).get('rarity') == 'None':
            list_no_rarity.append(alpha)
            
    return list_common,list_uncommon,list_rare,list_legendary,list_promo,list_no_rarity


# In[19]:


def curated_pack_keys(input_json_file):
    with open(input_json_file) as json_file:
        data = json.load(json_file)
    
    keys = []
    
    for x in range(len(data)):
        if 'EternalID' in data[x]:
            keys.append(str(data[x].get('SetNumber'))+'-'+str(data[x].get('EternalID')))
        else:
            keys.append(str(data[x].get('SetNumber'))+'-'+str(data[x].get('Name')))
            
    return keys


# ###Used to split the sets by their rarity.###
# 
# common_0,uncommon_0,rare_0,legendary_0,promo_0,none_0 = rarity_determiner(set0)
# common_1,uncommon_1,rare_1,legendary_1,promo_1,none_1 = rarity_determiner(set1)
# common_2,uncommon_2,rare_2,legendary_2,promo_2,none_2 = rarity_determiner(set2)
# common_3,uncommon_3,rare_3,legendary_3,promo_3,none_3 = rarity_determiner(set3)
# common_4,uncommon_4,rare_4,legendary_4,promo_4,none_4 = rarity_determiner(set4)
# common_5,uncommon_5,rare_5,legendary_5,promo_5,none_5 = rarity_determiner(set5)
# common_6,uncommon_6,rare_6,legendary_6,promo_6,none_6 = rarity_determiner(set6)
# common_7,uncommon_7,rare_7,legendary_7,promo_7,none_7 = rarity_determiner(set7)
# common_1001,uncommon_1001,rare_1001,legendary_1001,promo_1001,none_1001 = rarity_determiner(set1001)
# common_1002,uncommon_1002,rare_1002,legendary_1002,promo_1002,none_1002 = rarity_determiner(set1002)
# common_1003,uncommon_1003,rare_1003,legendary_1003,promo_1003,none_1003 = rarity_determiner(set1003)
# common_1004,uncommon_1004,rare_1004,legendary_1004,promo_1004,none_1004 = rarity_determiner(set1004)
# common_1005,uncommon_1005,rare_1005,legendary_1005,promo_1005,none_1005 = rarity_determiner(set1005)
# common_1006,uncommon_1006,rare_1006,legendary_1006,promo_1006,none_1006 = rarity_determiner(set1006)
# curated4_keys = curated_pack_keys('eternal-the-fall-of-argenport-draft-pack.json')
# curated5_keys = curated_pack_keys('eternal-defiance-draft-pack.json')
# curated5b_keys = curated_pack_keys('eternal-homecoming-draft-pack.json')
# curated6_keys = curated_pack_keys('eternal-dark-frontier-draft-pack.json')
# curated6b_keys = curated_pack_keys('eternal-trials-of-grodov-draft-pack.json')
# curated6c_keys = curated_pack_keys('eternal-set6c-draft-pack.json')
# curated7_keys = curated_pack_keys('eternal-the-flame-of-xulta-draft-pack.json')
# curated7_boosted_keys = ['4-3','4-5','6-5','1-15','5-5','5-6','5-7','4-10','4-12','0-3','5-9','5-10','1-25','6-19','5-12','4-19','6-22','1-31','2-10','4-22','1-32','5-19','2-14','4-27','1-39','4-39','3-30','6-30','5-25','1-38','1-46','6-35','0-6','5-30','2-28','1-55','5-33','1-60','1-406','1-392','1-408','1-407','2-217','4-254','1-330','6-238','1-79','6-235','1-399','2-192','6-229','6-227','5-221','5-204','5-210','5-215','2-175','4-241','6-231','5-198','6-233','3-274','5-222','3-276','1-369','4-256','1-336','5-217','4-277','4-278','4-263','5-218','1-324','3-257','1-396','6-230','6-234','6-232','6-226','6-236','0-60','0-62','0-53','0-56','0-54','0-61','0-51','0-58','0-55','0-63','6-228','5-236','5-226','5-241','5-231','5-246','3-202','2-138','2-139','1-252','4-197','6-188','6-189','3-211','1-261','3-212','4-204','5-161','1-262','6-196','4-213','6-198','0-36','6-202','1-278','1-213','1-280','1-272','4-221','2-160','1-291','2-162','5-175','6-213','3-233','1-294','5-178','4-237','3-239','3-241','6-220','3-242','5-181','5-185','6-181','5-113','6-141','3-154','5-115','1-193','3-155','3-157','3-158','6-150','1-196','1-197','2-109','5-120','5-123','1-202','1-203','2-114','2-115','3-171','2-118','5-131','4-173','5-132','5-138','3-184','2-126','1-232','5-141','4-183','0-30','1-247','3-191','2-131','1-241','1-236','1-243','2-136','1-242','6-136','5-76','1-133','6-94','2-70','5-78','1-504','5-79','1-131','5-81','4-106','1-142','5-85','6-98','1-141','4-111','6-104','3-106','2-80','1-155','5-90','1-165','1-149','5-97','5-95','3-126','4-127','1-168','3-127','6-118','5-98','0-21','5-100','4-133','4-135','1-175','3-140','6-133','6-91','2-35','1-72','4-53','1-69','1-75','4-56','4-57','1-68','1-85','3-60','6-52','4-60','6-54','3-63','4-62','4-64','1-80','1-78','4-69','1-94','4-73','6-64','5-53','1-96','6-71','5-55','4-76','1-105','2-59','1-503','0-14','1-480','2-55','1-100','1-113','6-85','1-118','6-46']
# curated7b_keys = curated_pack_keys('eternal-the-flame-of-xulta-draft-pack-v2.json')
# curated7b_boosted_keys = ['5-75','3-202','5-251','6-2','1-392','2-138','6-93','3-3','4-53','5-115','6-184','6-5','5-78','1-69','6-50','1-408','3-157','4-103','6-188','1-68','1-407','1-85','5-252','6-148','6-7','2-217','6-56','2-108','4-18','6-150','4-12','4-63','4-206','4-64','5-46','0-18','1-330','1-194','3-106','4-113','1-203','4-213','6-155','6-197','5-15','2-175','4-22','1-354','6-114','1-369','4-27','6-31','6-210','6-122','4-135','6-213','6-216','3-195','6-87','2-198','6-136','5-236','5-226','5-241','5-231','5-246','1-406','4-272','2-35','5-77','3-152','6-94','1-193','4-57','4-198','6-52','6-190','6-147','6-191','3-211','4-107','6-63','4-62','5-192','4-254','4-65','1-25','6-15','6-238','4-111','6-194','6-17','6-27','1-79','6-196','6-21','6-198','6-199','5-239','5-228','5-244','5-233','5-249','4-19','5-216','1-216','4-73','6-108','6-201','6-160','4-241','1-165','6-65','1-32','1-27','3-22','5-222','3-276','6-76','1-143','1-283','3-127','4-32','5-132','0-21','5-188','4-130','6-80','1-222','2-211','6-34','5-141','3-257','3-188','1-247','1-113','6-83','2-131','1-58','3-239','5-181','1-236','1-396','6-132','6-133','6-230','3-279','6-234','6-232','6-226','0-60','0-62','0-53','0-56','0-54','0-61','0-51','0-58','0-55','0-63','6-228','5-76','5-40','4-50','5-117','3-158','4-60','4-106','3-212','4-17','4-203','4-204','6-98','5-161','6-193','4-69','6-235','1-399','2-192','6-229','1-94','2-114','6-227','5-221','5-12','6-22','5-204','5-210','1-155','5-215','6-64','5-90','6-202','6-231','5-198','4-25','6-233','4-123','2-49','4-173','4-256','5-55','1-336','4-262','5-95','2-59','3-126','5-217','4-127','3-227','5-223','5-98','6-30','4-277','6-120','4-278','3-184','2-160','5-25','2-126','1-480','5-29','2-225','1-232','6-35','4-183','1-293','2-28','1-112','3-191','6-38','5-180','5-105','6-220','6-85','3-242','5-32','1-488','5-145','5-33','5-71','1-243','1-242','1-60','6-135','5-185']
# common_cur4,uncommon_cur4,rare_cur4,legendary_cur4,promo_cur4,none_cur4 = rarity_determiner(curated4_keys)
# common_cur5,uncommon_cur5,rare_cur5,legendary_cur5,promo_cur5,none_cur5 = rarity_determiner(curated5_keys)
# common_cur5b,uncommon_cur5b,rare_cur5b,legendary_cur5b,promo_cur5b,none_cur5b = rarity_determiner(curated5b_keys)
# common_cur6,uncommon_cur6,rare_cur6,legendary_cur6,promo_cur6,none_cur6 = rarity_determiner(curated6_keys)
# common_cur6b,uncommon_cur6b,rare_cur6b,legendary_cur6b,promo_cur6b,none_cur6b = rarity_determiner(curated6b_keys)
# common_cur6c,uncommon_cur6c,rare_cur6c,legendary_cur6c,promo_cur6c,none_cur6c = rarity_determiner(curated6c_keys)
# common_cur7,uncommon_cur7,rare_cur7,legendary_cur7,promo_cur7,none_cur7 = rarity_determiner(curated7_keys)
# common_cur7_boosted,uncommon_cur7_boosted,rare_cur7_boosted,legendary_cur7_boosted,promo_cur7_boosted,none_cur7_boosted = rarity_determiner(curated7_boosted_keys)
# common_cur7b,uncommon_cur7b,rare_cur7b,legendary_cur7b,promo_cur7b,none_cur7b = rarity_determiner(curated7b_keys)
# common_cur7b_boosted,uncommon_cur7b_boosted,rare_cur7b_boosted,legendary_cur7b_boosted,promo_cur7b_boosted,none_cur7b_boosted = rarity_determiner(curated7b_boosted_keys)

# ###Divided the sets by rarity, which are saved in the next cell.###
# 
# set0 = [common_0,uncommon_0,rare_0,legendary_0,promo_0,none_0]
# set1 = [common_1,uncommon_1,rare_1,legendary_1,promo_1,none_1]
# set2 = [common_2,uncommon_2,rare_2,legendary_2,promo_2,none_2]
# set3 = [common_3,uncommon_3,rare_3,legendary_3,promo_3,none_3]
# set4 = [common_4,uncommon_4,rare_4,legendary_4,promo_4,none_4]
# set5 = [common_5,uncommon_5,rare_5,legendary_5,promo_5,none_5]
# set6 = [common_6,uncommon_6,rare_6,legendary_6,promo_6,none_6]
# set7 = [common_7,uncommon_7,rare_7,legendary_7,promo_7,none_7]
# set1001 = [common_1001,uncommon_1001,rare_1001,legendary_1001,promo_1001,none_1001]
# set1002 = [common_1002,uncommon_1002,rare_1002,legendary_1002,promo_1002,none_1002]
# set1003 = [common_1003,uncommon_1003,rare_1003,legendary_1003,promo_1003,none_1003]
# set1004 = [common_1004,uncommon_1004,rare_1004,legendary_1004,promo_1004,none_1004]
# set1005 = [common_1005,uncommon_1005,rare_1005,legendary_1005,promo_1005,none_1005]
# set1006 = [common_1006,uncommon_1006,rare_1006,legendary_1006,promo_1006,none_1006]
# cur4 = [common_cur4,uncommon_cur4,rare_cur4,legendary_cur4,promo_cur4,none_cur4]
# cur5 = [common_cur5,uncommon_cur5,rare_cur5,legendary_cur5,promo_cur5,none_cur5]
# cur5b = [common_cur5b,uncommon_cur5b,rare_cur5b,legendary_cur5b,promo_cur5b,none_cur5b]
# cur6 = [common_cur6,uncommon_cur6,rare_cur6,legendary_cur6,promo_cur6,none_cur6]
# cur6b = [common_cur6b,uncommon_cur6b,rare_cur6b,legendary_cur6b,promo_cur6b,none_cur6b]
# cur6c = [common_cur6c,uncommon_cur6c,rare_cur6c,legendary_cur6c,promo_cur6c,none_cur6c]
# cur7 = [common_cur7,uncommon_cur7,rare_cur7,legendary_cur7,promo_cur7,none_cur7]
# cur7_boosted = [common_cur7_boosted,uncommon_cur7_boosted,rare_cur7_boosted,legendary_cur7_boosted,promo_cur7_boosted,none_cur7_boosted]
# cur7b = [common_cur7b,uncommon_cur7b,rare_cur7b,legendary_cur7b,promo_cur7b,none_cur7b]
# cur7b_boosted = [common_cur7b_boosted,uncommon_cur7b_boosted,rare_cur7b_boosted,legendary_cur7b_boosted,promo_cur7b_boosted,none_cur7b_boosted]

# In[20]:


set0 = [['0-18', '0-4', '0-35', '0-15', '0-33', '0-24', '0-3', '0-11'], ['0-27', '0-62', '0-53', '0-54', '0-60', '0-58', '0-9', '0-55', '0-30', '0-51', '0-36', '0-14', '0-61', '0-56', '0-6', '0-63', '0-21'], [], [], [], []]
set1 = [['1-278', '1-55', '1-501', '1-301', '1-407', '1-354', '1-190', '1-266', '1-74', '1-263', '1-197', '1-120', '1-419', '1-8', '1-41', '1-220', '1-95', '1-505', '1-75', '1-377', '1-414', '1-261', '1-194', '1-413', '1-200', '1-93', '1-331', '1-10', '1-392', '1-238', '1-421', '1-281', '1-410', '1-256', '1-33', '1-276', '1-158', '1-88', '1-4', '1-68', '1-504', '1-203', '1-226', '1-417', '1-424', '1-136', '1-134', '1-180', '1-357', '1-412', '1-218', '1-219', '1-129', '1-259', '1-102', '1-127', '1-270', '1-35', '1-77', '1-12', '1-30', '1-23', '1-427', '1-13', '1-159', '1-398', '1-91', '1-137', '1-409', '1-250', '1-260', '1-196', '1-17', '1-215', '1-150', '1-415', '1-321', '1-213', '1-101', '1-141', '1-191', '1-85', '1-201', '1-207', '1-288', '1-72', '1-411', '1-208', '1-80', '1-15', '1-69', '1-83', '1-330', '1-205', '1-265', '1-142', '1-264', '1-503', '1-130', '1-36', '1-302', '1-31', '1-212', '1-147', '1-254', '1-252', '1-73', '1-49', '1-209', '1-21', '1-37', '1-235', '1-162', '1-277', '1-135', '1-369', '1-408', '1-171', '1-114', '1-133', '1-153', '1-316', '1-284', '1-5', '1-44'], ['1-125', '1-319', '1-96', '1-291', '1-204', '1-356', '1-255', '1-43', '1-406', '1-156', '1-76', '1-360', '1-510', '1-71', '1-375', '1-132', '1-189', '1-46', '1-115', '1-426', '1-341', '1-290', '1-297', '1-379', '1-324', '1-257', '1-304', '1-396', '1-353', '1-283', '1-422', '1-98', '1-513', '1-217', '1-193', '1-206', '1-178', '1-108', '1-279', '1-517', '1-20', '1-214', '1-228', '1-167', '1-52', '1-160', '1-332', '1-395', '1-128', '1-404', '1-58', '1-230', '1-267', '1-282', '1-224', '1-315', '1-512', '1-374', '1-227', '1-42', '1-111', '1-274', '1-169', '1-89', '1-92', '1-416', '1-229', '1-27', '1-420', '1-146', '1-2', '1-289', '1-346', '1-82', '1-64', '1-275', '1-100', '1-195', '1-425', '1-211', '1-216', '1-192', '1-90', '1-269', '1-258', '1-40', '1-418', '1-29', '1-79', '1-273', '1-139', '1-25', '1-117', '1-502', '1-22', '1-113', '1-514', '1-240', '1-152', '1-318', '1-105', '1-131', '1-81', '1-381', '1-394', '1-28', '1-14', '1-148', '1-50', '1-143', '1-516', '1-176', '1-247', '1-222', '1-122', '1-236', '1-145', '1-184', '1-165', '1-53', '1-11', '1-333', '1-39', '1-423', '1-67', '1-225', '1-163', '1-32', '1-251', '1-70', '1-157', '1-262'], ['1-26', '1-292', '1-242', '1-386', '1-334', '1-78', '1-272', '1-340', '1-295', '1-168', '1-155', '1-287', '1-45', '1-322', '1-299', '1-371', '1-312', '1-286', '1-402', '1-253', '1-84', '1-382', '1-202', '1-16', '1-138', '1-358', '1-399', '1-368', '1-480', '1-241', '1-181', '1-183', '1-118', '1-48', '1-306', '1-188', '1-234', '1-237', '1-280', '1-243', '1-97', '1-19', '1-149', '1-170', '1-60', '1-364', '1-154', '1-223', '1-221', '1-372', '1-103', '1-3', '1-361', '1-294', '1-172', '1-9', '1-140', '1-337', '1-109', '1-339', '1-244', '1-18', '1-311', '1-320', '1-166', '1-86', '1-94', '1-66', '1-232', '1-327', '1-388', '1-175', '1-373', '1-359', '1-271', '1-336', '1-231', '1-151', '1-34', '1-144', '1-293', '1-506', '1-390', '1-121', '1-110', '1-210', '1-199', '1-268', '1-314', '1-38', '1-345', '1-112', '1-54', '1-488', '1-351', '1-300', '1-285', '1-104', '1-56', '1-363', '1-397'], ['1-107', '1-335', '1-248', '1-367', '1-51', '1-182', '1-347', '1-366', '1-338', '1-186', '1-62', '1-362', '1-99', '1-303', '1-317', '1-400', '1-174', '1-389', '1-326', '1-61', '1-177', '1-246', '1-383', '1-6', '1-355', '1-164', '1-365', '1-47', '1-380', '1-343', '1-403', '1-59', '1-329', '1-378', '1-348', '1-124', '1-350', '1-245', '1-309', '1-328', '1-384', '1-123', '1-323', '1-310', '1-307', '1-185', '1-385', '1-116', '1-239', '1-305', '1-391', '1-233', '1-387', '1-308', '1-119'], ['1-521', '1-511', '1-520', '1-518', '1-522', '1-519'], ['1-Direwood Beast', '1-Pig', '1-Sky Serpent', '1-Mithril Armor', "1-Dragon's Eye", '1-Sangu, Pale Rider', '1-Carnosaur', '1-Frog', '1-Muertis, Pale Rider', '1-Volan, Pale Rider', '1-1', '1-Rhinarc', '1-Gemblade', '1-Firebomb', '1-Puma', '1-Golem', '1-Iron Sword', '1-126', '1-Sentinel', '1-187', '1-Spiteling', '1-Titan', '1-Stormdancer', '1-Illusionary Dragon', '1-63', '1-249', '1-Obsidian Armor', '1-Occi, Pale Rider', '1-Owl', '1-Magmahound', '1-Snowball', '1-Grenadin', '1-Stone Cudgel', '1-Vengeful Gargoyle', '1-Serpent Hatchling', '1-The Tormentor', '1-Wisp']]
set2 = [['2-238', '2-6', '2-3', '2-89', '2-47', '2-128', '2-147', '2-42', '2-151', '2-72', '2-194', '2-203', '2-74', '2-15', '2-232', '2-157', '2-169', '2-201', '2-217', '2-87', '2-117', '2-25', '2-111', '2-8', '2-246', '2-250', '2-61', '2-190', '2-122', '2-138', '2-156', '2-113', '2-121', '2-132', '2-106', '2-140', '2-103', '2-75', '2-77', '2-33', '2-145', '2-108', '2-247', '2-221', '2-251', '2-118', '2-123', '2-210', '2-37', '2-56', '2-171', '2-248', '2-88', '2-149', '2-27', '2-13', '2-150', '2-133', '2-66', '2-36', '2-26', '2-116', '2-31', '2-73', '2-55', '2-7', '2-165', '2-79', '2-141', '2-175', '2-176', '2-71', '2-82', '2-50', '2-198', '2-142', '2-68', '2-95', '2-186', '2-224', '2-155', '2-216', '2-70', '2-209', '2-184', '2-46', '2-99', '2-2', '2-54', '2-17', '2-231', '2-19', '2-57', '2-39', '2-244'], ['2-94', '2-163', '2-144', '2-162', '2-189', '2-131', '2-62', '2-124', '2-64', '2-96', '2-102', '2-137', '2-107', '2-76', '2-134', '2-60', '2-129', '2-104', '2-188', '2-139', '2-120', '2-20', '2-143', '2-236', '2-211', '2-10', '2-81', '2-16', '2-146', '2-69', '2-78', '2-172', '2-11', '2-24', '2-97', '2-52', '2-135', '2-177', '2-240', '2-161', '2-112', '2-43', '2-136', '2-202', '2-206', '2-51', '2-166', '2-205', '2-152', '2-29', '2-105', '2-45', '2-1', '2-18', '2-35', '2-44', '2-9', '2-168', '2-174', '2-219', '2-193', '2-227', '2-80', '2-220', '2-41', '2-153', '2-93', '2-23', '2-91', '2-243', '2-239', '2-4', '2-195', '2-58', '2-226', '2-180', '2-12', '2-115', '2-84', '2-53'], ['2-235', '2-182', '2-90', '2-21', '2-173', '2-237', '2-167', '2-14', '2-192', '2-170', '2-59', '2-85', '2-5', '2-233', '2-148', '2-126', '2-222', '2-114', '2-49', '2-223', '2-110', '2-181', '2-225', '2-200', '2-159', '2-158', '2-207', '2-63', '2-125', '2-109', '2-22', '2-241', '2-92', '2-213', '2-83', '2-228', '2-48', '2-40', '2-208', '2-160', '2-196', '2-28', '2-178', '2-86', '2-187', '2-249', '2-214'], ['2-212', '2-30', '2-164', '2-245', '2-253', '2-229', '2-230', '2-98', '2-197', '2-191', '2-185', '2-32', '2-199', '2-204', '2-67', '2-130', '2-154', '2-234', '2-101', '2-242', '2-218', '2-38', '2-215', '2-183', '2-179', '2-34', '2-127', '2-65', '2-100', '2-119'], ['2-256', '2-252', '2-255', '2-254'], ['2-Explorer', '2-Minotaur', '2-Urska, the Bear', '2-Animated Sentinel', '2-Dragon', '2-Hellhound', '2-Restless Radiant']]
set3 = [['3-121', '3-232', '3-115', '3-153', '3-174', '3-106', '3-238', '3-9', '3-101', '3-169', '3-77', '3-222', '3-12', '3-83', '3-177', '3-201', '3-17', '3-25', '3-167', '3-145', '3-116', '3-195', '3-57', '3-180', '3-64', '3-142', '3-13', '3-6', '3-134', '3-102', '3-190', '3-204', '3-157', '3-223', '3-40', '3-151', '3-105', '3-98', '3-3', '3-168', '3-50', '3-199', '3-154', '3-176', '3-137', '3-54', '3-228', '3-79', '3-206', '3-224', '3-237', '3-213', '3-240', '3-29', '3-132', '3-139', '3-1', '3-202', '3-66', '3-108', '3-73', '3-231', '3-18', '3-219', '3-62', '3-68', '3-51', '3-229', '3-15', '3-171', '3-129', '3-38', '3-65', '3-2', '3-183', '3-63', '3-90', '3-74', '3-33', '3-114'], ['3-99', '3-203', '3-211', '3-111', '3-84', '3-109', '3-103', '3-166', '3-253', '3-185', '3-8', '3-104', '3-207', '3-216', '3-262', '3-22', '3-95', '3-32', '3-4', '3-156', '3-254', '3-128', '3-188', '3-42', '3-82', '3-269', '3-280', '3-274', '3-152', '3-164', '3-71', '3-72', '3-78', '3-165', '3-47', '3-58', '3-159', '3-39', '3-162', '3-214', '3-144', '3-55', '3-161', '3-208', '3-246', '3-234', '3-30', '3-258', '3-276', '3-24', '3-28', '3-241', '3-118', '3-182', '3-123', '3-117', '3-271', '3-70', '3-119', '3-198', '3-257', '3-11', '3-53', '3-233', '3-239', '3-150', '3-135', '3-45', '3-85', '3-218', '3-27', '3-127', '3-89', '3-112', '3-279', '3-260', '3-181', '3-209'], ['3-212', '3-264', '3-268', '3-189', '3-7', '3-230', '3-272', '3-270', '3-215', '3-69', '3-173', '3-26', '3-86', '3-23', '3-131', '3-126', '3-158', '3-81', '3-59', '3-14', '3-179', '3-56', '3-67', '3-35', '3-225', '3-210', '3-197', '3-261', '3-140', '3-107', '3-125', '3-94', '3-141', '3-205', '3-75', '3-110', '3-155', '3-61', '3-37', '3-160', '3-256', '3-10', '3-91', '3-133', '3-220', '3-259', '3-16', '3-163', '3-242', '3-226', '3-124', '3-122', '3-130', '3-193', '3-76', '3-251', '3-252', '3-267', '3-146', '3-217', '3-21', '3-19', '3-44', '3-266', '3-170', '3-191', '3-184', '3-20', '3-92', '3-178', '3-60', '3-34', '3-236', '3-273', '3-245', '3-227'], ['3-148', '3-275', '3-100', '3-249', '3-138', '3-88', '3-187', '3-247', '3-46', '3-277', '3-250', '3-192', '3-87', '3-31', '3-243', '3-80', '3-255', '3-194', '3-172', '3-48', '3-5', '3-96', '3-175', '3-143', '3-49', '3-93', '3-149', '3-221', '3-36', '3-113', '3-248', '3-196', '3-52', '3-278', '3-41', '3-235', '3-43', '3-97', '3-244', '3-136', '3-120', '3-186', '3-200', '3-263', '3-265', '3-147'], ['3-305', '3-302', '3-303', '3-304', '3-301'], ['3-Gilded Hammer', '3-Flying Squirrel', '3-Shattered Sentinel', '3-Cabal Extortion Scheme', '3-Valkyrie', '3-Fixit', '3-Jotun', '3-Sidearm', '3-Nyctophobia', '3-Hound', '3-Snowman', '3-Soldier', '3-Dinosaur', '3-Twilight Prowler', '3-Sandbind']]
set4 = [['4-134', '4-38', '4-159', '4-61', '4-216', '4-16', '4-197', '4-36', '4-52', '4-22', '4-208', '4-95', '4-213', '4-233', '4-72', '4-161', '4-29', '4-214', '4-86', '4-170', '4-103', '4-167', '4-113', '4-146', '4-215', '4-148', '4-84', '4-54', '4-154', '4-12', '4-121', '4-163', '4-152', '4-133', '4-141', '4-66', '4-102', '4-4', '4-206', '4-175', '4-82', '4-149', '4-236', '4-74', '4-226', '4-186', '4-104', '4-109', '4-225', '4-182', '4-7', '4-34', '4-200', '4-207', '4-71', '4-35', '4-117', '4-23', '4-27', '4-46', '4-88', '4-124', '4-2', '4-45', '4-122', '4-212', '4-194', '4-135', '4-63', '4-190', '4-165', '4-189', '4-279', '4-53', '4-129', '4-219', '4-101', '4-64', '4-178', '4-238', '4-75', '4-18', '4-14', '4-116', '4-100', '4-59'], ['4-261', '4-267', '4-188', '4-257', '4-196', '4-78', '4-92', '4-176', '4-28', '4-90', '4-130', '4-151', '4-99', '4-220', '4-41', '4-32', '4-62', '4-259', '4-107', '4-252', '4-205', '4-139', '4-1', '4-51', '4-198', '4-241', '4-97', '4-276', '4-81', '4-160', '4-9', '4-65', '4-274', '4-234', '4-153', '4-132', '4-230', '4-119', '4-136', '4-232', '4-85', '4-254', '4-125', '4-39', '4-273', '4-47', '4-250', '4-11', '4-24', '4-172', '4-185', '4-111', '4-114', '4-157', '4-49', '4-221', '4-98', '4-195', '4-147', '4-272', '4-8', '4-6', '4-19', '4-118', '4-57', '4-40', '4-145', '4-193', '4-150', '4-77', '4-83', '4-209', '4-73', '4-171', '4-202', '4-142', '4-264', '4-26', '4-199', '4-210', '4-235', '4-245', '4-156', '4-177', '4-94', '4-89', '4-3', '4-162', '4-120'], ['4-275', '4-180', '4-106', '4-43', '4-211', '4-68', '4-217', '4-13', '4-70', '4-244', '4-248', '4-268', '4-131', '4-20', '4-56', '4-173', '4-10', '4-204', '4-183', '4-127', '4-60', '4-50', '4-231', '4-105', '4-112', '4-169', '4-80', '4-126', '4-243', '4-179', '4-253', '4-262', '4-224', '4-166', '4-123', '4-110', '4-251', '4-242', '4-278', '4-192', '4-227', '4-277', '4-263', '4-155', '4-255', '4-256', '4-21', '4-203', '4-5', '4-164', '4-76', '4-258', '4-69', '4-266', '4-25', '4-140', '4-247', '4-17', '4-218', '4-237', '4-271', '4-55', '4-30'], ['4-239', '4-128', '4-229', '4-181', '4-144', '4-48', '4-138', '4-158', '4-44', '4-174', '4-187', '4-249', '4-67', '4-115', '4-96', '4-58', '4-87', '4-270', '4-15', '4-42', '4-228', '4-33', '4-137', '4-222', '4-269', '4-93', '4-184', '4-201', '4-191', '4-168', '4-31', '4-91', '4-108', '4-79', '4-143', '4-223', '4-265', '4-240', '4-246', '4-260', '4-37'], ['4-309', '4-307', '4-310', '4-306', '4-308'], ['4-Little Brother', '4-Shugo Tactic', '4-Disciplinary Weights', '4-Scorpion Trap', '4-Guard Tower', '4-Crownwatch Tactic', '4-Temple Tactic', "4-Fear's Sum", '4-Marionette', '4-Inferiority Complex', '4-Sheep', '4-Flamefang', '4-Sand Wurm', '4-Monk', '4-Brand, Without Fear', '4-Cabal Tactic', '4-Clan Tactic']]
set5 = [['5-255', '5-234', '5-27', '5-184', '5-10', '5-174', '5-246', '5-70', '5-150', '5-229', '5-41', '5-73', '5-108', '5-142', '5-42', '5-121', '5-122', '5-14', '5-236', '5-82', '5-177', '5-7', '5-113', '5-84', '5-251', '5-38', '5-253', '5-16', '5-214', '5-91', '5-54', '5-134', '5-172', '5-248', '5-137', '5-252', '5-80', '5-39', '5-238', '5-103', '5-115', '5-166', '5-4', '5-52', '5-163', '5-120', '5-160', '5-159', '5-226', '5-243', '5-119', '5-196', '5-61', '5-37', '5-220', '5-241', '5-202', '5-78', '5-92', '5-157', '5-256', '5-5', '5-15', '5-75', '5-127', '5-231', '5-149', '5-1', '5-87', '5-96', '5-208', '5-67', '5-28', '5-112', '5-46'], ['5-107', '5-62', '5-81', '5-6', '5-116', '5-192', '5-254', '5-99', '5-222', '5-239', '5-126', '5-151', '5-35', '5-165', '5-53', '5-104', '5-132', '5-154', '5-138', '5-64', '5-97', '5-30', '5-83', '5-60', '5-207', '5-162', '5-94', '5-102', '5-31', '5-153', '5-45', '5-66', '5-141', '5-194', '5-201', '5-211', '5-114', '5-47', '5-233', '5-167', '5-158', '5-244', '5-125', '5-152', '5-191', '5-228', '5-22', '5-49', '5-34', '5-147', '5-187', '5-156', '5-131', '5-59', '5-100', '5-13', '5-88', '5-48', '5-8', '5-128', '5-176', '5-173', '5-216', '5-135', '5-44', '5-170', '5-140', '5-2', '5-58', '5-249', '5-23', '5-77', '5-123', '5-181', '5-79', '5-93', '5-3', '5-188', '5-11', '5-65', '5-24'], ['5-98', '5-69', '5-95', '5-232', '5-19', '5-185', '5-225', '5-217', '5-223', '5-175', '5-76', '5-130', '5-218', '5-50', '5-199', '5-139', '5-117', '5-161', '5-221', '5-197', '5-215', '5-168', '5-55', '5-26', '5-206', '5-105', '5-90', '5-209', '5-143', '5-51', '5-12', '5-86', '5-32', '5-9', '5-145', '5-129', '5-43', '5-25', '5-237', '5-68', '5-29', '5-118', '5-212', '5-247', '5-106', '5-85', '5-180', '5-227', '5-136', '5-204', '5-155', '5-205', '5-71', '5-242', '5-178', '5-179', '5-33', '5-40', '5-210', '5-198'], ['5-224', '5-110', '5-36', '5-189', '5-186', '5-230', '5-182', '5-133', '5-250', '5-72', '5-190', '5-63', '5-195', '5-148', '5-144', '5-124', '5-57', '5-89', '5-183', '5-101', '5-17', '5-203', '5-20', '5-18', '5-213', '5-171', '5-56', '5-219', '5-21', '5-200', '5-111', '5-240', '5-164', '5-74', '5-169', '5-109', '5-245', '5-193', '5-146', '5-235'], ['5-314', '5-311', '5-312', '5-313', '5-315'], ['5-Skycrag Goad', '5-Glacial Monstrosity', '5-Dark Elf', '5-Ixtun Contraband', '5-Fire Animated Sentinel', '5-Bladebreaker', "5-Brel's Mallet", '5-Winchest Contraband', "5-Poacher's Rifle", '5-Kerendon Contraband', '5-Viper Fang', '5-Whirly-Twirly', '5-Ruin Stalker', '5-Wildcat', '5-Jennev Contraband', '5-Treasure Trove', '5-Molten Phoenix', '5-Rust Fiend', "5-Sanity's Anathema", '5-Time Animated Sentinel', '5-Auralian Contraband', '5-Steel Golem', '5-Watchman']]
set6 = [['6-95', '6-124', '6-200', '6-136', '6-166', '6-179', '6-150', '6-148', '6-10', '6-87', '6-110', '6-225', '6-195', '6-46', '6-78', '6-146', '6-118', '6-91', '6-55', '6-72', '6-107', '6-66', '6-119', '6-112', '6-188', '6-37', '6-4', '6-81', '6-104', '6-79', '6-47', '6-189', '6-163', '6-31', '6-1', '6-26', '6-122', '6-216', '6-170', '6-60', '6-129', '6-184', '6-210', '6-69', '6-183', '6-56', '6-205', '6-139', '6-182', '6-93', '6-167', '6-12', '6-96', '6-172', '6-105', '6-5', '6-3', '6-138', '6-149', '6-25', '6-82', '6-114', '6-181', '6-7', '6-2', '6-23', '6-155', '6-58', '6-50', '6-197', '6-224', '6-11', '6-213', '6-177', '6-41'], ['6-15', '6-90', '6-212', '6-230', '6-238', '6-143', '6-176', '6-94', '6-133', '6-140', '6-185', '6-8', '6-13', '6-83', '6-86', '6-45', '6-161', '6-232', '6-80', '6-214', '6-160', '6-99', '6-76', '6-108', '6-199', '6-106', '6-228', '6-211', '6-109', '6-194', '6-97', '6-61', '6-186', '6-173', '6-101', '6-201', '6-164', '6-51', '6-147', '6-52', '6-127', '6-63', '6-141', '6-145', '6-226', '6-192', '6-71', '6-234', '6-27', '6-70', '6-198', '6-20', '6-126', '6-153', '6-44', '6-102', '6-196', '6-19', '6-21', '6-17', '6-73', '6-191', '6-171', '6-34', '6-152', '6-40', '6-121', '6-132', '6-32', '6-100', '6-219', '6-190', '6-18', '6-65', '6-158', '6-116', '6-137', '6-221', '6-67', '6-16', '6-53'], ['6-92', '6-165', '6-227', '6-178', '6-22', '6-48', '6-135', '6-130', '6-14', '6-24', '6-180', '6-220', '6-128', '6-54', '6-154', '6-231', '6-156', '6-202', '6-157', '6-6', '6-120', '6-237', '6-77', '6-9', '6-229', '6-142', '6-38', '6-223', '6-187', '6-206', '6-85', '6-30', '6-235', '6-98', '6-88', '6-62', '6-193', '6-208', '6-151', '6-236', '6-115', '6-233', '6-74', '6-64', '6-123', '6-215', '6-35'], ['6-111', '6-117', '6-159', '6-175', '6-43', '6-209', '6-29', '6-222', '6-125', '6-217', '6-39', '6-134', '6-203', '6-204', '6-42', '6-113', '6-144', '6-68', '6-75', '6-49', '6-103', '6-168', '6-33', '6-59', '6-131', '6-174', '6-28', '6-84', '6-89', '6-162', '6-218', '6-207', '6-57', '6-169', '6-36'], ['6-316', '6-317', '6-319', '6-318'], ['6-Arc Dragon', '6-Pulsing Blob', '6-Timidity', '6-Curse of Provocation', '6-Premonition Bolt', '6-Ravenous Wurm', '6-Shingane Mark', '6-Shardling', '6-Alarming Findings', '6-Emerald Incarnation', '6-Headshot', '6-Disfigure', '6-Kesava, Trueheart', '6-Sewer Kraken', '6-Clan Warrior']]
set7 = [['7-49', '7-103', '7-81', '7-37', '7-9', '7-128', '7-104', '7-96', '7-211', '7-43', '7-174', '7-17', '7-137', '7-105', '7-62', '7-100', '7-87', '7-145', '7-136', '7-70', '7-170', '7-192', '7-22', '7-185', '7-124', '7-64', '7-164', '7-126', '7-65', '7-6', '7-56', '7-102', '7-125', '7-127', '7-86', '7-147', '7-51', '7-129', '7-92', '7-14', '7-40', '7-120', '7-55', '7-4', '7-16', '7-181', '7-73', '7-26', '7-72', '7-5', '7-74', '7-48', '7-50', '7-157', '7-134', '7-118', '7-111', '7-154', '7-20', '7-197', '7-39', '7-78', '7-33', '7-113', '7-203', '7-7'], ['7-59', '7-68', '7-27', '7-41', '7-179', '7-12', '7-77', '7-162', '7-45', '7-178', '7-141', '7-143', '7-76', '7-138', '7-36', '7-173', '7-187', '7-75', '7-25', '7-140', '7-123', '7-8', '7-184', '7-156', '7-28', '7-142', '7-82', '7-63', '7-214', '7-212', '7-93', '7-35', '7-97', '7-191', '7-13', '7-44', '7-89', '7-151', '7-57', '7-114', '7-85', '7-168', '7-130', '7-195', '7-158', '7-23', '7-99', '7-132', '7-95', '7-38', '7-101', '7-106', '7-3', '7-46', '7-202', '7-196', '7-98', '7-24', '7-79', '7-109', '7-131', '7-163'], ['7-183', '7-199', '7-188', '7-1', '7-133', '7-108', '7-204', '7-84', '7-15', '7-122', '7-90', '7-171', '7-119', '7-34', '7-166', '7-193', '7-52', '7-152', '7-160', '7-21', '7-180', '7-29', '7-139', '7-66', '7-135', '7-165', '7-175', '7-159', '7-201', '7-198', '7-11', '7-19', '7-42', '7-61', '7-176', '7-153', '7-91', '7-149', '7-32', '7-69', '7-169', '7-80', '7-186', '7-190', '7-31', '7-110', '7-58', '7-115', '7-112', '7-121'], ['7-18', '7-116', '7-155', '7-205', '7-2', '7-182', '7-67', '7-60', '7-88', '7-54', '7-200', '7-209', '7-167', '7-71', '7-107', '7-10', '7-144', '7-146', '7-210', '7-150', '7-53', '7-94', '7-83', '7-194', '7-207', '7-117', '7-47', '7-161', '7-189', '7-208', '7-213', '7-172', '7-206', '7-148', '7-177', '7-30'], ['7-320'], ['7-Oni Grunt', '7-Raven', '7-Wind Elemental', '7-Ash Elemental', '7-Death Elemental', '7-Ice Elemental', '7-Xultan Cultist', '7-Nakova & Molot', '7-Totemite Pup', '7-Earth Elemental', '7-Living Wave', '7-Mark of the Forge', '7-Varret the Wise', '7-Luckbreaker Gryffyn', '7-Varret the Mighty', '7-Curse of Loneliness', '7-Nihil Draconus', '7-Varret the Stealthy']]
set1001 = [[], ['1001-7', '1001-6', '1001-1', '1001-15'], ['1001-12', '1001-2', '1001-14', '1001-5', '1001-3', '1001-8', '1001-9', '1001-13', '1001-4'], ['1001-10', '1001-16', '1001-11'], [], ['1001-Honed Blade']]
set1002 = [[], ['1002-22', '1002-2', '1002-20', '1002-15', '1002-5', '1002-14', '1002-1', '1002-4'], ['1002-7', '1002-6', '1002-8', '1002-12', '1002-16', '1002-9', '1002-13', '1002-23', '1002-11', '1002-19', '1002-17'], ['1002-21', '1002-10', '1002-3', '1002-18'], [], ['1002-Avatar of Winds', '1002-Unseen Disciple', '1002-Omen of Austerity']]
set1003 = [[], ['1003-9', '1003-1', '1003-6', '1003-13', '1003-21', '1003-3', '1003-19', '1003-10'], ['1003-18', '1003-11', '1003-8', '1003-4', '1003-14', '1003-25', '1003-17', '1003-20', '1003-22', '1003-24', '1003-16', '1003-2'], ['1003-15', '1003-7', '1003-5', '1003-12', '1003-23'], [], ['1003-Dirty Rat', '1003-Bridled Sandstrider']]
set1004 = [[], ['1004-1', '1004-13', '1004-10', '1004-16', '1004-9', '1004-5', '1004-11', '1004-17', '1004-18'], ['1004-22', '1004-2', '1004-20', '1004-23', '1004-6', '1004-7', '1004-14', '1004-3', '1004-8', '1004-4'], ['1004-15', '1004-21', '1004-19', '1004-12'], [], ['1004-Xulta Exile', '1004-Helici', '1004-Goat', '1004-Razortooth Aranha', '1004-Word of Sol']]
set1005 = [[], ['1005-2', '1005-19', '1005-13', '1005-6', '1005-5', '1005-14', '1005-1', '1005-15', '1005-17'], ['1005-9', '1005-18', '1005-16', '1005-10', '1005-11', '1005-4', '1005-26', '1005-22', '1005-23', '1005-24', '1005-25', '1005-20'], ['1005-7', '1005-8', '1005-21', '1005-12', '1005-3'], [], ['1005-Clandestine Shotgun']]
set1006 = [['1006-5', '1006-17', '1006-1', '1006-14', '1006-10'], ['1006-7', '1006-19', '1006-13', '1006-9', '1006-4'], ['1006-18', '1006-15', '1006-12', '1006-3', '1006-6'], ['1006-2', '1006-16', '1006-8', '1006-20', '1006-11'], [], []]
cur4 = [['1-5', '1-8', '1-10', '1-13', '1-17', '1-23', '1-31', '1-36', '1-37', '1-68', '1-75', '1-77', '1-80', '1-91', '1-93', '1-102', '1-127', '1-130', '1-133', '1-135', '1-141', '1-147', '1-150', '1-162', '1-191', '1-196', '1-197', '1-200', '1-203', '1-205', '1-207', '1-208', '1-215', '1-218', '1-235', '1-250', '1-252', '1-259', '1-261', '1-264', '1-278', '1-281', '1-321', '1-330', '1-354', '1-377', '1-392', '1-408', '1-414', '1-415', '1-417', '1-419', '1-421', '1-424', '1-427', '2-13', '2-17', '2-26', '2-27', '2-37', '2-47', '2-50', '2-61', '2-66', '2-68', '2-70', '2-73', '2-75', '2-89', '2-95', '2-116', '2-122', '2-133', '2-147', '2-151', '2-156', '2-165', '2-171', '2-184', '2-186', '2-190', '2-201', '2-203', '2-216', '2-217', '2-231', '2-238', '3-1', '3-2', '3-3', '3-6', '3-9', '3-13', '3-38', '3-51', '3-63', '3-64', '3-66', '3-68', '3-77', '3-101', '3-108', '3-115', '3-116', '3-134', '3-137', '3-145', '3-151', '3-154', '3-168', '3-177', '3-183', '3-195', '3-201', '3-204', '3-213', '3-219', '3-222', '3-228', '3-232', '3-237', '3-238'], ['1-20', '1-27', '1-28', '1-32', '1-39', '1-46', '1-67', '1-70', '1-71', '1-79', '1-82', '1-89', '1-96', '1-105', '1-115', '1-117', '1-128', '1-132', '1-139', '1-143', '1-146', '1-152', '1-156', '1-157', '1-167', '1-189', '1-192', '1-204', '1-206', '1-211', '1-217', '1-222', '1-227', '1-240', '1-255', '1-257', '1-262', '1-267', '1-269', '1-273', '1-282', '1-324', '1-332', '1-353', '1-360', '1-374', '1-375', '1-396', '1-512', '1-514', '2-11', '2-23', '2-29', '2-35', '2-41', '2-76', '2-105', '2-129', '2-166', '2-177', '2-180', '2-188', '2-206', '2-220', '2-236', '3-4', '3-8', '3-22', '3-27', '3-39', '3-42', '3-53', '3-55', '3-58', '3-71', '3-85', '3-103', '3-112', '3-117', '3-119', '3-128', '3-152', '3-161', '3-165', '3-166', '3-182', '3-185', '3-188', '3-207', '3-208', '3-209', '3-214', '3-216', '3-218', '3-233', '3-234', '3-254', '3-257', '3-258', '3-262', '3-269', '3-271', '3-274', '3-279'], ['1-16', '1-26', '1-34', '1-48', '1-54', '1-60', '1-78', '1-84', '1-86', '1-94', '1-97', '1-103', '1-109', '1-110', '1-118', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-168', '1-170', '1-172', '1-175', '1-202', '1-221', '1-231', '1-234', '1-241', '1-242', '1-244', '1-272', '1-280', '1-287', '1-292', '1-294', '1-299', '1-306', '1-314', '1-320', '1-322', '1-334', '1-336', '1-345', '1-351', '1-358', '1-371', '1-386', '1-399', '1-402', '1-488', '1-506', '2-5', '2-14', '2-21', '2-22', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-86', '2-90', '2-92', '2-114', '2-126', '2-158', '2-159', '2-167', '2-173', '2-182', '2-187', '2-192', '2-207', '2-208', '2-213', '2-222', '2-223', '2-225', '2-235', '2-237', '3-7', '3-14', '3-16', '3-19', '3-23', '3-26', '3-37', '3-56', '3-60', '3-69', '3-91', '3-122', '3-131', '3-140', '3-155', '3-158', '3-160', '3-163', '3-170', '3-173', '3-178', '3-205', '3-212', '3-215', '3-217', '3-220', '3-226', '3-236', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268'], ['1-6', '1-47', '1-59', '1-99', '1-116', '1-174', '1-177', '1-182', '1-186', '1-233', '1-239', '1-248', '1-303', '1-305', '1-309', '1-310', '1-317', '1-323', '1-326', '1-328', '1-335', '1-338', '1-343', '1-347', '1-350', '1-355', '1-362', '1-365', '1-367', '1-380', '1-383', '1-384', '1-385', '1-389', '1-391', '1-403', '2-30', '2-32', '2-34', '2-38', '2-67', '2-101', '2-119', '2-127', '2-154', '2-164', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-215', '2-218', '2-229', '2-230', '2-234', '2-242', '2-245', '3-5', '3-31', '3-41', '3-43', '3-46', '3-49', '3-52', '3-80', '3-87', '3-88', '3-93', '3-96', '3-97', '3-100', '3-113', '3-120', '3-136', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-243', '3-244', '3-247', '3-248', '3-250', '3-255', '3-263', '3-265', '3-275', '3-277', '3-278'], [], []]
cur5 = [['1-4', '1-5', '1-13', '1-21', '1-30', '1-31', '1-33', '1-37', '1-41', '1-73', '1-75', '1-77', '1-91', '1-101', '1-120', '1-130', '1-134', '1-142', '1-147', '1-150', '1-158', '1-162', '1-171', '1-180', '1-197', '1-200', '1-205', '1-209', '1-215', '1-218', '1-226', '1-235', '1-238', '1-250', '1-252', '1-261', '1-265', '1-276', '1-278', '1-288', '1-301', '1-321', '1-357', '1-407', '1-408', '1-411', '1-412', '1-417', '1-419', '1-421', '1-424', '1-427', '1-504', '2-3', '2-8', '2-15', '2-55', '2-56', '2-68', '2-73', '2-95', '2-103', '2-108', '2-118', '2-138', '2-145', '2-149', '2-150', '2-169', '2-171', '2-186', '2-198', '2-201', '2-209', '2-216', '2-231', '2-238', '2-246', '2-250', '2-251', '3-2', '3-18', '3-29', '3-40', '3-57', '3-62', '3-63', '3-65', '3-74', '3-108', '3-139', '3-154', '3-174', '3-176', '3-204', '3-231', '3-238', '4-14', '4-16', '4-36', '4-54', '4-61', '4-66', '4-74', '4-86', '4-101', '4-104', '4-109', '4-133', '4-146', '4-152', '4-154', '4-175', '4-207', '4-213', '4-216', '4-226'], ['1-2', '1-14', '1-20', '1-29', '1-32', '1-46', '1-52', '1-53', '1-58', '1-67', '1-71', '1-81', '1-89', '1-96', '1-98', '1-105', '1-115', '1-117', '1-122', '1-125', '1-132', '1-139', '1-146', '1-148', '1-156', '1-160', '1-184', '1-193', '1-204', '1-214', '1-216', '1-217', '1-224', '1-227', '1-240', '1-247', '1-251', '1-258', '1-269', '1-275', '1-279', '1-291', '1-324', '1-346', '1-353', '1-379', '1-396', '1-406', '2-9', '2-16', '2-23', '2-29', '2-45', '2-76', '2-78', '2-80', '2-94', '2-105', '2-112', '2-115', '2-131', '2-134', '2-135', '2-136', '2-139', '2-146', '2-166', '2-174', '2-188', '2-195', '2-205', '2-206', '2-220', '2-236', '3-22', '3-24', '3-28', '3-39', '3-47', '3-53', '3-70', '3-72', '3-78', '3-82', '3-85', '3-89', '3-109', '3-112', '3-123', '3-127', '3-135', '3-144', '3-165', '3-211', '3-214', '3-216', '3-233', '3-241', '3-253', '3-274', '3-280', '4-11', '4-24', '4-26', '4-41', '4-47', '4-51', '4-62', '4-65', '4-73', '4-83', '4-111', '4-119', '4-130', '4-132', '4-136', '4-147', '4-151', '4-157', '4-162', '4-171', '4-185', '4-195', '4-196', '4-202', '4-209', '4-210', '4-220', '4-221', '4-232', '4-235', '4-245', '4-250', '4-252', '4-254', '4-261', '4-264', '4-272', '4-276'], ['1-3', '1-18', '1-26', '1-34', '1-38', '1-45', '1-66', '1-84', '1-97', '1-103', '1-104', '1-109', '1-118', '1-121', '1-138', '1-140', '1-149', '1-151', '1-154', '1-155', '1-166', '1-170', '1-175', '1-199', '1-202', '1-210', '1-234', '1-241', '1-242', '1-244', '1-268', '1-272', '1-280', '1-285', '1-286', '1-292', '1-293', '1-294', '1-306', '1-312', '1-322', '1-336', '1-358', '1-359', '1-363', '1-371', '1-373', '1-397', '1-480', '2-5', '2-14', '2-22', '2-40', '2-49', '2-85', '2-86', '2-109', '2-110', '2-114', '2-126', '2-148', '2-159', '2-167', '2-173', '2-187', '2-192', '2-200', '2-207', '2-213', '2-222', '2-223', '2-235', '2-237', '3-7', '3-10', '3-14', '3-21', '3-23', '3-37', '3-44', '3-60', '3-67', '3-76', '3-81', '3-91', '3-107', '3-131', '3-140', '3-155', '3-158', '3-170', '3-205', '3-220', '3-226', '3-236', '3-252', '3-256', '3-259', '4-5', '4-17', '4-20', '4-21', '4-30', '4-43', '4-50', '4-56', '4-60', '4-68', '4-69', '4-70', '4-76', '4-105', '4-106', '4-110', '4-112', '4-123', '4-126', '4-127', '4-140', '4-164', '4-166', '4-169', '4-173', '4-179', '4-180', '4-183', '4-192', '4-203', '4-211', '4-217', '4-218', '4-224', '4-237', '4-256', '4-263', '4-268', '4-275', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-116', '1-119', '1-164', '1-174', '1-177', '1-182', '1-186', '1-233', '1-248', '1-303', '1-305', '1-307', '1-308', '1-309', '1-317', '1-323', '1-328', '1-335', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-383', '1-384', '1-389', '1-391', '2-32', '2-34', '2-100', '2-119', '2-154', '2-179', '2-183', '2-185', '2-197', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-5', '3-31', '3-41', '3-43', '3-48', '3-49', '3-52', '3-80', '3-88', '3-96', '3-97', '3-113', '3-120', '3-138', '3-143', '3-147', '3-148', '3-175', '3-186', '3-192', '3-194', '3-196', '3-243', '3-247', '3-248', '3-249', '3-255', '3-265', '3-278', '4-31', '4-33', '4-37', '4-48', '4-58', '4-67', '4-79', '4-87', '4-93', '4-96', '4-108', '4-115', '4-128', '4-144', '4-158', '4-168', '4-174', '4-181', '4-184', '4-191', '4-201', '4-222', '4-223', '4-229', '4-240', '4-249', '4-260', '4-265', '4-269', '4-270'], [], []]
cur5b = [['1-4', '1-5', '1-31', '1-33', '1-37', '1-75', '1-91', '1-120', '1-130', '1-141', '1-150', '1-162', '1-171', '1-180', '1-190', '1-191', '1-203', '1-215', '1-250', '1-260', '1-261', '1-407', '1-408', '1-417', '1-419', '1-421', '1-424', '1-427', '2-3', '2-73', '2-89', '2-108', '2-118', '2-132', '2-142', '2-149', '2-151', '2-169', '2-171', '2-186', '2-201', '2-216', '2-231', '3-3', '3-13', '3-17', '3-25', '3-29', '3-33', '3-40', '3-50', '3-57', '3-62', '3-64', '3-65', '3-66', '3-68', '3-73', '3-77', '3-83', '3-90', '3-98', '3-105', '3-108', '3-114', '3-116', '3-137', '3-145', '3-169', '3-174', '3-176', '3-177', '3-183', '3-195', '3-199', '3-206', '3-228', '3-229', '3-232', '3-237', '3-240', '4-16', '4-66', '4-109', '4-190', '4-200', '4-206'], ['1-20', '1-28', '1-29', '1-32', '1-39', '1-53', '1-67', '1-81', '1-96', '1-113', '1-122', '1-125', '1-128', '1-143', '1-157', '1-160', '1-184', '1-216', '1-222', '1-225', '1-267', '1-269', '1-273', '1-279', '1-282', '1-283', '1-290', '1-332', '1-346', '1-374', '1-381', '1-396', '1-406', '1-513', '2-9', '2-45', '2-53', '2-80', '2-81', '2-91', '2-93', '2-115', '2-135', '2-143', '2-146', '2-180', '2-193', '2-205', '2-206', '2-220', '2-239', '3-22', '3-24', '3-28', '3-30', '3-42', '3-45', '3-53', '3-55', '3-70', '3-72', '3-78', '3-85', '3-95', '3-99', '3-109', '3-117', '3-123', '3-127', '3-156', '3-162', '3-185', '3-188', '3-198', '3-214', '3-233', '3-241', '3-246', '3-253', '3-254', '3-257', '3-260', '3-274', '3-279', '3-280', '4-8', '4-24', '4-32', '4-132', '4-139', '4-150', '4-153', '4-157', '4-162', '4-171', '4-210', '4-232', '4-245', '4-254', '4-264', '4-273', '4-276'], ['1-3', '1-18', '1-19', '1-26', '1-38', '1-56', '1-66', '1-78', '1-103', '1-118', '1-138', '1-140', '1-149', '1-166', '1-170', '1-199', '1-210', '1-223', '1-234', '1-241', '1-268', '1-285', '1-294', '1-300', '1-314', '1-322', '1-336', '1-339', '1-359', '1-363', '1-371', '1-390', '1-397', '1-402', '1-480', '1-488', '1-506', '2-21', '2-48', '2-85', '2-92', '2-110', '2-148', '2-173', '2-187', '2-207', '2-213', '2-223', '2-233', '2-235', '3-10', '3-14', '3-19', '3-21', '3-34', '3-37', '3-44', '3-59', '3-67', '3-76', '3-86', '3-91', '3-92', '3-94', '3-130', '3-131', '3-140', '3-155', '3-158', '3-163', '3-170', '3-178', '3-179', '3-197', '3-205', '3-215', '3-217', '3-220', '3-230', '3-252', '3-256', '3-272', '4-5', '4-13', '4-17', '4-21', '4-50', '4-70', '4-80', '4-106', '4-112', '4-126', '4-127', '4-131', '4-169', '4-183', '4-203', '4-217', '4-218', '4-224', '4-227', '4-251', '4-258', '4-262', '4-277', '4-278'], ['1-6', '1-59', '1-62', '1-99', '1-107', '1-119', '1-164', '1-174', '1-182', '1-248', '1-303', '1-310', '1-317', '1-326', '1-328', '1-343', '1-348', '1-350', '1-355', '1-362', '1-367', '1-380', '1-384', '1-389', '1-403', '2-32', '2-100', '2-101', '2-154', '2-179', '2-183', '2-185', '2-191', '2-197', '2-204', '2-212', '2-218', '2-229', '2-230', '2-234', '2-245', '2-253', '3-31', '3-36', '3-43', '3-48', '3-49', '3-52', '3-87', '3-96', '3-97', '3-100', '3-120', '3-136', '3-138', '3-143', '3-148', '3-175', '3-186', '3-187', '3-196', '3-200', '3-221', '3-235', '3-247', '3-248', '3-250', '3-265', '3-275', '3-277', '3-278', '4-31', '4-33', '4-67', '4-93', '4-137', '4-158', '4-174', '4-181', '4-191', '4-223', '4-228', '4-229', '4-249', '4-260', '4-269', '4-270'], [], []]
cur6 = [['1-15', '1-21', '1-30', '1-91', '1-133', '1-135', '1-147', '1-158', '1-171', '1-197', '1-200', '1-209', '1-213', '1-215', '1-235', '1-238', '1-250', '1-256', '1-263', '1-265', '1-301', '1-407', '1-408', '1-414', '1-501', '1-503', '1-504', '2-6', '2-7', '2-19', '2-26', '2-27', '2-36', '2-37', '2-46', '2-55', '2-57', '2-61', '2-75', '2-89', '2-103', '2-111', '2-118', '2-132', '2-151', '2-155', '2-169', '3-3', '3-15', '3-62', '3-102', '3-153', '3-174', '3-176', '4-4', '4-22', '4-29', '4-34', '4-54', '4-59', '4-63', '4-71', '4-75', '4-86', '4-100', '4-102', '4-103', '4-116', '4-135', '4-163', '4-165', '4-207', '4-212', '5-15', '5-27', '5-84', '5-87', '5-113', '5-150', '5-157', '5-160', '5-166', '5-184', '5-251', '5-253'], ['0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-2', '1-22', '1-25', '1-39', '1-46', '1-67', '1-70', '1-71', '1-76', '1-96', '1-98', '1-105', '1-131', '1-148', '1-152', '1-163', '1-178', '1-193', '1-195', '1-204', '1-216', '1-224', '1-247', '1-251', '1-258', '1-275', '1-282', '1-297', '1-304', '1-406', '1-425', '1-514', '2-4', '2-9', '2-11', '2-18', '2-23', '2-29', '2-41', '2-52', '2-53', '2-64', '2-96', '2-105', '2-131', '2-134', '2-144', '3-11', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-280', '4-1', '4-3', '4-8', '4-9', '4-26', '4-49', '4-73', '4-78', '4-85', '4-94', '4-97', '4-107', '4-119', '4-130', '4-136', '4-139', '4-145', '4-147', '4-150', '4-177', '4-193', '4-196', '4-199', '4-221', '4-232', '4-234', '4-276', '5-44', '5-47', '5-58', '5-65', '5-77', '5-97', '5-102', '5-116', '5-131', '5-141', '5-153', '5-156', '5-170', '5-181'], ['1-34', '1-45', '1-60', '1-66', '1-86', '1-97', '1-103', '1-121', '1-138', '1-144', '1-151', '1-155', '1-166', '1-168', '1-183', '1-199', '1-202', '1-223', '1-232', '1-241', '1-244', '1-268', '1-272', '1-286', '1-292', '1-293', '1-294', '1-320', '1-339', '1-363', '1-386', '1-390', '1-402', '1-480', '1-488', '1-506', '2-5', '2-28', '2-63', '2-85', '2-126', '2-159', '2-182', '2-200', '2-225', '3-14', '3-21', '3-37', '3-60', '3-61', '3-91', '3-107', '3-133', '3-170', '3-193', '3-212', '3-226', '3-251', '3-261', '3-264', '3-266', '3-267', '3-268', '4-10', '4-17', '4-21', '4-25', '4-43', '4-50', '4-68', '4-70', '4-110', '4-123', '4-126', '4-127', '4-166', '4-169', '4-217', '4-218', '4-237', '4-242', '4-243', '4-247', '4-248', '4-253', '4-255', '4-256', '4-262', '4-266', '4-268', '4-275', '4-278', '5-26', '5-29', '5-33', '5-55', '5-68', '5-71', '5-85', '5-105', '5-117', '5-118', '5-129', '5-145', '5-175', '5-178', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-99', '1-107', '1-119', '1-123', '1-164', '1-177', '1-186', '1-239', '1-246', '1-248', '1-303', '1-305', '1-309', '1-310', '1-328', '1-338', '1-343', '1-362', '1-380', '1-384', '1-389', '1-400', '2-30', '2-32', '2-34', '2-67', '2-183', '2-185', '2-191', '2-204', '2-218', '2-230', '2-253', '3-5', '3-36', '3-41', '3-49', '3-52', '3-87', '3-88', '3-93', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-235', '3-243', '3-248', '3-265', '4-15', '4-31', '4-44', '4-58', '4-91', '4-128', '4-138', '4-143', '4-158', '4-181', '4-184', '4-187', '4-191', '4-223', '4-239', '5-20', '5-36', '5-56', '5-74', '5-109', '5-110', '5-111', '5-146', '5-148', '5-169', '5-171', '5-182', '5-183', '5-200', '5-203', '5-213', '5-219', '5-224'], [], []]
cur6b = [['1-5', '1-41', '1-91', '1-133', '1-136', '1-162', '1-197', '1-213', '1-220', '1-250', '1-261', '1-264', '1-278', '1-330', '1-357', '1-369', '1-392', '1-407', '1-408', '1-409', '1-410', '1-411', '1-412', '1-413', '1-414', '1-417', '1-419', '1-421', '1-424', '1-427', '2-7', '2-19', '2-31', '2-46', '2-50', '2-57', '2-70', '2-75', '2-89', '2-103', '2-111', '2-138', '2-171', '2-175', '2-186', '2-201', '2-209', '2-216', '2-224', '2-231', '2-238', '2-246', '2-247', '2-248', '2-250', '2-251', '3-15', '3-40', '3-63', '3-65', '3-102', '3-153', '3-154', '3-174', '3-206', '4-22', '4-34', '4-35', '4-45', '4-46', '4-52', '4-59', '4-63', '4-71', '4-75', '4-82', '4-86', '4-100', '4-103', '4-121', '4-122', '4-135', '4-163', '4-167', '4-175', '4-182', '4-189', '4-197', '4-212', '4-213', '4-219', '4-236', '5-4', '5-5', '5-7', '5-28', '5-39', '5-52', '5-73', '5-82', '5-91', '5-92', '5-103', '5-113', '5-134', '5-137', '5-163', '5-172', '5-177', '5-184', '5-196', '5-214', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '5-253'], ['0-63', '1-32', '1-52', '1-67', '1-82', '1-163', '1-178', '1-204', '1-225', '1-240', '1-258', '1-262', '1-275', '1-291', '1-315', '1-332', '1-333', '1-374', '1-381', '1-404', '1-406', '1-416', '1-425', '1-502', '1-512', '1-514', '2-4', '2-23', '2-43', '2-45', '2-51', '2-60', '2-64', '2-78', '2-80', '2-96', '2-102', '2-131', '2-137', '2-139', '2-144', '2-172', '2-177', '2-193', '2-202', '2-226', '2-240', '3-39', '3-47', '3-119', '3-135', '3-144', '3-161', '3-164', '3-181', '3-214', '3-233', '3-262', '3-280', '4-9', '4-24', '4-41', '4-73', '4-81', '4-114', '4-119', '4-136', '4-147', '4-162', '4-171', '4-176', '4-177', '4-196', '4-221', '4-234', '4-273', '4-276', '5-2', '5-8', '5-13', '5-23', '5-30', '5-35', '5-47', '5-49', '5-58', '5-59', '5-62', '5-65', '5-88', '5-97', '5-107', '5-114', '5-126', '5-132', '5-140', '5-147', '5-158', '5-162', '5-173', '5-181', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249'], ['1-3', '1-54', '1-84', '1-103', '1-104', '1-121', '1-140', '1-155', '1-166', '1-172', '1-188', '1-202', '1-234', '1-241', '1-280', '1-294', '1-299', '1-312', '1-320', '1-334', '1-336', '1-339', '1-359', '1-363', '1-368', '1-371', '1-373', '1-388', '1-390', '1-397', '1-480', '2-28', '2-48', '2-63', '2-85', '2-109', '2-110', '2-114', '2-158', '2-160', '2-170', '2-181', '2-182', '2-192', '2-208', '2-223', '2-225', '3-10', '3-60', '3-61', '3-107', '3-133', '3-155', '3-212', '3-220', '3-251', '3-256', '3-261', '3-264', '3-266', '3-267', '3-268', '3-270', '3-273', '4-10', '4-21', '4-25', '4-70', '4-123', '4-126', '4-127', '4-164', '4-169', '4-192', '4-217', '4-242', '4-243', '4-247', '4-248', '4-251', '4-253', '4-255', '4-256', '4-262', '4-266', '4-271', '4-275', '4-277', '4-278', '5-12', '5-25', '5-29', '5-32', '5-33', '5-40', '5-68', '5-71', '5-86', '5-98', '5-105', '5-139', '5-143', '5-145', '5-161', '5-175', '5-178', '5-180', '5-198', '5-204', '5-205', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '5-227', '5-232', '5-237', '5-242', '5-247'], ['1-6', '1-51', '1-59', '1-99', '1-164', '1-174', '1-177', '1-186', '1-239', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-343', '1-348', '1-362', '1-365', '1-380', '1-384', '1-389', '1-391', '2-30', '2-67', '2-98', '2-154', '2-183', '2-185', '2-197', '2-204', '2-218', '2-230', '2-242', '2-253', '3-5', '3-36', '3-41', '3-46', '3-80', '3-93', '3-97', '3-100', '3-113', '3-138', '3-148', '3-175', '3-186', '3-187', '3-196', '3-243', '3-248', '3-255', '3-265', '3-278', '4-15', '4-31', '4-33', '4-44', '4-48', '4-58', '4-79', '4-91', '4-96', '4-128', '4-138', '4-143', '4-144', '4-181', '4-184', '4-187', '4-191', '4-223', '4-228', '4-239', '4-240', '4-246', '4-269', '5-17', '5-56', '5-57', '5-63', '5-72', '5-109', '5-110', '5-124', '5-133', '5-146', '5-148', '5-164', '5-182', '5-183', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-219', '5-224', '5-230', '5-235', '5-240', '5-245', '5-250'], [], []]
cur6c = [['1-55', '1-85', '1-194', '1-200', '1-213', '1-254', '1-407', '1-408', '1-414', '2-8', '2-89', '2-138', '3-1', '3-40', '3-51', '3-101', '3-102', '3-151', '3-201', '3-228', '4-4', '4-18', '4-34', '4-53', '4-59', '4-64', '4-71', '4-100', '4-101', '4-116', '4-122', '4-148', '4-149', '4-161', '4-163', '4-175', '4-189', '4-197', '4-213', '4-233', '4-279', '5-15', '5-113', '5-251', '5-253', '5-255', '5-256', '7-4', '7-5', '7-6', '7-9', '7-14', '7-16', '7-20', '7-22', '7-26', '7-33', '7-37', '7-39', '7-40', '7-43', '7-48', '7-49', '7-50', '7-51', '7-55', '7-56', '7-62', '7-65', '7-70', '7-72', '7-73', '7-74', '7-78', '7-81', '7-86', '7-87', '7-92', '7-96', '7-100', '7-103', '7-104', '7-113', '7-118', '7-124', '7-125', '7-126', '7-127', '7-128', '7-129', '7-134', '7-136', '7-137', '7-211'], ['0-6', '0-14', '0-21', '0-30', '0-36', '1-14', '1-64', '1-90', '1-105', '1-152', '1-163', '1-178', '1-206', '1-227', '1-240', '1-283', '1-406', '1-418', '1-420', '1-422', '1-423', '1-426', '2-4', '2-9', '2-12', '2-16', '2-29', '2-94', '2-96', '2-131', '2-136', '2-143', '2-152', '3-70', '3-85', '3-119', '3-135', '3-144', '3-203', '3-211', '3-239', '3-280', '4-1', '4-3', '4-6', '4-26', '4-49', '4-73', '4-90', '4-97', '4-136', '4-145', '4-160', '4-171', '4-176', '4-193', '4-202', '4-234', '4-272', '5-2', '5-83', '5-97', '5-107', '5-132', '5-181', '5-254', '7-8', '7-13', '7-24', '7-25', '7-28', '7-35', '7-36', '7-44', '7-45', '7-57', '7-59', '7-63', '7-79', '7-85', '7-93', '7-97', '7-98', '7-101', '7-106', '7-114', '7-131', '7-132', '7-140', '7-141', '7-142', '7-143', '7-156', '7-162', '7-178', '7-184', '7-195', '7-212', '7-214'], ['1-26', '1-34', '1-38', '1-66', '1-84', '1-86', '1-112', '1-121', '1-138', '1-140', '1-151', '1-166', '1-202', '1-231', '1-241', '1-244', '1-306', '1-368', '1-388', '2-5', '2-21', '2-109', '2-110', '2-114', '2-159', '2-182', '2-222', '3-14', '3-21', '3-69', '3-91', '3-107', '3-131', '3-133', '3-158', '3-173', '3-178', '3-193', '3-205', '3-212', '3-217', '3-226', '3-242', '3-245', '4-10', '4-13', '4-21', '4-25', '4-43', '4-50', '4-60', '4-68', '4-70', '4-76', '4-112', '4-126', '4-131', '4-164', '4-169', '4-180', '4-204', '4-211', '4-217', '4-218', '4-227', '4-248', '4-271', '4-277', '4-278', '5-9', '5-12', '5-33', '5-68', '5-71', '5-85', '5-86', '5-90', '5-98', '5-105', '5-145', '5-161', '5-180', '5-198', '5-204', '5-210', '5-215', '5-221'], ['1-6', '1-51', '1-61', '1-99', '1-107', '1-124', '1-164', '1-177', '1-185', '1-186', '1-239', '1-245', '1-248', '1-303', '1-307', '1-309', '1-310', '1-328', '1-338', '1-362', '1-367', '1-389', '2-154', '2-185', '2-204', '2-229', '2-242', '2-253', '3-36', '3-49', '3-52', '3-80', '3-87', '3-88', '3-113', '3-136', '3-138', '3-148', '3-175', '3-186', '3-187', '3-192', '3-235', '3-243', '3-247', '3-248', '3-277', '4-31', '4-33', '4-37', '4-44', '4-48', '4-79', '4-91', '4-93', '4-96', '4-115', '4-137', '4-138', '4-143', '4-158', '4-184', '4-187', '4-228', '4-239', '4-240', '5-17', '5-21', '5-36', '5-56', '5-74', '5-110', '5-133', '5-146', '5-183'], [], []]
cur7 = [['0-3', '0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-202', '3-204', '4-12', '4-14', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-66', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-41', '5-42', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-56', '6-66', '6-69', '6-78', '6-82', '6-91', '6-104', '6-118', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-188', '6-189', '6-197', '6-210', '6-213'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-164', '3-182', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-254', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-65', '6-67', '6-70', '6-71', '6-73', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-196', '6-198', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-25', '4-30', '4-43', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-89', '6-103', '6-113', '6-117', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-203', '6-204', '6-207', '6-218'], [], []]
cur7b = [['0-3', '0-4', '0-11', '0-15', '0-18', '0-24', '0-33', '0-35', '1-4', '1-12', '1-15', '1-17', '1-21', '1-30', '1-31', '1-33', '1-35', '1-37', '1-41', '1-49', '1-55', '1-68', '1-69', '1-72', '1-73', '1-75', '1-77', '1-80', '1-83', '1-85', '1-88', '1-93', '1-101', '1-102', '1-114', '1-127', '1-130', '1-133', '1-136', '1-137', '1-141', '1-142', '1-147', '1-150', '1-153', '1-158', '1-159', '1-162', '1-171', '1-180', '1-194', '1-196', '1-197', '1-203', '1-207', '1-208', '1-209', '1-212', '1-213', '1-215', '1-218', '1-220', '1-238', '1-252', '1-254', '1-256', '1-260', '1-261', '1-264', '1-265', '1-266', '1-270', '1-276', '1-278', '1-284', '1-301', '1-302', '1-321', '1-330', '1-354', '1-357', '1-369', '1-392', '1-407', '1-408', '1-415', '1-503', '1-504', '1-505', '2-2', '2-50', '2-55', '2-66', '2-68', '2-70', '2-73', '2-103', '2-108', '2-118', '2-138', '2-149', '2-156', '2-175', '2-194', '2-198', '2-210', '2-217', '2-238', '3-2', '3-3', '3-18', '3-29', '3-63', '3-65', '3-106', '3-145', '3-153', '3-154', '3-157', '3-167', '3-171', '3-174', '3-195', '3-202', '3-204', '4-12', '4-14', '4-18', '4-22', '4-27', '4-34', '4-53', '4-63', '4-64', '4-74', '4-101', '4-103', '4-113', '4-133', '4-135', '4-152', '4-197', '4-206', '4-213', '4-216', '4-236', '4-238', '5-5', '5-7', '5-10', '5-14', '5-15', '5-41', '5-42', '5-46', '5-52', '5-75', '5-78', '5-84', '5-87', '5-91', '5-108', '5-112', '5-113', '5-115', '5-120', '5-134', '5-149', '5-172', '5-196', '5-208', '5-220', '5-226', '5-231', '5-236', '5-241', '5-246', '5-251', '5-252', '6-1', '6-2', '6-3', '6-5', '6-7', '6-25', '6-26', '6-31', '6-46', '6-50', '6-56', '6-66', '6-69', '6-78', '6-82', '6-87', '6-91', '6-93', '6-104', '6-114', '6-118', '6-122', '6-136', '6-138', '6-139', '6-146', '6-148', '6-149', '6-150', '6-155', '6-166', '6-167', '6-181', '6-182', '6-184', '6-188', '6-189', '6-197', '6-210', '6-213', '6-216'], ['0-6', '0-9', '0-14', '0-21', '0-27', '0-30', '0-36', '0-51', '0-53', '0-54', '0-55', '0-56', '0-58', '0-60', '0-61', '0-62', '0-63', '1-25', '1-27', '1-28', '1-32', '1-39', '1-42', '1-43', '1-46', '1-50', '1-52', '1-58', '1-67', '1-70', '1-76', '1-79', '1-81', '1-89', '1-90', '1-96', '1-98', '1-100', '1-105', '1-113', '1-117', '1-125', '1-128', '1-131', '1-139', '1-143', '1-146', '1-148', '1-156', '1-160', '1-165', '1-176', '1-178', '1-192', '1-193', '1-204', '1-211', '1-214', '1-216', '1-222', '1-230', '1-236', '1-240', '1-247', '1-255', '1-258', '1-262', '1-279', '1-282', '1-283', '1-291', '1-297', '1-304', '1-318', '1-324', '1-333', '1-341', '1-353', '1-360', '1-375', '1-394', '1-396', '1-406', '2-1', '2-4', '2-9', '2-10', '2-29', '2-35', '2-45', '2-64', '2-80', '2-96', '2-115', '2-131', '2-136', '2-137', '2-139', '2-146', '2-162', '2-163', '2-166', '2-174', '2-177', '2-205', '2-211', '2-226', '2-227', '3-11', '3-22', '3-27', '3-30', '3-71', '3-103', '3-123', '3-127', '3-152', '3-164', '3-182', '3-188', '3-211', '3-218', '3-233', '3-239', '3-241', '3-246', '3-257', '3-274', '3-276', '3-279', '4-3', '4-8', '4-19', '4-26', '4-32', '4-39', '4-47', '4-57', '4-62', '4-65', '4-73', '4-81', '4-85', '4-98', '4-107', '4-111', '4-130', '4-132', '4-142', '4-150', '4-151', '4-162', '4-171', '4-176', '4-195', '4-198', '4-220', '4-221', '4-241', '4-254', '4-257', '4-259', '4-272', '4-276', '5-2', '5-6', '5-8', '5-11', '5-24', '5-30', '5-34', '5-47', '5-48', '5-49', '5-53', '5-59', '5-62', '5-77', '5-79', '5-81', '5-88', '5-93', '5-94', '5-97', '5-100', '5-102', '5-123', '5-128', '5-131', '5-132', '5-138', '5-141', '5-151', '5-154', '5-158', '5-162', '5-165', '5-181', '5-188', '5-192', '5-194', '5-201', '5-207', '5-211', '5-216', '5-222', '5-228', '5-233', '5-239', '5-244', '5-249', '5-254', '6-15', '6-17', '6-19', '6-21', '6-27', '6-32', '6-34', '6-45', '6-52', '6-53', '6-61', '6-63', '6-65', '6-67', '6-70', '6-71', '6-73', '6-76', '6-80', '6-83', '6-86', '6-94', '6-97', '6-100', '6-102', '6-106', '6-108', '6-109', '6-116', '6-132', '6-133', '6-137', '6-140', '6-141', '6-145', '6-147', '6-152', '6-153', '6-160', '6-164', '6-171', '6-173', '6-186', '6-190', '6-191', '6-192', '6-194', '6-196', '6-198', '6-199', '6-201', '6-212', '6-219', '6-226', '6-228', '6-230', '6-232', '6-234', '6-238'], ['1-3', '1-19', '1-38', '1-45', '1-54', '1-60', '1-78', '1-94', '1-97', '1-112', '1-118', '1-138', '1-149', '1-154', '1-155', '1-168', '1-175', '1-181', '1-183', '1-188', '1-202', '1-232', '1-234', '1-237', '1-241', '1-242', '1-243', '1-244', '1-271', '1-272', '1-280', '1-285', '1-286', '1-293', '1-294', '1-295', '1-300', '1-306', '1-312', '1-336', '1-363', '1-373', '1-399', '1-480', '1-488', '2-14', '2-22', '2-28', '2-40', '2-48', '2-49', '2-59', '2-63', '2-85', '2-109', '2-114', '2-126', '2-160', '2-167', '2-181', '2-192', '2-225', '3-44', '3-56', '3-60', '3-61', '3-81', '3-107', '3-126', '3-131', '3-133', '3-140', '3-155', '3-158', '3-184', '3-189', '3-191', '3-212', '3-220', '3-227', '3-242', '3-256', '3-259', '4-5', '4-10', '4-17', '4-25', '4-30', '4-43', '4-50', '4-56', '4-60', '4-69', '4-76', '4-80', '4-106', '4-123', '4-127', '4-140', '4-155', '4-166', '4-173', '4-183', '4-203', '4-204', '4-218', '4-237', '4-242', '4-251', '4-255', '4-256', '4-262', '4-263', '4-268', '4-271', '4-275', '4-277', '4-278', '5-9', '5-12', '5-19', '5-25', '5-26', '5-29', '5-32', '5-33', '5-40', '5-50', '5-51', '5-55', '5-69', '5-71', '5-76', '5-85', '5-90', '5-95', '5-98', '5-105', '5-106', '5-117', '5-118', '5-129', '5-136', '5-139', '5-145', '5-161', '5-175', '5-178', '5-180', '5-185', '5-198', '5-199', '5-204', '5-205', '5-209', '5-210', '5-212', '5-215', '5-217', '5-218', '5-221', '5-223', '5-225', '6-6', '6-9', '6-14', '6-22', '6-30', '6-35', '6-38', '6-54', '6-62', '6-64', '6-74', '6-85', '6-92', '6-98', '6-115', '6-120', '6-123', '6-130', '6-135', '6-142', '6-156', '6-157', '6-165', '6-178', '6-193', '6-202', '6-206', '6-208', '6-215', '6-220', '6-223', '6-227', '6-229', '6-231', '6-233', '6-235', '6-236'], ['1-6', '1-47', '1-51', '1-59', '1-61', '1-119', '1-123', '1-124', '1-164', '1-177', '1-185', '1-233', '1-245', '1-246', '1-305', '1-307', '1-308', '1-326', '1-348', '1-366', '1-380', '1-400', '2-30', '2-34', '2-38', '2-67', '2-119', '2-127', '2-154', '2-164', '2-179', '2-197', '2-230', '2-253', '3-5', '3-31', '3-43', '3-48', '3-52', '3-80', '3-88', '3-93', '3-113', '3-138', '3-143', '3-148', '3-149', '3-196', '3-243', '3-244', '3-248', '3-265', '3-278', '4-15', '4-42', '4-58', '4-79', '4-91', '4-143', '4-144', '4-168', '4-181', '4-184', '4-191', '4-222', '4-223', '4-228', '4-229', '4-240', '4-260', '4-269', '5-20', '5-21', '5-56', '5-63', '5-72', '5-89', '5-101', '5-109', '5-111', '5-124', '5-133', '5-144', '5-164', '5-182', '5-186', '5-189', '5-190', '5-193', '5-195', '5-200', '5-203', '5-213', '5-224', '5-230', '5-235', '5-240', '5-250', '6-29', '6-33', '6-36', '6-39', '6-43', '6-49', '6-57', '6-59', '6-68', '6-84', '6-89', '6-103', '6-113', '6-117', '6-125', '6-131', '6-134', '6-144', '6-159', '6-162', '6-168', '6-169', '6-174', '6-175', '6-203', '6-204', '6-207', '6-217', '6-218'], [], []]
cur7_boosted = [['6-5', '1-15', '5-5', '5-7', '4-12', '0-3', '5-10', '1-31', '4-22', '4-27', '1-55', '1-392', '1-408', '1-407', '2-217', '1-330', '2-175', '1-369', '5-236', '5-226', '5-241', '5-231', '5-246', '3-202', '2-138', '1-252', '4-197', '6-188', '6-189', '1-261', '4-213', '1-278', '1-213', '6-213', '6-181', '5-113', '3-154', '5-115', '3-157', '6-150', '1-196', '1-197', '5-120', '1-203', '3-171', '2-118', '6-136', '1-133', '2-70', '5-78', '1-504', '1-142', '1-141', '6-104', '3-106', '6-118', '4-133', '4-135', '6-91', '1-72', '4-53', '1-69', '1-75', '1-68', '1-85', '3-63', '4-64', '1-80', '1-503', '2-55', '6-46'], ['4-3', '5-6', '1-25', '6-19', '4-19', '2-10', '1-32', '1-39', '4-39', '3-30', '1-46', '0-6', '5-30', '1-406', '4-254', '6-238', '1-79', '4-241', '3-274', '5-222', '3-276', '1-324', '3-257', '1-396', '6-230', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228', '2-139', '3-211', '1-262', '6-196', '6-198', '0-36', '4-221', '1-291', '2-162', '3-233', '3-239', '3-241', '5-181', '6-141', '1-193', '5-123', '2-115', '5-131', '5-132', '5-138', '5-141', '0-30', '1-247', '2-131', '1-236', '2-136', '6-94', '5-79', '1-131', '5-81', '4-111', '2-80', '1-165', '5-97', '3-127', '0-21', '5-100', '6-133', '2-35', '4-57', '6-52', '4-62', '4-73', '5-53', '1-96', '6-71', '1-105', '0-14', '1-100', '1-113'], ['4-5', '4-10', '5-9', '5-12', '6-22', '5-19', '2-14', '6-30', '5-25', '1-38', '6-35', '2-28', '5-33', '1-60', '6-235', '1-399', '2-192', '6-229', '6-227', '5-221', '5-204', '5-210', '5-215', '6-231', '5-198', '6-233', '4-256', '1-336', '5-217', '4-277', '4-278', '4-263', '5-218', '6-236', '3-212', '4-204', '5-161', '6-202', '1-280', '1-272', '2-160', '5-175', '1-294', '5-178', '4-237', '6-220', '3-242', '5-185', '3-155', '3-158', '2-109', '1-202', '2-114', '4-173', '3-184', '2-126', '1-232', '4-183', '3-191', '1-241', '1-243', '1-242', '5-76', '4-106', '5-85', '6-98', '1-155', '5-90', '1-149', '5-95', '3-126', '4-127', '1-168', '5-98', '1-175', '3-140', '4-56', '3-60', '4-60', '6-54', '1-78', '4-69', '1-94', '6-64', '5-55', '4-76', '2-59', '1-480', '6-85', '1-118'], [], [], []]
cur7b_boosted = [['5-75', '3-202', '5-251', '6-2', '1-392', '2-138', '6-93', '3-3', '4-53', '5-115', '6-184', '6-5', '5-78', '1-69', '6-50', '1-408', '3-157', '4-103', '6-188', '1-68', '1-407', '1-85', '5-252', '6-148', '6-7', '2-217', '6-56', '2-108', '4-18', '6-150', '4-12', '4-63', '4-206', '4-64', '5-46', '0-18', '1-330', '1-194', '3-106', '4-113', '1-203', '4-213', '6-155', '6-197', '5-15', '2-175', '4-22', '1-354', '6-114', '1-369', '4-27', '6-31', '6-210', '6-122', '4-135', '6-213', '6-216', '3-195', '6-87', '2-198', '6-136', '5-236', '5-226', '5-241', '5-231', '5-246'], ['1-406', '4-272', '2-35', '5-77', '3-152', '6-94', '1-193', '4-57', '4-198', '6-52', '6-190', '6-147', '6-191', '3-211', '4-107', '6-63', '4-62', '5-192', '4-254', '4-65', '1-25', '6-15', '6-238', '4-111', '6-194', '6-17', '6-27', '1-79', '6-196', '6-21', '6-198', '6-199', '5-239', '5-228', '5-244', '5-233', '5-249', '4-19', '5-216', '1-216', '4-73', '6-108', '6-201', '6-160', '4-241', '1-165', '6-65', '1-32', '1-27', '3-22', '5-222', '3-276', '6-76', '1-143', '1-283', '3-127', '4-32', '5-132', '0-21', '5-188', '4-130', '6-80', '1-222', '2-211', '6-34', '5-141', '3-257', '3-188', '1-247', '1-113', '6-83', '2-131', '1-58', '3-239', '5-181', '1-236', '1-396', '6-132', '6-133', '6-230', '3-279', '6-234', '6-232', '6-226', '0-60', '0-62', '0-53', '0-56', '0-54', '0-61', '0-51', '0-58', '0-55', '0-63', '6-228'], ['5-76', '5-40', '4-50', '5-117', '3-158', '4-60', '4-106', '3-212', '4-17', '4-203', '4-204', '6-98', '5-161', '6-193', '4-69', '6-235', '1-399', '2-192', '6-229', '1-94', '2-114', '6-227', '5-221', '5-12', '6-22', '5-204', '5-210', '1-155', '5-215', '6-64', '5-90', '6-202', '6-231', '5-198', '4-25', '6-233', '4-123', '2-49', '4-173', '4-256', '5-55', '1-336', '4-262', '5-95', '2-59', '3-126', '5-217', '4-127', '3-227', '5-223', '5-98', '6-30', '4-277', '6-120', '4-278', '3-184', '2-160', '5-25', '2-126', '1-480', '5-29', '2-225', '1-232', '6-35', '4-183', '1-293', '2-28', '1-112', '3-191', '6-38', '5-180', '5-105', '6-220', '6-85', '3-242', '5-32', '1-488', '5-145', '5-33', '5-71', '1-243', '1-242', '1-60', '6-135', '5-185'], [], [], []]


# ###A note to keep track of the formats, their passing direction, and the patch notes corresponding to when they came online.###
# """format1 = empty//empty//empty//empty (lrlr)
# format2 = omens//empty//omens//empty (lrlr)
# format3 = The Dusk Road // Omens of the Past // The Empty Throne // The Dusk Road (lrrl) (1.28)
# format4 = fall//curated4//curated4//fall (1.36)
# format5 = defiance//curated5//curated5//defiance (1.42)
# format5b = curated5b//defiance//defiance//curated5b (1.45.0.6365)
# format6 = dark//curated6//curated6//dark (1.46)
# format6b = dark//curated6b//curated6b//dark (1.46.9)
# format6c = dark//curated6c//curated6c//dark (1.47)
# format7 = fox//curated7//curated7//fox (no update; date unknown)
# format7b = curated7b//fox//fox//curated7b (no update; Dec 2, 2019)"""

# ###Creates a rating list for a specific set, which can then be edited to have the actual card values.###
# 
# flat_list = [item for sublist in set7+cur7b for item in sublist]
# 
# card_data = []
# 
# for x in flat_list:
#     card_data.append([x,1.0,card_dict.get(x).get('name')])
#     
# with open('format7b_rating.csv', 'w', newline='') as csvFile:
#     writer = csv.writer(csvFile, dialect='myDialect')
#     writer.writerows(card_data)
# csvFile.close()

# ###Pulls all images from the internet. Don't run again.###
# '''
# for x in range(len(data)):
#     if 'EternalID' in data[x]:
#         key = str(data[x].get('SetNumber'))+'-'+str(data[x].get('EternalID'))
#     else:
#         key = str(data[x].get('SetNumber'))+'-'+str(data[x].get('Name'))
#     resp = requests.get(data[x].get('ImageUrl'), stream=True)
#     local_file = open(card_dict.get(key).get('image'), 'wb')
#     resp.raw.decode_content = True
#     shutil.copyfileobj(resp.raw, local_file)
#     del resp

# ###Pulls the images for a specific set, instead of for all images. Better to run, but still be careful.###
# 
# for x in range(len(data)):
#     if data[x].get('SetNumber') == 7:
#         if 'EternalID' in data[x]:
#             key = str(data[x].get('SetNumber'))+'-'+str(data[x].get('EternalID'))
#         else:
#             key = str(data[x].get('SetNumber'))+'-'+str(data[x].get('Name'))
#         resp = requests.get(data[x].get('ImageUrl'), stream=True)
#         local_file = open(card_dict.get(key).get('image'), 'wb')
#         resp.raw.decode_content = True
#         shutil.copyfileobj(resp.raw, local_file)
#         del resp
#     else:
#         pass

# ###This is to create a list that can be input into the picker file, which will allow people to order the set based on which cards they prefer.###
# '''
# picker_list = set6[0]+set6[1]+set6[2]+set6[3]+cur6b[0]+cur6b[1]+cur6b[2]+cur6b[3]
# 
# for x in picker_list:
#     print('{id: "' + x + '", name: "' + card_dict.get(x).get('name') + '", image: "' + card_dict.get(x).get('image') + '"},')

# In[21]:


def single_pack(delta,gamma,format_sets):
    fire_check = False
    time_check = False
    justice_check = False
    primal_check = False
    shadow_check = False
    
    set_num = data_dict.get('set_code').index(format_sets[delta])
    set_cards = data_dict.get('set_cards')[set_num]
    set_boosts = data_dict.get('set_boosts')[set_num]
    set_boost_amount = data_dict.get('set_boost_amount')[set_num]
    
    for haa in range(len(set_boosts[0])):
        for khaa in range(set_boost_amount):
            set_cards[0].append(set_boosts[0][haa])
    for haa in range(len(set_boosts[1])):
        for khaa in range(set_boost_amount):
            set_cards[1].append(set_boosts[1][haa])
    for haa in range(len(set_boosts[2])):
        for khaa in range(set_boost_amount):
            set_cards[2].append(set_boosts[2][haa])
    for haa in range(len(set_boosts[3])):
        for khaa in range(set_boost_amount):
            set_cards[3].append(set_boosts[3][haa])
    for haa in range(len(set_boosts[4])):
        for khaa in range(set_boost_amount):
            set_cards[4].append(set_boosts[4][haa])
    for haa in range(len(set_boosts[5])):
        for khaa in range(set_boost_amount):
            set_cards[5].append(set_boosts[5][haa])
    
    legendary_cards = set_cards[3]
    rare_cards = set_cards[2]
    uncommon_cards = set_cards[1]
    common_cards = set_cards[0]
    
    if settings_dict.get('use_promos') == True:
        rare_cards = set_cards[2] + set_cards[4]
        
    if settings_dict.get('use_unnumbered') == True:
        common_cards = set_cards[0] + set_cards[5]
    
    if settings_dict.get('cubify') == True:
        if delta==0 and gamma==0:
            global format_cards
            format_cards = legendary_cards + rare_cards + uncommon_cards + common_cards
        pack[delta][gamma] = random.sample(format_cards,12)
        for eta in pack[delta][gamma]:
            format_cards.remove(eta)
        
    if settings_dict.get('cubify') == False:
        if legend_check[delta][gamma] > 0.9:
            pack[delta][gamma] = random.sample(legendary_cards,1) + random.sample(uncommon_cards,3) + random.sample(common_cards,8)
        else:
            pack[delta][gamma] = random.sample(rare_cards,1) + random.sample(uncommon_cards,3) + random.sample(common_cards,8)

    for epsilon in range(12):
        if fire_check == False:
            fire_card = card_dict.get(pack[delta][gamma][epsilon]).get('influence').get('fire')
            if fire_card == 'True':
                fire_check = True
        if time_check == False:
            time_card = card_dict.get(pack[delta][gamma][epsilon]).get('influence').get('time')
            if time_card == 'True':
                time_check = True
        if justice_check == False:
            justice_card = card_dict.get(pack[delta][gamma][epsilon]).get('influence').get('justice')
            if justice_card == 'True':
                justice_check = True
        if primal_check == False:
            primal_card = card_dict.get(pack[delta][gamma][epsilon]).get('influence').get('primal')
            if primal_card == 'True':
                primal_check = True
        if shadow_check == False:
            shadow_card = card_dict.get(pack[delta][gamma][epsilon]).get('influence').get('shadow')
            if shadow_card == 'True':
                shadow_check = True

    if len(set(pack[delta][gamma])) < 12:
        single_pack(delta,gamma,format_sets)
        
        
    if (fire_check == False or time_check == False or justice_check == False or primal_check == False or shadow_check == False):
        if settings_dict.get('cubify') == True:
            for eta in pack[delta][gamma]:
                format_cards.append(eta)
        single_pack(delta,gamma,format_sets)


# In[22]:


def random_pack_generator():
    
    format_num = settings_dict.get('format_used')
    format_array = data_dict.get('format_code')[format_num]
    format_sets = data_dict.get('format_sets')[format_num]
    
    for delta in range(4):
        for gamma in range(12):
            single_pack(delta,gamma,format_sets)


# In[23]:


def calculate_rank(vector):
    a={}
    rank=1
    for num in sorted(vector):
        if num not in a:
            a[num]=rank
            rank=rank+1
    return[a[i] for i in vector]


# In[24]:


def picked(omicron):
    pick = omicron
    player_picks_setup = []
    pick_key = pack[zeta][eta][pick]
    player_picks.append(pick_key)
    
    for rho in player_picks:
        player_picks_setup.append((card_dict.get(rho).get('cost'),card_dict.get(rho).get('name'),rho.split('-')[0], rho.split('-')[1]))
    player_picks_setup.sort()
    
    player_picks_extra_setup = list()
    for sigma in range(len(player_picks)):
        player_picks_extra_setup.append((str(player_picks_setup[sigma][1]) + ' (Set' + str(player_picks_setup[sigma][2]) + ' #' + str(player_picks_setup[sigma][3]) + ')'))
    count_dict = collections.Counter(player_picks_extra_setup)
    
    global player_picks_list
    player_picks_list = list()
    for tau in range(len(player_picks)):
        if len(player_picks) > 1 and player_picks_extra_setup[tau]==player_picks_extra_setup[tau-1]:
            pass
        else:
            player_picks_list.append((str(count_dict.get(player_picks_extra_setup[tau])) + ' ' + player_picks_extra_setup[tau]))
            
    if settings_dict.get('update_ranking_check')==True:
        card_dict.get(pick_key).update(ranking=card_dict.get(pick_key).get('ranking') + .01*(11-eta))

    pack[zeta][eta].pop(pick)
    draft_frame.destroy()


# In[25]:


def my_autopct(pct):
    return ('%.1f' % pct) if pct > 10 else ' '


# In[26]:


def make_histogram():
    
    plt.close('all')

    hist_data = []

    for upsilon in player_picks:
        hist_data.append(card_dict.get(upsilon).get('cost'))

    hist_data = collections.Counter(hist_data)
    base_data = collections.Counter({0:0,1:0,2:0,3:0,4:0,5:0,6:0})
    hist_data.subtract(base_data)

    grtr7 = 0
    for phi in range(7,25):
        if hist_data.get(phi):
            grtr7 = grtr7 + hist_data.get(phi)
            hist_data.pop(phi)

    counter_list = list(hist_data.items())
    counter_list.sort()
    counter_list.append(('7+', grtr7))

    labels,values=zip(*counter_list)
    indexes = np.arange(len(labels))

    bar_fig = plt.figure(figsize=(5,2))
    ax = bar_fig.add_subplot(111)
    ax.bar(indexes, values, width=1, align='center', tick_label=['0','1','2','3','4','5','6','7+'])
    plt.yticks(np.arange(0, np.max(values)+1, math.ceil((np.max(values)+1)/5)))
    plt.title('Cost Curve')

    deck_bar = Frame(player_deck_info)
    deck_bar.pack(side=BOTTOM)

    canvas = FigureCanvasTkAgg(bar_fig, deck_bar)
    canvas.draw()
    canvas.get_tk_widget().pack(side=TOP, fill=BOTH, expand=True)


# In[27]:


def gather_data(chosen_player_cards, chosen_player_name):

    global data_frame
    if 'data_frame' in globals() or 'data_frame' in locals():
        data_frame.destroy()
    else:
        pass
        
    plt.close('all')
    
    hist_data = []
    fire_count = 0
    time_count = 0
    justice_count = 0
    primal_count = 0
    shadow_count = 0
    colorless_count = 0
    fire_influence = []
    time_influence = []
    justice_influence = []
    primal_influence = []
    shadow_influence = []
    unit_count = 0
    spell_count = 0
    attachment_count = 0
    site_count = 0
    power_count = 0
    common_count = 0
    uncommon_count = 0
    rare_count = 0
    legendary_count = 0
    promo_count = 0
    player_picks_setup = []

    for upsilon in chosen_player_cards:
        hist_data.append(card_dict.get(upsilon).get('cost'))
        if card_dict.get(upsilon).get('influence').get('fire') == 'True':
            fire_count = fire_count+1
        if card_dict.get(upsilon).get('influence').get('time') == 'True':
            time_count = time_count+1
        if card_dict.get(upsilon).get('influence').get('justice') == 'True':
            justice_count = justice_count+1
        if card_dict.get(upsilon).get('influence').get('primal') == 'True':
            primal_count = primal_count+1
        if card_dict.get(upsilon).get('influence').get('shadow') == 'True':
            shadow_count = shadow_count+1
        if (card_dict.get(upsilon).get('influence').get('fire') == 'False' and 
            card_dict.get(upsilon).get('influence').get('time') == 'False' and 
            card_dict.get(upsilon).get('influence').get('justice') == 'False' and 
            card_dict.get(upsilon).get('influence').get('primal') == 'False' and 
            card_dict.get(upsilon).get('influence').get('shadow') == 'False'):
            colorless_count = colorless_count+1
        fire_influence.append(card_dict.get(upsilon).get('influence').get('cost').count('F'))
        time_influence.append(card_dict.get(upsilon).get('influence').get('cost').count('T'))
        justice_influence.append(card_dict.get(upsilon).get('influence').get('cost').count('J'))
        primal_influence.append(card_dict.get(upsilon).get('influence').get('cost').count('P'))
        shadow_influence.append(card_dict.get(upsilon).get('influence').get('cost').count('S'))
        if card_dict.get(upsilon).get('type') == 'Unit':
            unit_count = unit_count+1
        if card_dict.get(upsilon).get('type') == 'Spell' or card_dict.get(upsilon).get('type') == 'Fast Spell':
            spell_count = spell_count+1
        if card_dict.get(upsilon).get('type') == 'Relic' or card_dict.get(upsilon).get('type') == 'Relic Weapon' or card_dict.get(upsilon).get('type') == 'Weapon' or card_dict.get(upsilon).get('type') == 'Curse' or card_dict.get(upsilon).get('type') == 'Cursed Relic':
            attachment_count = attachment_count+1
        if card_dict.get(upsilon).get('type') == 'Power':
            power_count = power_count+1
        if card_dict.get(upsilon).get('type') == 'Site':
            site_count = site_count+1
        if card_dict.get(upsilon).get('rarity') == 'Common' or card_dict.get(upsilon).get('rarity') == 'None':
            common_count = common_count+1
        if card_dict.get(upsilon).get('rarity') == 'Uncommon':
            uncommon_count = uncommon_count+1
        if card_dict.get(upsilon).get('rarity') == 'Rare':
            rare_count = rare_count+1
        if card_dict.get(upsilon).get('rarity') == 'Legendary':
            legendary_count = legendary_count+1
        if card_dict.get(upsilon).get('rarity') == 'Promo':
            promo_count = promo_count+1
        player_picks_setup.append((card_dict.get(upsilon).get('cost'),card_dict.get(upsilon).get('name'),upsilon.split('-')[0], upsilon.split('-')[1]))
    player_picks_setup.sort()
    
    player_picks_extra_setup = list()
    for sigma in range(len(chosen_player_cards)):
        player_picks_extra_setup.append((str(player_picks_setup[sigma][1]) + ' (Set' + str(player_picks_setup[sigma][2]) + ' #' + str(player_picks_setup[sigma][3]) + ')'))
    count_dict = collections.Counter(player_picks_extra_setup)

    player_picks_list = list()
    for tau in range(len(chosen_player_cards)):
        if len(chosen_player_cards) > 1 and player_picks_extra_setup[tau]==player_picks_extra_setup[tau-1]:
            pass
        else:
            player_picks_list.append((str(count_dict.get(player_picks_extra_setup[tau])) + ' ' + player_picks_extra_setup[tau]))

    hist_data = collections.Counter(hist_data)
    base_data = collections.Counter({0:0,1:0,2:0,3:0,4:0,5:0,6:0})
    hist_data.subtract(base_data)

    grtr7 = 0
    for phi in range(7,25):
        if hist_data.get(phi):
            grtr7 = grtr7 + hist_data.get(phi)
            hist_data.pop(phi)

    counter_list = list(hist_data.items())
    counter_list.sort()
    counter_list.append(('7+', grtr7))

    labels,values=zip(*counter_list)
    indexes = np.arange(len(labels))

    deck_counts = [fire_count,time_count,justice_count,primal_count,shadow_count,colorless_count]
    labels = ['Fire','Time','Justice','Primal','Shadow','Colorless']
    colors = ['r','yellow','g','b','purple','silver']
    
    for x in range(len(labels)):
        if deck_counts[x]/sum(deck_counts) >= .1:
            pass
        else:
            labels[x] = ' '
            
    influence_count = [np.max(fire_influence),
                       np.max(time_influence),
                       np.max(justice_influence),
                       np.max(primal_influence),
                       np.max(shadow_influence)]
    
    data_frame = Frame(deck_information)
    data_frame.pack(side=LEFT, fill=BOTH, expand=True)
    
    chosen_player_name_lbl = Label(data_frame, text=chosen_player_name, font='Helvetica 16 bold')
    chosen_player_name_lbl.grid(row=0, column=0, columnspan=2)
    
    bar_fig = plt.figure(figsize=(4,4))
    ax = bar_fig.add_subplot(111)
    ax.bar(indexes, values, width=1, align='center', tick_label=['0','1','2','3','4','5','6','7+'])
    plt.yticks(np.arange(0, np.max(values)+1, math.ceil((np.max(values)+1)/5)))
    plt.title('Cost Curve')
    
    deck_bar = Frame(data_frame)
    deck_bar.grid(row=1, column=1)
                          
    canvas = FigureCanvasTkAgg(bar_fig, deck_bar)
    canvas.draw()
    canvas.get_tk_widget().pack(side=TOP, fill=BOTH, expand=True)

    pie_fig = plt.figure(figsize=(4,4))
    ax = pie_fig.add_subplot(111)
    a,b,c = ax.pie(deck_counts, colors=colors, labels=labels, autopct=my_autopct, startangle=90)
    plt.setp(c, size=16, weight="bold")
    plt.setp(b, size=20, weight="bold")
    
    deck_pie = Frame(data_frame)
    deck_pie.grid(row=1, column=0)
    
    canvas = FigureCanvasTkAgg(pie_fig, deck_pie)
    canvas.draw()
    canvas.get_tk_widget().pack(side=TOP, fill=BOTH, expand=True)
    
    stats_frame = Frame(data_frame)
    stats_frame.grid(row=2, column=1, sticky=N)
    
    fire_lbl = Label(stats_frame, text='F: '+str(influence_count[0]), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT, bg='red')
    fire_lbl.grid(row=0, column=0)
    time_lbl = Label(stats_frame, text='T: '+str(influence_count[1]), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT, bg='yellow')
    time_lbl.grid(row=0, column=1)
    justice_lbl = Label(stats_frame, text='J: '+str(influence_count[2]), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT, bg='green')
    justice_lbl.grid(row=0, column=2)
    primal_lbl = Label(stats_frame, text='P: '+str(influence_count[3]), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT, bg='blue')
    primal_lbl.grid(row=0, column=3)
    shadow_lbl = Label(stats_frame, text='S: '+str(influence_count[4]), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT, bg='purple')
    shadow_lbl.grid(row=0, column=4)
    
    unit_lbl = Label(stats_frame, text='Units: '+str(unit_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    unit_lbl.grid(row=1, column=0)
    spell_lbl = Label(stats_frame, text='Spells: '+str(spell_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    spell_lbl.grid(row=1, column=1)
    attach_lbl = Label(stats_frame, text='Attachments: '+str(attachment_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    attach_lbl.grid(row=1, column=2)
    site_lbl = Label(stats_frame, text='Sites: '+str(site_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    site_lbl.grid(row=1, column=3)
    power_lbl = Label(stats_frame, text='Powers: '+str(power_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    power_lbl.grid(row=1, column=4)
    
    common_lbl = Label(stats_frame, text='Common: '+str(common_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    common_lbl.grid(row=2, column=0)
    uncommon_lbl = Label(stats_frame, text='Uncommon: '+str(uncommon_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    uncommon_lbl.grid(row=2, column=1)
    rare_lbl = Label(stats_frame, text='Rare: '+str(rare_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    rare_lbl.grid(row=2, column=2)
    legendary_lbl = Label(stats_frame, text='Legendary: '+str(legendary_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
    legendary_lbl.grid(row=2, column=3)
    
    if settings_dict.get('use_promos') == True:
        promo_lbl = Label(stats_frame, text='Promo: '+str(promo_count), borderwidth=1, relief='solid', height=1, width=12, anchor=N, justify=LEFT)
        promo_lbl.grid(row=2, column=4)
    
    deck_section = Frame(data_frame)
    deck_section.grid(row=2, column=0)
    
    scrollbar = Scrollbar(deck_section)
    scrollbar.pack(side=RIGHT, fill=Y)
    
    deck_list = Text(deck_section, width=64, height=10, yscrollcommand=scrollbar.set)
    deck_list.pack(side=RIGHT, expand=False)

    for pi in range(len(player_picks_list)):
        deck_list.insert(END,player_picks_list[pi] + '\n')
    deck_list.configure(state='disabled')
    
    scrollbar.config(command=deck_list.yview)


# In[28]:


def main_draft_procedure():
    
    rank_determination()
    
    global player_picks
    global player_picks_list
    player_picks = []
    player_picks_list = set()
    
    global botl1
    global botl2
    global botl3
    global botl4
    global botl5
    global botl6
    global botl7
    global botl8
    global botl9
    global botl10
    global botl11
    global botr1
    global botr2
    global botr3
    global botr4
    global botr5
    global botr6
    global botr7
    global botr8
    global botr9
    global botr10
    global botr11
    global botu1
    global botu2
    global botu3
    global botu4
    global botu5
    global botu6
    global botu7
    global botu8
    global botu9
    global botu10
    global botu11
    global botb1
    global botb2
    global botb3
    global botb4
    global botb5
    global botb6
    global botb7
    global botb8
    global botb9
    global botb10
    global botb11
    
    botl1 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot1')))
    botl2 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot2')))
    botl3 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot3')))
    botl4 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot4')))
    botl5 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot5')))
    botl6 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot6')))
    botl7 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot7')))
    botl8 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot8')))
    botl9 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot9')))
    botl10 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot10')))
    botl11 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot11')))
    botr1 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot1')))
    botr2 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot2')))
    botr3 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot3')))
    botr4 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot4')))
    botr5 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot5')))
    botr6 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot6')))
    botr7 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot7')))
    botr8 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot8')))
    botr9 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot9')))
    botr10 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot10')))
    botr11 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot11')))
    botu1 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot1')))
    botu2 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot2')))
    botu3 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot3')))
    botu4 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot4')))
    botu5 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot5')))
    botu6 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot6')))
    botu7 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot7')))
    botu8 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot8')))
    botu9 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot9')))
    botu10 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot10')))
    botu11 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot11')))
    botb1 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot1')))
    botb2 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot2')))
    botb3 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot3')))
    botb4 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot4')))
    botb5 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot5')))
    botb6 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot6')))
    botb7 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot7')))
    botb8 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot8')))
    botb9 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot9')))
    botb10 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot10')))
    botb11 = copy.deepcopy(bot_dict.get(settings_dict.get('bots_used').get('bot11')))

    bot_1 = ['player',botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11,
            botr1,botr2,botr3,botr4,botr5,botr6,botr7,botr8,botr9,botr10,botr11]
    bot_2 = ['player',botu1,botu2,botu3,botu4,botu5,botu6,botu7,botu8,botu9,botu10,botu11,
            botb1,botb2,botb3,botb4,botb5,botb6,botb7,botb8,botb9,botb10,botb11]
    bot_faction_ranking = [0.0,0.0,0.0,0.0,0.0]
    
    if settings_dict.get('pass_style')==1:
        bot_1 = ['player',botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11,
            botr1,botr2,botr3,botr4,botr5,botr6,botr7,botr8,botr9,botr10,botr11]
        bot_2 = ['player',botr11,botr10,botr9,botr8,botr7,botr6,botr5,botr4,botr3,botr2,botr1,
            botl11,botl10,botl9,botl8,botl7,botl6,botl5,botl4,botl3,botl2,botl1]
        
    if settings_dict.get('pass_style')==2:
        bot_1 = ['player',botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11,
                 botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11]
        bot_2 = ['player',botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11,
                 botl1,botl2,botl3,botl4,botl5,botl6,botl7,botl8,botl9,botl10,botl11]
  
    global zeta
    global eta
    global pick
    
    for zeta in range(len(pack)):
        if zeta==0 or zeta==3:
            bot = bot_1
        if zeta==1 or zeta==2:
            bot = bot_2

        for iota in range(len(pack[zeta])):
            for eta in range(len(pack[zeta])):

                if iota==eta:

                    global draft_frame
                    draft_frame = Frame(draft_tab)
                    draft_frame.pack(side=TOP, fill=BOTH, expand=True)
                    
                    scrollbar = Scrollbar(draft_frame)
                    scrollbar.pack(side=RIGHT, fill=Y)
                    
                    button_frame_info = Frame(draft_frame)
                    button_frame_info.pack(side=LEFT, fill=Y)
                    
                    button_frame = Frame(button_frame_info)
                    button_frame.pack(side=TOP, fill=BOTH)
                    
                    global draft_progress
                    draft_progress = ttk.Progressbar(button_frame_info, orient = HORIZONTAL,
                                                 length = 890, mode = 'determinate', maximum=48, value=len(player_picks))
                    draft_progress.pack(side=BOTTOM, fill=Y)
                    
                    global player_deck_info
                    player_deck_info = Frame(draft_frame)
                    player_deck_info.pack(side=RIGHT, fill=Y, expand=False)
                    
                    player_deck = Text(player_deck_info, width=36, yscrollcommand=scrollbar.set)
                    player_deck.pack(side=TOP, expand=False)

                    pack_cards = list()

                    for kappa in range(len(pack[zeta][eta])):
                        image = im.open(card_dict.get(pack[zeta][eta][kappa]).get('image'))
                        image = image.resize((int(image.width/3), int(image.height/3)), im.ANTIALIAS)
                        pack_cards.append(ImageTk.PhotoImage(image))

                    for pi in range(len(player_picks_list)):
                        player_deck.insert(END, player_picks_list[pi] + '\n')
                    player_deck.configure(state='disabled')
                    
                    make_histogram()
                        
                    scrollbar.config(command=player_deck.yview)

                    button = list()                    
                    for xi in range(len(pack_cards)):
                        button.append(Button(button_frame, image=pack_cards[xi], command=partial(picked, xi)))
                        if xi < 6:
                            button[-1].grid(row=0, column=xi, sticky=N+W)
                        else:
                            button[-1].grid(row=1, column=(xi-6), sticky=N+W)
                            
                    root.update()
                    root.wait_window(draft_frame)

                else:

                    bot_faction_values = bot[(eta-iota)][0]
                    bot_faction_rank = calculate_rank(bot_faction_values)
                    bot_faction_preference = bot[(eta-iota)][1]
                    bot_faction_bias = bot[(eta-iota)][3][1]

                    m = max(bot_faction_rank)
                    m1 = [phi for phi, chi in enumerate(bot_faction_rank) if chi == m]
                    m2 = [phi for phi, chi in enumerate(bot_faction_rank) if chi == m-1]
                    m3 = [phi for phi, chi in enumerate(bot_faction_rank) if chi == m-2]
                    m4 = [phi for phi, chi in enumerate(bot_faction_rank) if chi == m-3]
                    m5 = [phi for phi, chi in enumerate(bot_faction_rank) if chi == m-4]

                    for psi in m1:
                        bot_faction_ranking[psi] = bot_faction_preference[0]
                    for psi in m2:
                        bot_faction_ranking[psi] = bot_faction_preference[1]
                    for psi in m3:
                        bot_faction_ranking[psi] = bot_faction_preference[2]
                    for psi in m4:
                        bot_faction_ranking[psi] = bot_faction_preference[3]
                    for psi in m5:
                        bot_faction_ranking[psi] = bot_faction_preference[4]

                    pack_rankings = []

                    for theta in range(len(pack[zeta][eta])):
                        
                        if card_dict.get(pack[zeta][eta][theta]).get('cost') > 0 and card_dict.get(pack[zeta][eta][theta]).get('cost') < 13:
                            aggro_value = (13-card_dict.get(pack[zeta][eta][theta]).get('cost'))/10
                        if card_dict.get(pack[zeta][eta][theta]).get('cost') == 0 or card_dict.get(pack[zeta][eta][theta]).get('cost') > 12:
                            aggro_value = 0
                            
                        if card_dict.get(pack[zeta][eta][theta]).get('cost') > 0:
                            control_value = (card_dict.get(pack[zeta][eta][theta]).get('cost'))/10
                        if card_dict.get(pack[zeta][eta][theta]).get('cost') == 0:
                            control_value = .5
                            
                        if card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'Common' or card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'None':
                            pauper_value = 1
                            prince_value = 0
                            
                        if card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'Uncommon':
                            pauper_value = .5
                            prince_value = .5
                            
                        if card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'Rare' or card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'Promo':
                            pauper_value = 0
                            prince_value = 1
                            
                        if card_dict.get(pack[zeta][eta][theta]).get('rarity') == 'Legendary':
                            pauper_value = 0
                            prince_value = 3

                        card_rankings = []
                        if card_dict.get(pack[zeta][eta][theta]).get('influence').get('fire') == 'True':
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                  * (bot_faction_ranking[0] + bot_faction_bias[0]))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        if card_dict.get(pack[zeta][eta][theta]).get('influence').get('time') == 'True':
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                  * (bot_faction_ranking[1] + bot_faction_bias[1]))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        if card_dict.get(pack[zeta][eta][theta]).get('influence').get('justice') == 'True':
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                  * (bot_faction_ranking[2] + bot_faction_bias[2]))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        if card_dict.get(pack[zeta][eta][theta]).get('influence').get('primal') == 'True':
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                  * (bot_faction_ranking[3] + bot_faction_bias[3]))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        if card_dict.get(pack[zeta][eta][theta]).get('influence').get('shadow') == 'True':
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                  * (bot_faction_ranking[4] + bot_faction_bias[4]))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        if (card_dict.get(pack[zeta][eta][theta]).get('influence').get('fire') == 'False' and 
                            card_dict.get(pack[zeta][eta][theta]).get('influence').get('time') == 'False' and 
                            card_dict.get(pack[zeta][eta][theta]).get('influence').get('justice') == 'False' and 
                            card_dict.get(pack[zeta][eta][theta]).get('influence').get('primal') == 'False' and 
                            card_dict.get(pack[zeta][eta][theta]).get('influence').get('shadow') == 'False'):
                            card_rankings.append((card_dict.get(pack[zeta][eta][theta]).get('ranking') 
                                                 * np.mean(bot_faction_ranking))
                                                 + (bot[(eta-iota)][3][3][0] * aggro_value)
                                                 + (bot[(eta-iota)][3][3][1] * control_value)
                                                 + (bot[(eta-iota)][3][4][0] * pauper_value)
                                                 + (bot[(eta-iota)][3][4][1] * prince_value))
                        pack_rankings.append(np.min(card_rankings))

                    pick = pack_rankings.index(np.max(pack_rankings))
                    pick_key = pack[zeta][eta][pick]

                    if card_dict.get(pick_key).get('influence').get('fire') == 'True':
                        bot_faction_values[0] = bot_faction_values[0] + card_dict.get(pick_key).get('ranking')
                    if card_dict.get(pick_key).get('influence').get('time') == 'True':
                        bot_faction_values[1] = bot_faction_values[1] + card_dict.get(pick_key).get('ranking')
                    if card_dict.get(pick_key).get('influence').get('justice') == 'True':
                        bot_faction_values[2] = bot_faction_values[2] + card_dict.get(pick_key).get('ranking')
                    if card_dict.get(pick_key).get('influence').get('primal') == 'True':
                        bot_faction_values[3] = bot_faction_values[3] + card_dict.get(pick_key).get('ranking')
                    if card_dict.get(pick_key).get('influence').get('shadow') == 'True':
                        bot_faction_values[4] = bot_faction_values[4] + card_dict.get(pick_key).get('ranking')

                    bot[(eta-iota)][0] = bot_faction_values

                    bot[(eta-iota)][2].append(pick_key)

                    pack[zeta][eta].pop(pick)
                
    if settings_dict.get('update_ranking_check')==True:
        update_bot_ratings()
    
    global restart_draft_btn
    global redo_draft_btn
    
    draft_frame = Frame(draft_tab)
    draft_frame.pack(side=TOP, fill=BOTH, expand=True)
    
    restart_draft_btn = Button(draft_frame, text='Start New Draft', command=redraft)
    restart_draft_btn.pack(side=LEFT, expand=True)
    
    redo_draft_btn = Button(draft_frame, text='Redo Draft', command=redo_draft)
    redo_draft_btn.pack(side=LEFT, expand=True)
    
    scrollbar = Scrollbar(draft_frame)
    scrollbar.pack(side=RIGHT, fill=Y)

    player_deck_info = Frame(draft_frame)
    player_deck_info.pack(side=RIGHT, fill=Y, expand=False)

    player_deck = Text(player_deck_info, width=40, yscrollcommand=scrollbar.set)
    player_deck.pack(side=TOP, expand=False)
    
    make_histogram()

    for pi in range(len(player_picks_list)):
        player_deck.insert(END, player_picks_list[pi] + '\n')
    player_deck.configure(state='disabled')

    scrollbar.config(command=player_deck.yview)


# In[29]:


def draft():
    
    start_draft_btn.destroy()
    
    global pack
    global legend_check
    
    pack = [[0 for _ in range(12)] for _ in range(4)]
    legend_check = [[random.random() for _ in range(12)] for _ in range(4)]

    random_pack_generator()
    
    global bkup_pack
    bkup_pack = copy.deepcopy(pack)
    
    main_draft_procedure()


# In[30]:


def redo_draft():
    
    global draft_frame
    global bkup_pack
    global pack
    draft_frame.destroy()
    
    pack = copy.deepcopy(bkup_pack)

    main_draft_procedure()


# In[31]:


def redraft():
    
    global draft_frame
    draft_frame.destroy()
    
    global pack
    global legend_check
    
    pack = [[0 for _ in range(12)] for _ in range(4)]
    legend_check = [[random.random() for _ in range(12)] for _ in range(4)]

    random_pack_generator()
    
    global bkup_pack
    bkup_pack = copy.deepcopy(pack)

    main_draft_procedure()   


# In[32]:


def draft_program():
    global start_draft_btn
    start_draft_btn = Button(draft_tab, text='Start Draft', command=draft)
    start_draft_btn.pack(expand=True)


# In[33]:


def decks_program():
    global deck_buttons
    deck_buttons = Frame(decks_tab)
    deck_buttons.pack(side=RIGHT, fill=Y, expand=False)
    
    global deck_information
    deck_information = Frame(decks_tab)
    deck_information.pack(side=LEFT, fill=BOTH, expand=True)
    
    player_stats_btn = Button(deck_buttons, text='Player', command=lambda: gather_data(player_picks, 'Player'), height=3, width=32)
    player_stats_btn.grid(row=0, column=0, rowspan=2, columnspan=4)
    
    if settings_dict.get('pass_style')==0:
    
        botl1_stats_btn = Button(deck_buttons, text='Bot L1', command=lambda: gather_data(botl1[2], botl1[3][0]), height=1, width=7)
        botl1_stats_btn.grid(row=2, column=0)

        botl2_stats_btn = Button(deck_buttons, text='Bot L2', command=lambda: gather_data(botl2[2], botl2[3][0]), height=1, width=7)
        botl2_stats_btn.grid(row=3, column=0)

        botl3_stats_btn = Button(deck_buttons, text='Bot L3', command=lambda: gather_data(botl3[2], botl3[3][0]), height=1, width=7)
        botl3_stats_btn.grid(row=4, column=0)

        botl4_stats_btn = Button(deck_buttons, text='Bot L4', command=lambda: gather_data(botl4[2], botl4[3][0]), height=1, width=7)
        botl4_stats_btn.grid(row=5, column=0)

        botl5_stats_btn = Button(deck_buttons, text='Bot L5', command=lambda: gather_data(botl5[2], botl5[3][0]), height=1, width=7)
        botl5_stats_btn.grid(row=6, column=0)

        botl6_stats_btn = Button(deck_buttons, text='Bot L6', command=lambda: gather_data(botl6[2], botl6[3][0]), height=1, width=7)
        botl6_stats_btn.grid(row=7, column=0)

        botl7_stats_btn = Button(deck_buttons, text='Bot L7', command=lambda: gather_data(botl7[2], botl7[3][0]), height=1, width=7)
        botl7_stats_btn.grid(row=8, column=0)

        botl8_stats_btn = Button(deck_buttons, text='Bot L8', command=lambda: gather_data(botl8[2], botl8[3][0]), height=1, width=7)
        botl8_stats_btn.grid(row=9, column=0)

        botl9_stats_btn = Button(deck_buttons, text='Bot L9', command=lambda: gather_data(botl9[2], botl9[3][0]), height=1, width=7)
        botl9_stats_btn.grid(row=10, column=0)

        botl10_stats_btn = Button(deck_buttons, text='Bot L10', command=lambda: gather_data(botl10[2], botl10[3][0]), height=1, width=7)
        botl10_stats_btn.grid(row=11, column=0)

        botl11_stats_btn = Button(deck_buttons, text='Bot L11', command=lambda: gather_data(botl11[2], botl11[3][0]), height=1, width=7)
        botl11_stats_btn.grid(row=12, column=0)

        botr1_stats_btn = Button(deck_buttons, text='Bot R1', command=lambda: gather_data(botr1[2], botr1[3][0]), height=1, width=7)
        botr1_stats_btn.grid(row=2, column=1)

        botr2_stats_btn = Button(deck_buttons, text='Bot R2', command=lambda: gather_data(botr2[2], botr2[3][0]), height=1, width=7)
        botr2_stats_btn.grid(row=3, column=1)

        botr3_stats_btn = Button(deck_buttons, text='Bot R3', command=lambda: gather_data(botr3[2], botr3[3][0]), height=1, width=7)
        botr3_stats_btn.grid(row=4, column=1)

        botr4_stats_btn = Button(deck_buttons, text='Bot R4', command=lambda: gather_data(botr4[2], botr4[3][0]), height=1, width=7)
        botr4_stats_btn.grid(row=5, column=1)

        botr5_stats_btn = Button(deck_buttons, text='Bot R5', command=lambda: gather_data(botr5[2], botr5[3][0]), height=1, width=7)
        botr5_stats_btn.grid(row=6, column=1)

        botr6_stats_btn = Button(deck_buttons, text='Bot R6', command=lambda: gather_data(botr6[2], botr6[3][0]), height=1, width=7)
        botr6_stats_btn.grid(row=7, column=1)

        botr7_stats_btn = Button(deck_buttons, text='Bot R7', command=lambda: gather_data(botr7[2], botr7[3][0]), height=1, width=7)
        botr7_stats_btn.grid(row=8, column=1)

        botr8_stats_btn = Button(deck_buttons, text='Bot R8', command=lambda: gather_data(botr8[2], botr8[3][0]), height=1, width=7)
        botr8_stats_btn.grid(row=9, column=1)

        botr9_stats_btn = Button(deck_buttons, text='Bot R9', command=lambda: gather_data(botr9[2], botr9[3][0]), height=1, width=7)
        botr9_stats_btn.grid(row=10, column=1)

        botr10_stats_btn = Button(deck_buttons, text='Bot R10', command=lambda: gather_data(botr10[2], botr10[3][0]), height=1, width=7)
        botr10_stats_btn.grid(row=11, column=1)

        botr11_stats_btn = Button(deck_buttons, text='Bot R11', command=lambda: gather_data(botr11[2], botr11[3][0]), height=1, width=7)
        botr11_stats_btn.grid(row=12, column=1)

        botu1_stats_btn = Button(deck_buttons, text='Bot U1', command=lambda: gather_data(botu1[2], botu1[3][0]), height=1, width=7)
        botu1_stats_btn.grid(row=2, column=2)

        botu2_stats_btn = Button(deck_buttons, text='Bot U2', command=lambda: gather_data(botu2[2], botu2[3][0]), height=1, width=7)
        botu2_stats_btn.grid(row=3, column=2)

        botu3_stats_btn = Button(deck_buttons, text='Bot U3', command=lambda: gather_data(botu3[2], botu3[3][0]), height=1, width=7)
        botu3_stats_btn.grid(row=4, column=2)

        botu4_stats_btn = Button(deck_buttons, text='Bot U4', command=lambda: gather_data(botu4[2], botu4[3][0]), height=1, width=7)
        botu4_stats_btn.grid(row=5, column=2)

        botu5_stats_btn = Button(deck_buttons, text='Bot U5', command=lambda: gather_data(botu5[2], botu5[3][0]), height=1, width=7)
        botu5_stats_btn.grid(row=6, column=2)

        botu6_stats_btn = Button(deck_buttons, text='Bot U6', command=lambda: gather_data(botu6[2], botu6[3][0]), height=1, width=7)
        botu6_stats_btn.grid(row=7, column=2)

        botu7_stats_btn = Button(deck_buttons, text='Bot U7', command=lambda: gather_data(botu7[2], botu7[3][0]), height=1, width=7)
        botu7_stats_btn.grid(row=8, column=2)

        botu8_stats_btn = Button(deck_buttons, text='Bot U8', command=lambda: gather_data(botu8[2], botu8[3][0]), height=1, width=7)
        botu8_stats_btn.grid(row=9, column=2)

        botu9_stats_btn = Button(deck_buttons, text='Bot U9', command=lambda: gather_data(botu9[2], botu9[3][0]), height=1, width=7)
        botu9_stats_btn.grid(row=10, column=2)

        botu10_stats_btn = Button(deck_buttons, text='Bot U10', command=lambda: gather_data(botu10[2], botu10[3][0]), height=1, width=7)
        botu10_stats_btn.grid(row=11, column=2)

        botu11_stats_btn = Button(deck_buttons, text='Bot U11', command=lambda: gather_data(botu11[2], botu11[3][0]), height=1, width=7)
        botu11_stats_btn.grid(row=12, column=2)

        botb1_stats_btn = Button(deck_buttons, text='Bot B1', command=lambda: gather_data(botb1[2], botb1[3][0]), height=1, width=7)
        botb1_stats_btn.grid(row=2, column=3)

        botb2_stats_btn = Button(deck_buttons, text='Bot B2', command=lambda: gather_data(botb2[2], botb2[3][0]), height=1, width=7)
        botb2_stats_btn.grid(row=3, column=3)

        botb3_stats_btn = Button(deck_buttons, text='Bot B3', command=lambda: gather_data(botb3[2], botb3[3][0]), height=1, width=7)
        botb3_stats_btn.grid(row=4, column=3)

        botb4_stats_btn = Button(deck_buttons, text='Bot B4', command=lambda: gather_data(botb4[2], botb4[3][0]), height=1, width=7)
        botb4_stats_btn.grid(row=5, column=3)

        botb5_stats_btn = Button(deck_buttons, text='Bot B5', command=lambda: gather_data(botb5[2], botb5[3][0]), height=1, width=7)
        botb5_stats_btn.grid(row=6, column=3)

        botb6_stats_btn = Button(deck_buttons, text='Bot B6', command=lambda: gather_data(botb6[2], botb6[3][0]), height=1, width=7)
        botb6_stats_btn.grid(row=7, column=3)

        botb7_stats_btn = Button(deck_buttons, text='Bot B7', command=lambda: gather_data(botb7[2], botb7[3][0]), height=1, width=7)
        botb7_stats_btn.grid(row=8, column=3)

        botb8_stats_btn = Button(deck_buttons, text='Bot B8', command=lambda: gather_data(botb8[2], botb8[3][0]), height=1, width=7)
        botb8_stats_btn.grid(row=9, column=3)

        botb9_stats_btn = Button(deck_buttons, text='Bot B9', command=lambda: gather_data(botb9[2], botb9[3][0]), height=1, width=7)
        botb9_stats_btn.grid(row=10, column=3)

        botb10_stats_btn = Button(deck_buttons, text='Bot B10', command=lambda: gather_data(botb10[2], botb10[3][0]), height=1, width=7)
        botb10_stats_btn.grid(row=11, column=3)

        botb11_stats_btn = Button(deck_buttons, text='Bot B11', command=lambda: gather_data(botb11[2], botb11[3][0]), height=1, width=7)
        botb11_stats_btn.grid(row=12, column=3)
    
    if settings_dict.get('pass_style')==1:
    
        botl1_stats_btn = Button(deck_buttons, text='Bot L1', command=lambda: gather_data(botl1[2], botl1[3][0]), height=1, width=15)
        botl1_stats_btn.grid(row=2, column=0)

        botl2_stats_btn = Button(deck_buttons, text='Bot L2', command=lambda: gather_data(botl2[2], botl1[3][0]), height=1, width=15)
        botl2_stats_btn.grid(row=3, column=0)

        botl3_stats_btn = Button(deck_buttons, text='Bot L3', command=lambda: gather_data(botl3[2], botl1[3][0]), height=1, width=15)
        botl3_stats_btn.grid(row=4, column=0)

        botl4_stats_btn = Button(deck_buttons, text='Bot L4', command=lambda: gather_data(botl4[2], botl1[3][0]), height=1, width=15)
        botl4_stats_btn.grid(row=5, column=0)

        botl5_stats_btn = Button(deck_buttons, text='Bot L5', command=lambda: gather_data(botl5[2], botl1[3][0]), height=1, width=15)
        botl5_stats_btn.grid(row=6, column=0)

        botl6_stats_btn = Button(deck_buttons, text='Bot L6', command=lambda: gather_data(botl6[2], botl1[3][0]), height=1, width=15)
        botl6_stats_btn.grid(row=7, column=0)

        botl7_stats_btn = Button(deck_buttons, text='Bot L7', command=lambda: gather_data(botl7[2], botl1[3][0]), height=1, width=15)
        botl7_stats_btn.grid(row=8, column=0)

        botl8_stats_btn = Button(deck_buttons, text='Bot L8', command=lambda: gather_data(botl8[2], botl1[3][0]), height=1, width=15)
        botl8_stats_btn.grid(row=9, column=0)

        botl9_stats_btn = Button(deck_buttons, text='Bot L9', command=lambda: gather_data(botl9[2], botl1[3][0]), height=1, width=15)
        botl9_stats_btn.grid(row=10, column=0)

        botl10_stats_btn = Button(deck_buttons, text='Bot L10', command=lambda: gather_data(botl10[2], botl1[3][0]), height=1, width=15)
        botl10_stats_btn.grid(row=11, column=0)

        botl11_stats_btn = Button(deck_buttons, text='Bot L11', command=lambda: gather_data(botl11[2], botl1[3][0]), height=1, width=15)
        botl11_stats_btn.grid(row=12, column=0)

        botr1_stats_btn = Button(deck_buttons, text='Bot R1', command=lambda: gather_data(botr1[2], botr1[3][0]), height=1, width=15)
        botr1_stats_btn.grid(row=2, column=1)

        botr2_stats_btn = Button(deck_buttons, text='Bot R2', command=lambda: gather_data(botr2[2], botr2[3][0]), height=1, width=15)
        botr2_stats_btn.grid(row=3, column=1)

        botr3_stats_btn = Button(deck_buttons, text='Bot R3', command=lambda: gather_data(botr3[2], botr3[3][0]), height=1, width=15)
        botr3_stats_btn.grid(row=4, column=1)

        botr4_stats_btn = Button(deck_buttons, text='Bot R4', command=lambda: gather_data(botr4[2], botr4[3][0]), height=1, width=15)
        botr4_stats_btn.grid(row=5, column=1)

        botr5_stats_btn = Button(deck_buttons, text='Bot R5', command=lambda: gather_data(botr5[2], botr5[3][0]), height=1, width=15)
        botr5_stats_btn.grid(row=6, column=1)

        botr6_stats_btn = Button(deck_buttons, text='Bot R6', command=lambda: gather_data(botr6[2], botr6[3][0]), height=1, width=15)
        botr6_stats_btn.grid(row=7, column=1)

        botr7_stats_btn = Button(deck_buttons, text='Bot R7', command=lambda: gather_data(botr7[2], botr7[3][0]), height=1, width=15)
        botr7_stats_btn.grid(row=8, column=1)

        botr8_stats_btn = Button(deck_buttons, text='Bot R8', command=lambda: gather_data(botr8[2], botr8[3][0]), height=1, width=15)
        botr8_stats_btn.grid(row=9, column=1)

        botr9_stats_btn = Button(deck_buttons, text='Bot R9', command=lambda: gather_data(botr9[2], botr9[3][0]), height=1, width=15)
        botr9_stats_btn.grid(row=10, column=1)

        botr10_stats_btn = Button(deck_buttons, text='Bot R10', command=lambda: gather_data(botr10[2], botr10[3][0]), height=1, width=15)
        botr10_stats_btn.grid(row=11, column=1)

        botr11_stats_btn = Button(deck_buttons, text='Bot R11', command=lambda: gather_data(botr11[2], botr11[3][0]), height=1, width=15)
        botr11_stats_btn.grid(row=12, column=1)
    
    if settings_dict.get('pass_style')==2:
    
        botl1_stats_btn = Button(deck_buttons, text='Bot L1', command=lambda: gather_data(botl1[2], botl1[3][0]), height=1, width=32)
        botl1_stats_btn.grid(row=2, column=0)

        botl2_stats_btn = Button(deck_buttons, text='Bot L2', command=lambda: gather_data(botl2[2], botl2[3][0]), height=1, width=32)
        botl2_stats_btn.grid(row=3, column=0)

        botl3_stats_btn = Button(deck_buttons, text='Bot L3', command=lambda: gather_data(botl3[2], botl3[3][0]), height=1, width=32)
        botl3_stats_btn.grid(row=4, column=0)

        botl4_stats_btn = Button(deck_buttons, text='Bot L4', command=lambda: gather_data(botl4[2], botl4[3][0]), height=1, width=32)
        botl4_stats_btn.grid(row=5, column=0)

        botl5_stats_btn = Button(deck_buttons, text='Bot L5', command=lambda: gather_data(botl5[2], botl5[3][0]), height=1, width=32)
        botl5_stats_btn.grid(row=6, column=0)

        botl6_stats_btn = Button(deck_buttons, text='Bot L6', command=lambda: gather_data(botl6[2], botl6[3][0]), height=1, width=32)
        botl6_stats_btn.grid(row=7, column=0)

        botl7_stats_btn = Button(deck_buttons, text='Bot L7', command=lambda: gather_data(botl7[2], botl7[3][0]), height=1, width=32)
        botl7_stats_btn.grid(row=8, column=0)

        botl8_stats_btn = Button(deck_buttons, text='Bot L8', command=lambda: gather_data(botl8[2], botl8[3][0]), height=1, width=32)
        botl8_stats_btn.grid(row=9, column=0)

        botl9_stats_btn = Button(deck_buttons, text='Bot L9', command=lambda: gather_data(botl9[2], botl9[3][0]), height=1, width=32)
        botl9_stats_btn.grid(row=10, column=0)

        botl10_stats_btn = Button(deck_buttons, text='Bot L10', command=lambda: gather_data(botl10[2], botl10[3][0]), height=1, width=32)
        botl10_stats_btn.grid(row=11, column=0)

        botl11_stats_btn = Button(deck_buttons, text='Bot L11', command=lambda: gather_data(botl11[2], botl11[3][0]), height=1, width=32)
        botl11_stats_btn.grid(row=12, column=0)


# In[34]:


def settings_program():
    global settings_frame_holder
    settings_frame_holder = Frame(settings_tab)
    settings_frame_holder.grid(row=0, column=0, sticky=N+W)
    
    format_frame = Frame(settings_frame_holder)
    format_frame.grid(row=0, column=0, sticky=N+W)
    
    format_lbl = Label(format_frame, text='Draft Format:', font='Helvetica 18 bold')
    format_lbl.grid(row=0, column=0, sticky=N+W)
    
    global format_box
    format_box = ttk.Combobox(format_frame, values=data_dict.get('format_name'), width=30)
    format_box.grid(row=1, column=0)
    format_box.current(settings_dict.get('format_used'))
    
    global promo_var
    promo_var = BooleanVar()
    promo_var.set(settings_dict.get('use_promos'))
    promo_chk = Checkbutton(format_frame, text='Use Promos?', variable=promo_var)
    promo_chk.grid(row=2, column=0, padx=5, pady=5, sticky=E)
    
    global unnumbered_var
    unnumbered_var = BooleanVar()
    unnumbered_var.set(settings_dict.get('use_unnumbered'))
    unnumbered_chk = Checkbutton(format_frame, text='Use unnumbered tokens?', variable=unnumbered_var)
    unnumbered_chk.grid(row=2, column=1, padx=5, pady=5)
    
    global cube_var
    cube_var = BooleanVar()
    cube_var.set(settings_dict.get('cubify'))
    cube_chk = Checkbutton(format_frame, text='Use set as a Cube?', variable=cube_var)
    cube_chk.grid(row=2, column=2, padx=5, pady=5)
    
    ranking_frame = Frame(settings_frame_holder)
    ranking_frame.grid(row=2, column=0, sticky=N+W)
    
    ranking_lbl = Label(ranking_frame, text='Card ratings to use:', font='Helvetica 18 bold')
    ranking_lbl.grid(row=0, column=0, sticky=N+W)
    
    global ranking_file
    ranking_file = Entry(ranking_frame, width=40)
    ranking_file.grid(row=1, column=0, sticky=N+W)
    ranking_file.insert(0, settings_dict.get('ranking_used'))
    
    ranking_btn = Button(ranking_frame, text='Select file', command=open_file)
    ranking_btn.grid(row=1, column=1, sticky=N+W)
    
    global update_var
    update_var = BooleanVar()
    update_var.set(settings_dict.get('update_ranking_check'))
    update_ranking_chk = Checkbutton(ranking_frame, text='Update bots with player choices?', variable=update_var)
    update_ranking_chk.grid(row=2, column=0, sticky=N+W)
    
    reset_ranking_btn = Button(ranking_frame, text='Reset Bot Rankings', command=reset_dbl_check)
    reset_ranking_btn.grid(row=2, column=1, padx=8, pady=8)
    
    pass_style_frame = Frame(settings_frame_holder)
    pass_style_frame.grid(row=4, column=0, sticky=N+W)
    
    pass_lbl = Label(pass_style_frame, text='Pass Style:', font='Helvetica 18 bold')
    pass_lbl.grid(row=0, column=0, sticky=N+W)
    
    global pass_style_var
    pass_style_var = IntVar()
    pass_style_var.set(settings_dict.get('pass_style'))
    cross_style = Radiobutton(pass_style_frame, text='Cross (Standard)', variable=pass_style_var, value=0)
    cross_style.grid(row=1, column=0, sticky=N+W)
    linear_style = Radiobutton(pass_style_frame, text='Linear     ', variable=pass_style_var, value=1)
    linear_style.grid(row=1, column=1, sticky=N+W)
    round_style = Radiobutton(pass_style_frame, text='Round', variable=pass_style_var, value=2)
    round_style.grid(row=1, column=2, sticky=N+W)
    
    bot_choice_frame = Frame(settings_frame_holder)
    bot_choice_frame.grid(row=6, column=0, sticky=N+W)
    
    bot_choice_lbl = Label(bot_choice_frame, text='Bot Choices:', font='Helvetica 18 bold')
    bot_choice_lbl.grid(row=0, column=0, sticky=N+W)
    
    bot_choice_btn = Button(bot_choice_frame, text='Choose Bots to Use', command=bot_window)
    bot_choice_btn.grid(row=1, column=0, sticky=N+W)
    
    space_lbl1 = Label(settings_frame_holder, text=' ', font='18')
    space_lbl1.grid(row=1, column=0)
    
    space_lbl2 = Label(settings_frame_holder, text=' ', font='18')
    space_lbl2.grid(row=3, column=0)
    
    space_lbl3 = Label(settings_frame_holder, text=' ', font='18')
    space_lbl3.grid(row=5, column=0)
    
    space_lbl3 = Label(settings_frame_holder, text=' ', font='18')
    space_lbl3.grid(row=7, column=0)
    
    save_btns_frame = Frame(settings_frame_holder)
    save_btns_frame.grid(row=8, column=0, sticky=S+W)
    
    save_settings_btn = Button(save_btns_frame, text='Save Changes', command=save_settings)
    save_settings_btn.pack(side=LEFT, padx=(5,10))
    
    reset_settings_btn = Button(save_btns_frame, text='Reset to Default', command=reset_settings)
    reset_settings_btn.pack(side=RIGHT)


# In[35]:


def frame_setup():
    nb = ttk.Notebook(root)
    
    global draft_tab
    global decks_tab
    global settings_tab
    
    draft_tab = ttk.Frame(nb, width=1205, height=450)
    decks_tab = ttk.Frame(nb, width=1205, height=500)
    settings_tab = ttk.Frame(nb, width=1205, height=450)
    
    nb.add(draft_tab, text='Draft')
    nb.add(decks_tab, text='Decks')
    nb.add(settings_tab, text='Settings')
    
    nb.pack(expand=True, fill=BOTH)
    
    draft_program()
    decks_program()
    settings_program()


# In[36]:


def open_file():
    output_file = filedialog.askopenfilename(parent=root, filetypes=[("Spreadsheets", '*.csv'), ("All files", "*")])
    ranking_file.delete(0, END)
    ranking_file.insert(0, output_file)


# In[37]:


def make_menu():

    menubar = Menu(root)

    draftmenu = Menu(menubar, tearoff=0)
    draftmenu.add_command(label='Save', command=save_draft)
    draftmenu.add_command(label='Load', command=load_draft)
    draftmenu.add_separator()
    draftmenu.add_command(label='Exit', command=confirm_exit)
    menubar.add_cascade(label='Draft', menu=draftmenu)

    addmenu = Menu(menubar, tearoff=0)
    addmenu.add_command(label='Format', command=add_format)
    addmenu.add_command(label='Set', command=add_set)
    addmenu.add_command(label='Bot', command=add_bot)
    addmenu.add_separator()
    addmenu.add_command(label='Delete', command=delete_window)
    menubar.add_cascade(label='Add', menu=addmenu)

    helpmenu = Menu(menubar, tearoff=0)
    helpmenu.add_command(label='Information', command=display_information)
    helpmenu.add_command(label='About', command=display_about)
    menubar.add_cascade(label='Help', menu=helpmenu)

    root.config(menu=menubar)


# In[38]:


def save_draft():
    global save_draft_window
    save_draft_window = Toplevel(root)
    save_draft_window.title('Save Draft')
    
    save_lbl = Label(save_draft_window, text='Coming Soon. \n(i.e. currently does not do anything)')
    save_lbl.pack()
    
    cancel_btn = Button(save_draft_window, text='Close', command=save_draft_window.destroy)
    cancel_btn.pack()


# In[39]:


def load_draft():
    global load_draft_window
    load_draft_window = Toplevel(root)
    load_draft_window.title('Load Draft')
    
    load_lbl = Label(load_draft_window, text='Coming Soon. \n(i.e. currently does not do anything)')
    load_lbl.pack()
    
    cancel_btn = Button(load_draft_window, text='Close', command=load_draft_window.destroy)
    cancel_btn.pack()


# In[40]:


def confirm_exit():
    if messagebox.askokcancel('Confirm Exit',"Are you sure that you want to quit?"):
        root.destroy()


# In[41]:


def add_format():
    
    global format_window
    format_window = Toplevel(root)
    format_window.title('Add New Format')
    
    window_lbl = Label(format_window, text='Define the New Format', font='Helvetica 12 bold')
    window_lbl.grid(row=0, column=0, sticky=N+W)
    
    new_format_lbl = Label(format_window, text='Name of the format:')
    new_format_lbl.grid(row=1, column=0, sticky=N+W)
    
    global new_format_name
    new_format_name = Entry(format_window, width=30)
    new_format_name.grid(row=2, column=0, sticky=N+W)
    
    space_lbl1 = Label(format_window, text=' ', font='18')
    space_lbl1.grid(row=3, column=0)
    
    format_set_lbl_frame = Frame(format_window)
    format_set_lbl_frame.grid(row=4, column=0, sticky=N+W)
    
    format_set_choose_lbl = Label(format_set_lbl_frame, text='                                           Choose Sets')
    format_set_choose_lbl.grid(row=0, column=0, padx=15)
    
    format_set_dir_lbl = Label(format_set_lbl_frame, text='                                               Passing Direction')
    format_set_dir_lbl.grid(row=0, column=1)

    global number_of_sets
    number_of_sets = 4
    
    make_set_boxes()
    
    space_lbl2 = Label(format_window, text=' ', font='18')
    space_lbl2.grid(row=6, column=0)
    
    nmbr_set_cntrl_frame = Frame(format_window)
    nmbr_set_cntrl_frame.grid(row=7, column=0)
    
    add_new_set_btn = Button(nmbr_set_cntrl_frame, text='Add Set', command=add_set_for_formats)
    add_new_set_btn.grid(row=0, column=0, sticky=N+W, padx=5)
    
    remove_set_btn = Button(nmbr_set_cntrl_frame, text='Remove Set', command=remove_set_for_formats)
    remove_set_btn.grid(row=0, column=1, sticky=N+W, padx=5)
    
    space_lbl3 = Label(format_window, text=' ', font='18')
    space_lbl3.grid(row=8, column=0)
    
    control_buttons_frame = Frame(format_window)
    control_buttons_frame.grid(row=9, column=0, sticky=E+S)
    
    save_format_btn = Button(control_buttons_frame, text='Save Format', command=save_new_format)
    save_format_btn.grid(row=0, column=0, sticky=N+W, padx=5)
    
    cancel_btn = Button(control_buttons_frame, text='Cancel', command=format_window.destroy)
    cancel_btn.grid(row=0, column=1, sticky=N+W, padx=5)


# In[42]:


def add_set_for_formats():
    global number_of_sets
    number_of_sets = number_of_sets + 1
    set_frame.destroy()
    make_set_boxes()


# In[43]:


def remove_set_for_formats():
    global number_of_sets
    number_of_sets = number_of_sets - 1
    set_frame.destroy()
    make_set_boxes()


# In[44]:


def make_set_boxes():
    
    global set_frame
    set_frame = Frame(format_window)
    set_frame.grid(row=5, column=0, sticky=N+W)
    
    global set_boxes
    mini_set_frames = []
    set_lbls = []
    set_boxes = []
    left_radios = []
    right_radios = []
    
    global set_direction_var
    set_direction_var = []
    
    for taa in range(number_of_sets):        
        mini_set_frames.append(Frame(set_frame))
        mini_set_frames[-1].pack(side=TOP)
        
        set_lbls.append(Label(mini_set_frames[-1], text=str(taa+1)+'.'))
        set_lbls[-1].pack(side=LEFT)
        
        set_boxes.append(ttk.Combobox(mini_set_frames[-1], values=data_dict.get('set_name'), width=50))
        set_boxes[-1].pack(side=LEFT, padx=5, pady=5)
        
        set_direction_var.append(IntVar())
        if len(set_direction_var) % 4 ==0 or len(set_direction_var) % 4 ==1:
            set_direction_var[-1].set(0)
        else:
            set_direction_var[-1].set(1)
        
        left_radios.append(Radiobutton(mini_set_frames[-1], text='Left', variable=set_direction_var[-1], value=0))
        right_radios.append(Radiobutton(mini_set_frames[-1], text='Right', variable=set_direction_var[-1], value=1))
        left_radios[-1].pack(side=LEFT, padx=5, pady=5)
        right_radios[-1].pack(side=LEFT, padx=5, pady=5)


# In[45]:


def save_new_format():
    new_format_code = 'f_'
    
    for baa in new_format_name.get():
        if str.isalnum(baa):
            new_format_code = new_format_code + str(baa)
        if str.isspace(baa):
            new_format_code = new_format_code + '_'
        
    new_format_code = new_format_code + '_f'
    
    new_format_sets = []
    new_format_directions = []
    for alif in range(number_of_sets):
        new_format_sets.append(data_dict.get('set_code')[set_boxes[alif].current()])
        if set_direction_var[alif].get()==0:
            new_format_directions.append('L')
        if set_direction_var[alif].get()==1:
            new_format_directions.append('R')    
        
    data_dict.get('format_name').append(new_format_name.get())
    data_dict.get('format_code').append(new_format_code)
    data_dict.get('format_sets').append(new_format_sets)
    data_dict.get('format_directions').append(new_format_directions)
    
    with open('data.json', 'w') as outfile:
        json.dump(data_dict, outfile)
        
    settings_frame_holder.destroy()
    format_window.destroy()
    settings_program()


# In[46]:


def add_set():
    global set_window
    set_window = Toplevel(root)
    set_window.title('Add New Set')
    
    window_lbl = Label(set_window, text='Define the New Set', font='Helvetica 12 bold')
    window_lbl.grid(row=0, column=0, sticky=N+W)
    
    new_set_lbl = Label(set_window, text='Name of the set:')
    new_set_lbl.grid(row=1, column=0, sticky=N+W)
    
    global new_set_name
    new_set_name = Entry(set_window, width=30)
    new_set_name.grid(row=2, column=0, sticky=N+W)
    
    space_lbl1 = Label(set_window, text=' ', font='18')
    space_lbl1.grid(row=3, column=0)
    
    set_text_lbl = Label(set_window, text='Import decklist here:')
    set_text_lbl.grid(row=4, column=0, sticky=N+W)
    
    set_text_frame = Frame(set_window)
    set_text_frame.grid(row=5, column=0, sticky=N+W)
    
    scrollbar = Scrollbar(set_text_frame)
    scrollbar.pack(side=RIGHT, fill=Y)
    
    global set_text_box
    set_text_box = Text(set_text_frame, height=30, width=50, yscrollcommand=scrollbar.set)
    set_text_box.pack(side=LEFT, fill=Y)
    
    control_buttons_frame = Frame(set_window)
    control_buttons_frame.grid(row=6, column=0, sticky=E+S)
    
    save_format_btn = Button(control_buttons_frame, text='Save Set', command=lambda: save_new_set())
    save_format_btn.grid(row=0, column=0, sticky=N+W, padx=5, pady=10)
    
    cancel_btn = Button(control_buttons_frame, text='Cancel', command=set_window.destroy)
    cancel_btn.grid(row=0, column=1, sticky=N+W, padx=5, pady=10)


# In[47]:


def add_bot():
    global add_bot_window
    add_bot_window = Toplevel(root)
    add_bot_window.title('Add New Bot')
    
    window_lbl = Label(add_bot_window, text='Define the New Bot', font='Helvetica 12 bold')
    window_lbl.grid(row=0, column=0, sticky=N+W)
    
    new_bot_name_lbl = Label(add_bot_window, text='Name of the bot: ')
    new_bot_name_lbl.grid(row=1, column=0, sticky=N+W)
    
    global new_bot_name
    new_bot_name = Entry(add_bot_window, width=30)
    new_bot_name.grid(row=2, column=0, sticky=N+W)
    
    space_lbl1 = Label(add_bot_window, text=' ', font='18')
    space_lbl1.grid(row=3, column=0)
    
    new_bot_color_lbl = Label(add_bot_window, text='Choose the factions liked and disliked: ')
    new_bot_color_lbl.grid(row=4, column=0, sticky=N+W)
    
    new_bot_color_grid = Frame(add_bot_window)
    new_bot_color_grid.grid(row=5, column=0, sticky=N+W)
    
    bot_like_lbl = Label(new_bot_color_grid, text='Like')
    bot_like_lbl.grid(row=1, column=0, sticky=N+W)
    
    bot_ambi_lbl = Label(new_bot_color_grid, text='None')
    bot_ambi_lbl.grid(row=2, column=0, sticky=N+W)
    
    bot_dis_lbl = Label(new_bot_color_grid, text='Dislike')
    bot_dis_lbl.grid(row=3, column=0, sticky=N+W)
    
    bot_fire_pref_lbl = Label(new_bot_color_grid, text=' Fire    ')
    bot_fire_pref_lbl.grid(row=0, column=1, sticky=N+W)
    
    bot_justice_pref_lbl = Label(new_bot_color_grid, text=' Justice ')
    bot_justice_pref_lbl.grid(row=0, column=2, sticky=N+W)
    
    bot_time_pref_lbl = Label(new_bot_color_grid, text=' Time    ')
    bot_time_pref_lbl.grid(row=0, column=3, sticky=N+W)
    
    bot_primal_pref_lbl = Label(new_bot_color_grid, text=' Primal  ')
    bot_primal_pref_lbl.grid(row=0, column=4, sticky=N+W)
    
    bot_shadow_pref_lbl = Label(new_bot_color_grid, text=' Shadow ')
    bot_shadow_pref_lbl.grid(row=0, column=5, sticky=N+W)
    
    global new_bot_fire_pref_var
    new_bot_fire_pref_var = IntVar()
    new_bot_fire_pref_var.set(1)
    bot_fire_like = Radiobutton(new_bot_color_grid, variable=new_bot_fire_pref_var, value=0)
    bot_fire_like.grid(row=1, column=1)
    bot_fire_ambi = Radiobutton(new_bot_color_grid, variable=new_bot_fire_pref_var, value=1)
    bot_fire_ambi.grid(row=2, column=1)
    bot_fire_dis = Radiobutton(new_bot_color_grid, variable=new_bot_fire_pref_var, value=2)
    bot_fire_dis.grid(row=3, column=1)
    
    global new_bot_justice_pref_var
    new_bot_justice_pref_var = IntVar()
    new_bot_justice_pref_var.set(1)
    bot_justice_like = Radiobutton(new_bot_color_grid, variable=new_bot_justice_pref_var, value=0)
    bot_justice_like.grid(row=1, column=2)
    bot_justice_ambi = Radiobutton(new_bot_color_grid, variable=new_bot_justice_pref_var, value=1)
    bot_justice_ambi.grid(row=2, column=2)
    bot_justice_dis = Radiobutton(new_bot_color_grid, variable=new_bot_justice_pref_var, value=2)
    bot_justice_dis.grid(row=3, column=2)
    
    global new_bot_time_pref_var
    new_bot_time_pref_var = IntVar()
    new_bot_time_pref_var.set(1)
    bot_time_like = Radiobutton(new_bot_color_grid, variable=new_bot_time_pref_var, value=0)
    bot_time_like.grid(row=1, column=3)
    bot_time_ambi = Radiobutton(new_bot_color_grid, variable=new_bot_time_pref_var, value=1)
    bot_time_ambi.grid(row=2, column=3)
    bot_time_dis = Radiobutton(new_bot_color_grid, variable=new_bot_time_pref_var, value=2)
    bot_time_dis.grid(row=3, column=3)
    
    global new_bot_primal_pref_var
    new_bot_primal_pref_var = IntVar()
    new_bot_primal_pref_var.set(1)
    bot_primal_like = Radiobutton(new_bot_color_grid, variable=new_bot_primal_pref_var, value=0)
    bot_primal_like.grid(row=1, column=4)
    bot_primal_ambi = Radiobutton(new_bot_color_grid, variable=new_bot_primal_pref_var, value=1)
    bot_primal_ambi.grid(row=2, column=4)
    bot_primal_dis = Radiobutton(new_bot_color_grid, variable=new_bot_primal_pref_var, value=2)
    bot_primal_dis.grid(row=3, column=4)
    
    global new_bot_shadow_pref_var
    new_bot_shadow_pref_var = IntVar()
    new_bot_shadow_pref_var.set(1)
    bot_shadow_like = Radiobutton(new_bot_color_grid, variable=new_bot_shadow_pref_var, value=0)
    bot_shadow_like.grid(row=1, column=5)
    bot_shadow_ambi = Radiobutton(new_bot_color_grid, variable=new_bot_shadow_pref_var, value=1)
    bot_shadow_ambi.grid(row=2, column=5)
    bot_shadow_dis = Radiobutton(new_bot_color_grid, variable=new_bot_shadow_pref_var, value=2)
    bot_shadow_dis.grid(row=3, column=5)
    
    space_lbl2 = Label(add_bot_window, text=' ', font='18')
    space_lbl2.grid(row=6, column=0)
    
    new_bot_number_lbl = Label(add_bot_window, text='Choose the number of factions that the bot tries to go into: ')
    new_bot_number_lbl.grid(row=7, column=0, sticky=N+W)
    
    new_bot_number_grid = Frame(add_bot_window)
    new_bot_number_grid.grid(row=8, column=0, sticky=N+W)
    
    global new_bot_number_pref_var
    new_bot_number_pref_var = IntVar()
    new_bot_number_pref_var.set(1)
    bot_number_1 = Radiobutton(new_bot_number_grid, text = '1', variable=new_bot_number_pref_var, value=0)
    bot_number_1.grid(row=0, column=0, sticky=N+W)
    bot_number_2 = Radiobutton(new_bot_number_grid, text = '2', variable=new_bot_number_pref_var, value=1)
    bot_number_2.grid(row=0, column=1, sticky=N+W)
    bot_number_3 = Radiobutton(new_bot_number_grid, text = '3', variable=new_bot_number_pref_var, value=2)
    bot_number_3.grid(row=0, column=2, sticky=N+W)
    bot_number_4 = Radiobutton(new_bot_number_grid, text = '4', variable=new_bot_number_pref_var, value=3)
    bot_number_4.grid(row=0, column=3, sticky=N+W)
    bot_number_5 = Radiobutton(new_bot_number_grid, text = '5', variable=new_bot_number_pref_var, value=4)
    bot_number_5.grid(row=0, column=4, sticky=N+W)
    
    space_lbl3 = Label(add_bot_window, text=' ', font='18')
    space_lbl3.grid(row=9, column=0)
    
    new_bot_style_lbl = Label(add_bot_window, text='Choose the style of play for the bot: ')
    new_bot_style_lbl.grid(row=10, column=0, sticky=N+W)
    
    new_bot_style_grid = Frame(add_bot_window)
    new_bot_style_grid.grid(row=11, column=0, sticky=N+W)
    
    global new_bot_style_pref_var
    new_bot_style_pref_var = IntVar()
    new_bot_style_pref_var.set(1)
    bot_style_aggro = Radiobutton(new_bot_style_grid, text = 'Aggro', variable=new_bot_style_pref_var, value=0)
    bot_style_aggro.grid(row=0, column=0, sticky=N+W)
    bot_style_mid = Radiobutton(new_bot_style_grid, text = 'Midrange', variable=new_bot_style_pref_var, value=1)
    bot_style_mid.grid(row=0, column=1, sticky=N+W)
    bot_style_control = Radiobutton(new_bot_style_grid, text = 'Control', variable=new_bot_style_pref_var, value=2)
    bot_style_control.grid(row=0, column=2, sticky=N+W)
    
    space_lbl4 = Label(add_bot_window, text=' ', font='18')
    space_lbl4.grid(row=12, column=0)
    
    new_bot_rarity_lbl = Label(add_bot_window, text='Choose the rarity preferences for the bot: ')
    new_bot_rarity_lbl.grid(row=13, column=0, sticky=N+W)
    
    new_bot_rarity_grid = Frame(add_bot_window)
    new_bot_rarity_grid.grid(row=14, column=0, sticky=N+W)
    
    global new_bot_rarity_pref_var
    new_bot_rarity_pref_var = IntVar()
    new_bot_rarity_pref_var.set(1)
    bot_rarity_prince = Radiobutton(new_bot_rarity_grid, text = 'Rares', variable=new_bot_rarity_pref_var, value=0)
    bot_rarity_prince.grid(row=0, column=0, sticky=N+W)
    bot_rarity_none = Radiobutton(new_bot_rarity_grid, text = 'No Preference', variable=new_bot_rarity_pref_var, value=1)
    bot_rarity_none.grid(row=0, column=1, sticky=N+W)
    bot_rarity_pauper = Radiobutton(new_bot_rarity_grid, text = 'Commons', variable=new_bot_rarity_pref_var, value=2)
    bot_rarity_pauper.grid(row=0, column=2, sticky=N+W)
    
    space_lbl5 = Label(add_bot_window, text=' ', font='18')
    space_lbl5.grid(row=15, column=0)
    
    control_buttons_frame = Frame(add_bot_window)
    control_buttons_frame.grid(row=16, column=0, sticky=E+S)
    
    save_format_btn = Button(control_buttons_frame, text='Save Bot', command=lambda: save_new_bot())
    save_format_btn.grid(row=0, column=0, sticky=N+W, padx=5, pady=10)
    
    cancel_btn = Button(control_buttons_frame, text='Cancel', command=add_bot_window.destroy)
    cancel_btn.grid(row=0, column=1, sticky=N+W, padx=5, pady=10)


# In[48]:


def save_new_bot(): 
    
    color_number_preferenc_arrays = [[1.0,0.3,0.3,0.1,0.1],[1.0,1.0,0.3,0.1,0.1],[1.0,1.0,1.0,0.2,0.1],[1.0,1.0,1.0,1.0,0.1],[1.0,1.0,1.0,1.0,1.0]]
    nw_bt_nm = str(new_bot_name.get())
    
    nw_bt_fctns = [0.0,0.0,0.0,0.0,0.0]
    
    nw_bt_fire = new_bot_fire_pref_var.get()
    if nw_bt_fire==0:
        nw_bt_fctns[0] = 0.1
    if nw_bt_fire==2:
        nw_bt_fctns[0] = -0.1
        
    nw_bt_justice = new_bot_justice_pref_var.get()
    if nw_bt_justice==0:
        nw_bt_fctns[1] = 0.1
    if nw_bt_justice==2:
        nw_bt_fctns[1] = -0.1
        
    nw_bt_time = new_bot_time_pref_var.get()
    if nw_bt_time==0:
        nw_bt_fctns[2] = 0.1
    if nw_bt_time==2:
        nw_bt_fctns[2] = -0.1
        
    nw_bt_primal = new_bot_primal_pref_var.get()
    if nw_bt_primal==0:
        nw_bt_fctns[3] = 0.1
    if nw_bt_primal==2:
        nw_bt_fctns[3] = -0.1
        
    nw_bt_shadow = new_bot_shadow_pref_var.get()
    if nw_bt_shadow==0:
        nw_bt_fctns[4] = 0.1
    if nw_bt_shadow==2:
        nw_bt_fctns[4] = -0.1
        
    nw_bt_style = [0,0]
    nw_bt_stl_pref= new_bot_style_pref_var.get()
    if nw_bt_stl_pref==0:
        nw_bt_style[0] = 1
    if nw_bt_stl_pref==2:
        nw_bt_style[1] = 1
        
    nw_bt_rare = [0,0]
    nw_bt_rr_pref= new_bot_rarity_pref_var.get()
    if nw_bt_rr_pref==0:
        nw_bt_rare[1] = 1
    if nw_bt_rr_pref==2:
        nw_bt_rare[0] = 1
        
    new_bot_dict = {nw_bt_nm:[[0.0,0.0,0.0,0.0,0.0],color_number_preferenc_arrays[new_bot_number_pref_var.get()],[],[nw_bt_nm,nw_bt_fctns,new_bot_number_pref_var.get()+1,nw_bt_style,nw_bt_rare]]}

    bot_dict.update(new_bot_dict)
    
    with open('bot.json', 'w') as outfile:
        json.dump(bot_dict, outfile)
        
    add_bot_window.destroy()


# In[49]:


def display_information():
    global information_window
    information_window = Toplevel(root)
    information_window.title('Information')
    
    info_lbl = Label(information_window, text='Coming Soon.')
    info_lbl.pack()
    
    cancel_btn = Button(information_window, text='Close', command=information_window.destroy)
    cancel_btn.pack()


# In[50]:


def display_about():
    global about_window
    about_window = Toplevel(root)
    about_window.title('About Eternal Draft Simulator')
    
    about_lbl = Text(about_window, wrap=WORD, height=3)
    about_lbl.tag_configure("center", justify='center')
    about_lbl.insert(INSERT, "Eternal Draft Simulator (v1.4) \n by: Robert Foster (aka: Xi550, astroknitter)")
    about_lbl.tag_add("center", INSERT, "end")
    about_lbl2 = Text(about_window, wrap=WORD, height=10)
    about_lbl2.insert(INSERT, "This program is intended to simulate a draft for the game Eternal. It is not affiliated with Eternal or Dire Wolf Digital in any way. This is just a fan-made project, intended for use by the community. All assets from Eternal are property of Dire Wolf Digital. All copyrighted material, images, and ideas belong to Dire Wolf Digital. This simulator is in no way intended to compete with the original game, and is simply a way to express love for the game, to provide a place to practice, and to spread awareness of the original. If you have never played Eternal, download it and play it! It is a great game. Visit https://www.direwolfdigital.com/eternal/ for more information.")
    about_lbl3 = Text(about_window, wrap=WORD, height=4)
    about_lbl3.insert(INSERT, "The images and JSON files used as the basis of the drafter are taken from Eternal Warcry; https://eternalwarcry.com/. Please visit and use this website, as it is also great.")
    about_lbl4 = Text(about_window, wrap=WORD, height=5)
    about_lbl4.insert(INSERT, "Many card ratings used are from Farming Eternal; http://farmingeternal.azurewebsites.net/. This is a great podcast and community. The ratings themselves are taken from Ben's metrics. Thank you all very much!")
    about_lbl5 = Text(about_window, wrap=WORD, height=3)
    about_lbl5.insert(INSERT, "Feel free to provide feedback on GitHub (http://github.com/robertfoster550/Eternal_Draft_Simulator) or anywhere else you can reach me.")
    about_lbl.pack()
    about_lbl2.pack()
    about_lbl3.pack()
    about_lbl4.pack()
    about_lbl5.pack()
    
    cancel_btn = Button(about_window, text='Close', command=about_window.destroy)
    cancel_btn.pack()


# In[51]:


def delete_window():
    global delete_window
    delete_window = Toplevel(root)
    delete_window.title('Remove Sets, Formats, and Bots')
    
    dlt_lbl = Label(delete_window, text='Coming Soon. \n Sorry.')
    dlt_lbl.pack()
    
    cancel_btn = Button(delete_window, text='Close', command=delete_window.destroy)
    cancel_btn.pack()


# In[52]:


def save_new_set():
    
    global inputValue
    global num_of_copies
    global set_num
    global card_num
    global new_set
    inputValue = []
    num_of_copies = []
    set_num = []
    card_num = []
    new_set = []
    
    new_set_code = 's_'
    
    for jiim in new_set_name.get():
        if str.isalnum(jiim):
            new_set_code = new_set_code + str(jiim)
        if str.isspace(jiim):
            new_set_code = new_set_code + '_'
        
    new_set_code = new_set_code + '_s'
    
    make_set_arrays()
            
    new_set_common, new_set_uncommon, new_set_rare, new_set_legendary, new_set_promo, new_set_none = rarity_determiner(new_set)
    sorted_new_set = [new_set_common, new_set_uncommon, new_set_rare, new_set_legendary, new_set_promo, new_set_none]
    
    data_dict.get('set_name').append(new_set_name.get())
    data_dict.get('set_code').append(new_set_code)
    data_dict.get('set_cards').append(sorted_new_set)
    data_dict.get('set_boosts').append([[],[],[],[],[],[]])
    data_dict.get('set_boost_about').append(0)
    
    with open('data.json', 'w') as outfile:
        json.dump(data_dict, outfile)

    set_window.destroy()


# In[53]:


def make_set_arrays():
    
    for baa in range(int(set_text_box.index('end-1c').split('.')[0])):
        inputValue.append(set_text_box.get(str(baa+1)+'.0', str(baa+1)+'.end'))
        num_of_copies.append(inputValue[-1].split(' ')[0])
        set_num.append(inputValue[-1].split('(Set')[1].split(' ')[0])
        card_num.append(inputValue[-1].split('#')[1][0:-1])
        
    for thaa in range(len(card_num)):
        for _ in range(int(num_of_copies[thaa])):
            card_key = str(set_num[thaa]) + '-' + str(card_num[thaa])
            new_set.append(card_key)


# In[63]:


root = Tk()
root.title('Eternal Draft Simulator')
root.geometry("1210x550")
read_settings()
read_formats()
make_menu()
frame_setup()
root.mainloop()


# In[55]:


### Version 1.4 ###
"""
Made it so Bot deck buttons change depending on the pass style.
Added personality qualities; color preferences, tempo preference, rarity preference.
Added bot options; allowing you to change them.
Added name to stats page.
Added cube options. The set MUST have at least 144 cards per pack (576 for standard 4 set drafts), or the app will crash.
Can now add promos and unnumbered cards if desired.
Added saveable data arrays for the formats and sets.
Added menues, and a way to add formats and sets.
Sets must have at least one card of each faction, and if being used as a regular set, needs at least 1 legendary, 1 rare, 3 uncommons, and 9 commons.
Added Set 7b, and updated curated pick amounts, to reflect in-game rates.
"""

